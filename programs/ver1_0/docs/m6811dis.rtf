{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f4\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Times;}
{\f5\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helvetica;}{\f6\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Courier;}{\f7\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Geneva;}
{\f8\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Tms Rmn;}{\f9\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helv;}{\f10\froman\fcharset0\fprq2{\*\panose 00000000000000000000}MS Serif;}
{\f11\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}MS Sans Serif;}{\f12\froman\fcharset0\fprq2{\*\panose 00000000000000000000}New York;}{\f13\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}System;}
{\f14\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings;}{\f15\fswiss\fcharset0\fprq3{\*\panose 020b0604030504040204}Tahoma;}{\f16\froman\fcharset238\fprq2 Times New Roman CE;}{\f17\froman\fcharset204\fprq2 Times New Roman Cyr;}
{\f19\froman\fcharset161\fprq2 Times New Roman Greek;}{\f20\froman\fcharset162\fprq2 Times New Roman Tur;}{\f21\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f22\fswiss\fcharset238\fprq2 Arial CE;}{\f23\fswiss\fcharset204\fprq2 Arial Cyr;}
{\f25\fswiss\fcharset161\fprq2 Arial Greek;}{\f26\fswiss\fcharset162\fprq2 Arial Tur;}{\f27\fswiss\fcharset186\fprq2 Arial Baltic;}{\f28\fmodern\fcharset238\fprq1 Courier New CE;}{\f29\fmodern\fcharset204\fprq1 Courier New Cyr;}
{\f31\fmodern\fcharset161\fprq1 Courier New Greek;}{\f32\fmodern\fcharset162\fprq1 Courier New Tur;}{\f33\fmodern\fcharset186\fprq1 Courier New Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;
\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;
\red192\green192\blue192;}{\stylesheet{\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid \snext0 Normal;}{\s1\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\ls1\adjustright \b\f1\fs28\cgrid \sbasedon0 \snext0 heading 1;}{
\s2\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\ls1\ilvl1\adjustright \b\i\f1\cgrid \sbasedon0 \snext0 heading 2;}{\s3\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\ls1\ilvl2\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}{
\s4\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\adjustright \f1\cgrid \sbasedon0 \snext0 heading 4;}{\s5\qc\keepn\nowidctlpar\widctlpar\hyphpar0\adjustright \b\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}{\*
\cs15 \additive \super \sbasedon10 footnote reference;}{\*\cs16 \additive \fs24 WW-Absatz-Standardschriftart;}{\*\cs17 \additive \fs24\super \sbasedon16 Footnote Symbol;}{\*\cs18 \additive \fs24 WW-Default Paragraph Font;}{\*\cs19 \additive \fs24\ul\cf2 
\sbasedon18 WW-Hyperlink;}{\*\cs20 \additive \fs24\ul\cf12 \sbasedon18 WW-FollowedHyperlink;}{\*\cs21 \additive \f3\fs24 WW8Num1z0;}{\*\cs22 \additive \fs24\ul\cf9 Internet link;}{\*\cs23 \additive \fs24\ul\cf9 WW-Internet link;}{
\s24\sb240\sa120\keepn\nowidctlpar\widctlpar\hyphpar0\adjustright \f1\fs28\cgrid \sbasedon0 \snext25 Heading;}{\s25\sa120\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid \sbasedon0 \snext25 Text body;}{
\s26\nowidctlpar\widctlpar\hyphpar0\adjustright \b\fs40\cgrid \sbasedon0 \snext25 Company Name;}{\s27\sb240\sa60\nowidctlpar\widctlpar\hyphpar0\adjustright \shading10000\cfpat1\cbpat1 \b\f1\fs48\cf8\cgrid \sbasedon0 \snext28 Title;}{
\s28\sa60\nowidctlpar\widctlpar\hyphpar0\adjustright \f1\fs32\cgrid \sbasedon0 \snext25 Subtitle;}{\s29\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid \sbasedon0 \snext29 Index;}{\s30\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid 
\sbasedon0 \snext0 toc 1;}{\s31\fi1\li200\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid \sbasedon0 \snext0 toc 2;}{\s32\fi1\li1440\nowidctlpar\widctlpar\hyphpar0\adjustright \f2\fs12\lang1024\cgrid \sbasedon0 \snext32 code;}{
\s33\sb240\sa120\keepn\nowidctlpar\widctlpar\hyphpar0\adjustright \b\f1\fs32\cgrid \sbasedon24 \snext33 Contents Heading;}{\*\cs34 \additive \ul\cf2 \sbasedon10 Hyperlink;}{\s35\nowidctlpar\widctlpar\adjustright \f2\fs20 \snext35 HTML Body;}{
\s36\nowidctlpar\widctlpar\adjustright \f2\fs20\cgrid \sbasedon0 \snext36 Plain Text;}{\s37\li720\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid \sbasedon0 \snext37 errorlist;}{\s38\nowidctlpar\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\adjustright 
\fs20\cgrid \sbasedon0 \snext38 header;}{\s39\nowidctlpar\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\adjustright \fs20\cgrid \sbasedon0 \snext39 footer;}{\s40\li400\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid \sbasedon0 \snext0 \sautoupd toc 3;}{
\s41\li600\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid \sbasedon0 \snext0 \sautoupd toc 4;}{\s42\li800\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid \sbasedon0 \snext0 \sautoupd toc 5;}{
\s43\li1000\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid \sbasedon0 \snext0 \sautoupd toc 6;}{\s44\li1200\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid \sbasedon0 \snext0 \sautoupd toc 7;}{
\s45\li1400\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid \sbasedon0 \snext0 \sautoupd toc 8;}{\s46\li1600\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid \sbasedon0 \snext0 \sautoupd toc 9;}}{\*\listtable{\list\listtemplateid-1{\listlevel
\levelnfc255\leveljc0\levelfollow2\levelstartat1\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\s1}{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\s2}{\listlevel
\levelnfc255\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\s3}{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}}{\listlevel
\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}}{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}}{\listlevel\levelnfc255
\leveljc0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}}{\listlevel\levelnfc255\leveljc0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}}{\listlevel\levelnfc255\leveljc0
\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}}{\listname ;}\listid-5}{\list\listtemplateid-1\listsimple{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext
\'01*;}{\levelnumbers;}}{\listname ;}\listid-2}{\list\listtemplateid67698689\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360 }
{\listname ;}\listid420760140}{\list\listtemplateid67698689\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname 
;}\listid444077228}{\list\listtemplateid67698689\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname 
;}\listid1014308291}{\list\listtemplateid67698689\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname 
;}\listid1186941645}{\list\listtemplateid67698689\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname 
;}\listid1358119847}{\list\listtemplateid67698689\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li360\jclisttab\tx360 }{\listname 
;}\listid1669596091}}{\*\listoverridetable{\listoverride\listid-5\listoverridecount0\ls1}{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent360
{\leveltext\'02\u-3913 ?\'00;}{\levelnumbers\'02;}\f3\fbias0 \fi-360\li1080 }}\ls2}{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent360
{\leveltext\'02\u-3913 ?\'00;}{\levelnumbers\'02;}\f3\fbias0 \fi-360\li1080 }}\ls3}{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent360
{\leveltext\'02\u-3913 ?\'00;}{\levelnumbers\'02;}\f3\fbias0 \fi-360\li1080 }}\ls4}{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent360
{\leveltext\'02\u-3913 ?\'00;}{\levelnumbers\'02;}\f3\fbias0 \fi-360\li1080 }}\ls5}{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent360
{\leveltext\'02\u-3913 ?\'00;}{\levelnumbers\'02;}\f3\fbias0 \fi-360\li1080 }}\ls6}{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent360
{\leveltext\'02\u-3913 ?\'00;}{\levelnumbers\'02;}\f3\fbias0 \fi-360\li1080 }}\ls7}{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent360
{\leveltext\'02\u-3913 ?\'00;}{\levelnumbers\'02;}\f3\fbias0 \fi-360\li1080 }}\ls8}{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent360
{\leveltext\'02\u-3913 ?\'00;}{\levelnumbers\'02;}\f3\fbias0 \fi-360\li1080 }}\ls9}{\listoverride\listid-2\listoverridecount1{\lfolevel\listoverrideformat{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1\levelold\levelspace0\levelindent360
{\leveltext\'02\u-3913 ?\'00;}{\levelnumbers\'02;}\f3\fbias0 \fi-360\li1080 }}\ls10}{\listoverride\listid444077228\listoverridecount0\ls11}{\listoverride\listid1186941645\listoverridecount0\ls12}{\listoverride\listid1669596091\listoverridecount0\ls13}
{\listoverride\listid1014308291\listoverridecount0\ls14}{\listoverride\listid1358119847\listoverridecount0\ls15}{\listoverride\listid420760140\listoverridecount0\ls16}}{\*\revtbl {Unknown;}}{\info{\title Dewtronics}{\author Donald Whisnant}{\operator Donald Whisnant}
{\creatim\yr1999\mo7\dy2\hr19\min44}{\revtim\yr1999\mo7\dy2\hr19\min44}{\printim\yr1999\mo6\dy28\hr18\min45}{\version2}{\edmins0}{\nofpages44}{\nofwords20037}{\nofchars114211}{\*\company Dell Computer Corporation}{\nofcharsws140259}{\vern71}}
\widowctrl\ftnbj\aenddoc\lytprtmet\formshade\viewkind1\viewscale150\pgbrdrhead\pgbrdrfoot \fet0\sectd \linex0\endnhere\titlepg\sectdefaultcl {\footer \pard\plain \s39\qc\nowidctlpar\widctlpar\tqc\tx4320\tqr\tx8640\hyphpar0\adjustright \fs20\cgrid {
\cgrid0 Page }{\field{\*\fldinst {\cgrid0  PAGE }}{\fldrslt {\lang1024\cgrid0 44}}}{\cgrid0  of }{\field{\*\fldinst {\cgrid0  NUMPAGES }}{\fldrslt {\lang1024\cgrid0 44}}}{
\par }}{\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}
{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8
\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s26\nowidctlpar\widctlpar\hyphpar0\adjustright \b\fs40\cgrid {Dewtronics
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par }\pard\plain \s27\sb240\sa60\nowidctlpar\widctlpar\hyphpar0\adjustright \shading10000\cfpat1\cbpat1 \b\f1\fs48\cf8\cgrid {M6811DIS v1.0 (DOS)
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par }\pard\plain \s28\sa60\nowidctlpar\widctlpar\hyphpar0\adjustright \f1\fs32\cgrid {Code-Seeking Disassembler for the Motorola MC68HC11 Microprocessor
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par Version 1.0 of Software written April 15, 1996, \'a9 Donald Whisnant
\par Documentation for version 1.0 written September 27, 1998, \'a9 Donald Whisnant
\par Last Update: June 28, 1999
\par \page 
\par {\*\bkmkstart _Toc454349556}{\*\bkmkstart _Toc455229637}{\listtext\tab}}\pard\plain \s1\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\ls1\outlinelevel0\adjustright \b\f1\fs28\cgrid {Table Of Contents{\*\bkmkend _Toc454349556}{\*\bkmkend _Toc455229637}

\par }\pard\plain \s30\nowidctlpar\widctlpar\tqr\tldot\tx8630\hyphpar0\adjustright \fs20\cgrid {\field\fldedit{\*\fldinst { TOC \\o "1-4" }}{\fldrslt {\lang1024 Table Of Contents\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229637 \\h }{\lang1024 
{\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600330037000000}}}{\fldrslt {\lang1024 2}}}{\lang1024 
\par Introduction\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229638 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600330038000000}}}{\fldrslt {\lang1024 3}}}{\lang1024 

\par Installation\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229639 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600330039000000}}}{\fldrslt {\lang1024 5}}}{\lang1024 

\par Usage\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229640 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600340030000000}}}{\fldrslt {\lang1024 6}}}{\lang1024 
\par }\pard\plain \s31\fi1\li200\nowidctlpar\widctlpar\tqr\tldot\tx8630\hyphpar0\adjustright \fs20\cgrid {\lang1024 Overview\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229641 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600340031000000}}}{\fldrslt {\lang1024 6}}}{\lang1024 
\par Step-by-Step Walk-Through\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229642 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600340032000000}}}{\fldrslt {\lang1024 7}
}}{\lang1024 
\par }\pard\plain \s30\nowidctlpar\widctlpar\tqr\tldot\tx8630\hyphpar0\adjustright \fs20\cgrid {\lang1024 Control Files\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229643 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600340033000000}}}{\fldrslt {\lang1024 15}}}{\lang1024 
\par }\pard\plain \s31\fi1\li200\nowidctlpar\widctlpar\tqr\tldot\tx8630\hyphpar0\adjustright \fs20\cgrid {\lang1024 Example Control File\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229644 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600340034000000}}}{\fldrslt {\lang1024 16}}}{\lang1024 
\par Control File Commands\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229645 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600340035000000}}}{\fldrslt {\lang1024 18}}}{
\lang1024 
\par }\pard\plain \s40\li400\nowidctlpar\widctlpar\tqr\tldot\tx8630\hyphpar0\adjustright \fs20\cgrid {\lang1024 Switch Commands\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229646 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600340036000000}}}{\fldrslt {\lang1024 18}}}{\lang1024 
\par }\pard\plain \s41\li600\nowidctlpar\widctlpar\tqr\tldot\tx8630\hyphpar0\adjustright \fs20\cgrid {\lang1024 ADDRESSES\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229647 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600340037000000}}}{\fldrslt {\lang1024 18}}}{\lang1024 
\par ASCII\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229648 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600340038000000}}}{\fldrslt {\lang1024 19}}}{\lang1024 
\par OPCODES\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229649 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600340039000000}}}{\fldrslt {\lang1024 20}}}{\lang1024 

\par }\pard\plain \s40\li400\nowidctlpar\widctlpar\tqr\tldot\tx8630\hyphpar0\adjustright \fs20\cgrid {\lang1024 Value Commands\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229650 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600350030000000}}}{\fldrslt {\lang1024 21}}}{\lang1024 
\par }\pard\plain \s41\li600\nowidctlpar\widctlpar\tqr\tldot\tx8630\hyphpar0\adjustright \fs20\cgrid {\lang1024 INPUT\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229651 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600350031000000}}}{\fldrslt {\lang1024 21}}}{\lang1024 
\par LOAD\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229652 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600350032000000}}}{\fldrslt {\lang1024 22}}}{\lang1024 
\par OUTPUT\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229653 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600350033000000}}}{\fldrslt {\lang1024 23}}}{\lang1024 

\par }\pard\plain \s40\li400\nowidctlpar\widctlpar\tqr\tldot\tx8630\hyphpar0\adjustright \fs20\cgrid {\lang1024 List Entry Commands\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229654 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600350034000000}}}{\fldrslt {\lang1024 24}}}{\lang1024 
\par }\pard\plain \s41\li600\nowidctlpar\widctlpar\tqr\tldot\tx8630\hyphpar0\adjustright \fs20\cgrid {\lang1024 ENTRY\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229655 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600350035000000}}}{\fldrslt {\lang1024 24}}}{\lang1024 
\par INDIRECT\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229656 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600350036000000}}}{\fldrslt {\lang1024 25}}}{\lang1024 

\par LABEL\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229657 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600350037000000}}}{\fldrslt {\lang1024 26}}}{\lang1024 
\par }\pard\plain \s30\nowidctlpar\widctlpar\tqr\tldot\tx8630\hyphpar0\adjustright \fs20\cgrid {\lang1024 Error and Warning Messages\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229658 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600350038000000}}}{\fldrslt {\lang1024 27}}}{\lang1024 
\par }\pard\plain \s31\fi1\li200\nowidctlpar\widctlpar\tqr\tldot\tx8630\hyphpar0\adjustright \fs20\cgrid {\lang1024 Error Messages\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229659 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600350039000000}}}{\fldrslt {\lang1024 27}}}{\lang1024 
\par Warning Messages\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229660 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600360030000000}}}{\fldrslt {\lang1024 28}}}{
\lang1024 
\par }\pard\plain \s30\nowidctlpar\widctlpar\tqr\tldot\tx8630\hyphpar0\adjustright \fs20\cgrid {\lang1024 Disassembly Pitfalls\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229661 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600360031000000}}}{\fldrslt {\lang1024 30}}}{\lang1024 
\par }\pard\plain \s31\fi1\li200\nowidctlpar\widctlpar\tqr\tldot\tx8630\hyphpar0\adjustright \fs20\cgrid {\lang1024 Code Inline Data\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229662 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600360032000000}}}{\fldrslt {\lang1024 30}}}{\lang1024 
\par Undetermined Branch Address\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229663 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600360033000000}}}{\fldrslt {\lang1024 
31}}}{\lang1024 
\par Addresses as Immediate Values\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229664 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600360034000000}}}{\fldrslt {
\lang1024 31}}}{\lang1024 
\par Code Paging\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229665 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600360035000000}}}{\fldrslt {\lang1024 32}}}{\lang1024 

\par Laziness\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229666 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600360036000000}}}{\fldrslt {\lang1024 33}}}{\lang1024 

\par Others\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229667 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600360037000000}}}{\fldrslt {\lang1024 33}}}{\lang1024 

\par }\pard\plain \s30\nowidctlpar\widctlpar\tqr\tldot\tx8630\hyphpar0\adjustright \fs20\cgrid {\lang1024 MC68HC11 Overview\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229668 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600360038000000}}}{\fldrslt {\lang1024 34}}}{\lang1024 
\par Reassembling a Disassembly\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229669 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600360039000000}}}{\fldrslt {\lang1024 38
}}}{\lang1024 
\par Limitations in This Version\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229670 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600370030000000}}}{\fldrslt {\lang1024 
39}}}{\lang1024 
\par Bugs\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229671 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600370031000000}}}{\fldrslt {\lang1024 40}}}{\lang1024 
\par Support\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229672 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600370032000000}}}{\fldrslt {\lang1024 41}}}{\lang1024 

\par }\pard\plain \s31\fi1\li200\nowidctlpar\widctlpar\tqr\tldot\tx8630\hyphpar0\adjustright \fs20\cgrid {\lang1024 The Disassembler\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229673 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600370033000000}}}{\fldrslt {\lang1024 41}}}{\lang1024 
\par Motorola\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229674 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600370034000000}}}{\fldrslt {\lang1024 41}}}{\lang1024 

\par Third Party (Assemblers, etc)\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229675 \\h }{\lang1024 {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600370035000000}}}{\fldrslt {
\lang1024 41}}}{\lang1024 
\par }\pard\plain \s30\nowidctlpar\widctlpar\tqr\tldot\tx8630\hyphpar0\adjustright \fs20\cgrid {\lang1024 Future Versions\tab }{\field{\*\fldinst {\lang1024  PAGEREF _Toc455229676 \\h }{\lang1024 {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400350035003200320039003600370036000000}}}{\fldrslt {\lang1024 43}}}{\lang1024 
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid }}\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par 
\par {\listtext\tab}}\pard\plain \s1\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\ls1\outlinelevel0\adjustright \b\f1\fs28\cgrid {\page {\*\bkmkstart _Toc454349557}{\*\bkmkstart _Toc455229638}{\listtext\tab}Introduction{\*\bkmkend _Toc454349557}
{\*\bkmkend _Toc455229638}
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {A disassembler is a program that t
akes binary memory images and/or object code data files and converts them into the mnemonic equivalents for the processor the code was developed for.  It is sort of like decompiling code except that if the original code was written in a higher level langu
age (language other than assembly), you only get the equivalent assembly code rather than the language the original code was written in.
\par 
\par }{\b So what is a disassembler good for?}{  The primary use for a disassembler is to either reverse-engineer or hack a program
.  In the realm of software, typically reverse-engineering involves taking an entire program apart to figure out exactly how it functions, usually in an effort to understand the overall system and possibly improve upon it or otherwise extend its use.  Hac
k
ing, on the other hand, typically involves taking a program apart only to the extent of finding one or more particular items of interest usually to modify those parts to achieve some goal, while not necessarily trying to gain a full working knowledge of h
o
w the whole system works.  An example of reverse engineering would be a complete disassembly of a vehicle ECM calibration to write out a complete description of the control algorithms used by the vehicle computer.  An example of hacking would be disassemb
l
ing that code only enough to find one or two numbers that contain the speed-limiter on the vehicle, without getting a working knowledge of how this speed-limiter actually works.  There are times and places for both reverse-engineering and hacking and even
 combinations of the two.  To any extent, one of the primary tools used by both hackers and reverse-engineers is the disassembler.
\par 
\par }{\b What is a code-seeking disassembler and why is it so special?}{  Any binary program image, especially those for processors usin
g Von Neumann architecture, will contain a mix of program bytes and data bytes.  Traditional disassemblers typically start at the first address of the binary image and disassemble to the end of the binary image treating everything as code.  In the end, yo
u end up with a file that contains most of the correct code mixed with lots of garbage from the data.  Sometimes this isn\rquote t a problem, especially if the data areas are small and very distinguishable.  But, depending on the processor\rquote 
s opcode list, it can cause the disassembly in the good code sections to be skewed \endash  resulting in several incorrect and/or incomplete opcodes that later have to be disassembled by hand.  This is where the code-seeking disassembler comes in handy.

\par 
\par Unlike the typical \ldblquote disassemble everything\rdblquote 
 method of the traditional disassembler, the code-seeking disassembler actively seeks out and disassembles sections that it sees as code while leaving the rest tagged as data.  This is achieved by giving the disassembler one or more initial entr
y addresses into the code.  From these entry points, the disassembler continues to follow through the code as it hits jumps, branches, and returns.  In the end, you should have a perfect separation of code and data.  There are some complications to this. 
 
For example, what happens on a jump instruction that uses a register to obtain the address of the branch, such as is common with a jump table?  The disassembler has no way of knowing exactly what the content of the register is, so it is forced to label th
e jump instruction as an \ldblquote undetermined branch\rdblquote .  Such tables have to be located by the user and added as additional entry points for the disassembler.  Also, suppose you don\rquote t enter all possible entry points \endash 
 the result will be a file with hunks of code interpreted incorrectly as data.  And there are cases where there are unused bits of code that never get executed \endash 
 those will remain tagged as data.  But overall, the code-seeking disassembler is far superior to its traditional counter-part and in many case
s, with little user intervention, can produce a perfect separation of code and data which greatly facilitates the reverse-engineering and/or hacking of the target code.
\par 
\par }{\b Is the disassembler output important?}{  For hackers, the answer is \ldblquote no\rdblquote .  This is becau
se a hacker is only interested in the code to the extent of finding the part(s) to achieve his hack.  But, for the reverse-engineer, it is a very important aspect.  Often after reverse engineering a program, it is desired to reassemble the code either in 
i
ts original form (to test integrity and validity) or in an altered form after enhancements have been made.  Many disassemblers don't address this issue and produce an output that isn't compatible with any existing assembler, resulting in hours of editing 
a
nd reworking to get the code in the correct form.  This disassembler solves the problem by targeting a specific assembler.  With the specified assembler, it is guaranteed that the output from the disassembler, when reassembled will result in the original 
binary.  The assembler this disassembler targets is the AS6811 written by Alan Baldwin at Kent State University\rquote s Physics Department (}{\b not to be confused with the Motorola AS11 freeware assembler}{).  Alan\rquote 
s entire assembler set and relocating linker is a superb piece of workmanship, which is why it was chosen as the target output form for this disassembler.  See }{\b Reassembling a Disassembly}{
 later in this document for more information on this assembler.
\par 
\par }{\b What else you need to know.}{  In order to make sense out of 
the output from this disassembler and to effectively use this program, it is necessary to first familiarize yourself with the MC6811 microprocessor and have an understanding of assembly language and techniques in general.  Such instruction is outside the 
scope of this document.  For it, I refer you to documents such as the \ldblquote M68HC11 Reference Manual\rdblquote  available from Motorola as document M68HC11RM/AD.  And the processor-variant specific pocket reference guides, such as the \ldblquote 
MC68HC11F1 Programming Reference Guide\rdblquote  and \ldblquote MC68HC11E9 Programming Reference Guide\rdblquote  will come in handy as well \endash 
 the Motorola part numbers for these documents are MC68HC11F1RG/AD and MC68HC11E9RG/AD, respectively.  The one(s) you will need will be dependent upon the particular processor use
d by the device under study.  For other variants of the HC11, the document number is typically MC68HC11 followed by the variant code and then \ldblquote RG/AD\rdblquote 
.  Technical data references for a specific series are also available.  These typically have document numbers of M68HC11 followed by the series code followed by \ldblquote /D\rdblquote .  Examples of these are \ldblquote MC68HC11N/D\rdblquote  for the 
\ldblquote N-Series\rdblquote  and \ldblquote MC68HC11F1/D\rdblquote  for the F1 series.  All of these documents are available from Motorola\rquote s website (}{\cs19\fs24\ul\cf2 www.mot-sps.com}{) and can either be down
loaded as .pdf files or ordered in printed form.
\par 
\par You will also need a method of obtaining the original binary that you wish to disassemble.  Again, that is outside of the scope of this document.  To obtain the binary, you will probably need to obtain an E
PROM burner and/or reader.  This document assumes that you\rquote 
ve already obtained the target code and have saved it as a binary format file.  This version of M6811DIS only supports binary source files.  Future versions will include support for other formats.
\par 
\par In this document, as well as the disassembler output, hexadecimal values are expressed by prepending them with \ldblquote 0x\rdblquote .
\par 
\par {\listtext\tab}}\pard\plain \s1\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\ls1\outlinelevel0\adjustright \b\f1\fs28\cgrid {\page {\*\bkmkstart _Toc454349558}{\*\bkmkstart _Toc455229639}Installation{\*\bkmkend _Toc454349558}{\*\bkmkend _Toc455229639}

\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {Installation of the M6811DIS program is simple and straightforward.  Simply create a directory for the program and place al
l of the distributed files in that directory.  The current method of file distribution is PKWare\rquote s PK-ZIP version 2.04G.  If you are installing from that zip file, then you\rquote ll obviously need to have a copy of the unzip tool.  If you don
\rquote t already have a copy, it can be downloaded from }{\cs19\fs24\ul\cf2 www.pkware.com}{
.  Chances are if you are reading this document, you already have that tool, since this document is also zipped with the other files and placed into the M6811DIS.ZIP archive.
\par 
\par Once all of the files are placed int
o a single directory, you can simply change to that directory and run the program.  Note that you can run the program from a path in your path-statement, but the M6811DIS.OP file that is used with this version must reside in the current directory at the t
i
me the program is run.  This means if you use the system path to execute the program from a different directory, you must first copy the .OP file to the current directory prior to running the program.  Future versions of this program will do away with the
 .OP file and eliminate the need for copying it all over the place.
\par 
\par }\pard \keepn\nowidctlpar\widctlpar\hyphpar0\adjustright {The following files are distributed with this version (1.0):
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\keepn\nowidctlpar\widctlpar\tx1080{\*\pn \pnlvlblt\ilvl0\ls2\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\hyphpar0\ls2\adjustright {M6811DIS.EXE\tab 
\endash  The main program executable.
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\keepn\nowidctlpar\widctlpar\tx1080{\*\pn \pnlvlblt\ilvl0\ls3\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\hyphpar0\ls3\adjustright {M6811DIS.OP\tab 
\endash  The opcodes file used by the executable.
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\keepn\nowidctlpar\widctlpar\tx1080{\*\pn \pnlvlblt\ilvl0\ls4\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\hyphpar0\ls4\adjustright {M6811DIS.DOC\tab 
\endash  This document in MS-Word 97 Format.
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\keepn\nowidctlpar\widctlpar\tx1080{\*\pn \pnlvlblt\ilvl0\ls5\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\hyphpar0\ls5\adjustright {M6811DIS.TXT\tab 
\endash  This document in Plain-Text Format.
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\keepn\nowidctlpar\widctlpar\tx1080{\*\pn \pnlvlblt\ilvl0\ls5\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\hyphpar0\ls5\adjustright {M6811DIS.PS\tab 
\endash  This document in PostScript Format.
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\keepn\nowidctlpar\widctlpar\tx1080{\*\pn \pnlvlblt\ilvl0\ls5\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\hyphpar0\ls5\adjustright {M6811DIS.PDF\tab 
\endash  This document in PDF Format.
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\keepn\nowidctlpar\widctlpar\tx1080{\*\pn \pnlvlblt\ilvl0\ls6\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\hyphpar0\ls6\adjustright {AV94BNBH.CTL\tab 
\endash  A sample control file to get your started.
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\keepn\nowidctlpar\widctlpar\tx1080{\*\pn \pnlvlblt\ilvl0\ls7\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\hyphpar0\ls7\adjustright {PORTSF1.ASM\tab 
\endash  Assembler file for the F1 HC11.  Used when reassembling (AS6811).
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\keepn\nowidctlpar\widctlpar\tx1080{\*\pn \pnlvlblt\ilvl0\ls8\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\hyphpar0\ls8\adjustright {PORTSF1.H\tab \tab 
\endash  Include file for the F1 HC11.  Used when reassembling (AS6811).
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\keepn\nowidctlpar\widctlpar\tx1080{\*\pn \pnlvlblt\ilvl0\ls9\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\hyphpar0\ls9\adjustright {PORTSE9.ASM\tab 
\endash  Assembler file for the E9 HC11.  Used when reassembling (AS6811).
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\keepn\nowidctlpar\widctlpar\tx1080{\*\pn \pnlvlblt\ilvl0\ls10\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\hyphpar0\ls10\adjustright {PORTSE9.H\tab 
\tab \endash  Include file for the E9 HC11.  Used when reassembling (AS6811).
\par }\pard\plain \s30\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {Note that the \ldblquote PORTS\rdblquote 
 files have nothing to do with the disassembly process itself and are not needed to successfully disassemble a file, but they are rather useful when reassembling the disassembled code.  They are written to work with Alan Baldwin\rquote 
s AS6811 disassembler, as is the output of the disassembler.  The F1 and E9 are included because they are the most common variants of the HC11.
\par 
\par {\listtext\tab}}\pard\plain \s1\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\ls1\outlinelevel0\adjustright \b\f1\fs28\cgrid {\page {\*\bkmkstart _Toc454349559}{\*\bkmkstart _Toc455229640}Usage{\*\bkmkend _Toc454349559}{\*\bkmkend _Toc455229640}
\par {\*\bkmkstart _Toc454349560}{\*\bkmkstart _Toc455229641}{\listtext\tab}}\pard\plain \s2\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\ls1\ilvl1\outlinelevel1\adjustright \b\i\f1\cgrid {Overview{\*\bkmkend _Toc454349560}{\*\bkmkend _Toc455229641}
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {As mentioned in the introduction, this disassembler is a code-seeking di
sassembler.  Therefore, it is necessary to specify all code entry addresses and indirect vectors (such as interrupt vectors) used in the target code.  A minimum of only one entry address is required, but often it is necessary to specify multiple entry poi
nts and/or indirect vectors, and it is also desirable to be able to specify meaningful names, or labels, for these.  It would be cumbersome to have to specify these each time on the command line, not to mention the fact that you\rquote 
d run out of command-line space.  Therefore, the entering of these entry-points, labels, and indirect-vectors is done with a \ldblquote Control File\rdblquote .
\par }\pard\plain \s29\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {First, use a text editor of your choice and create a control file for the file you wish to disassemble.  The section entitled \ldblquote Control Files\rdblquote  
in this document describes the exact format and available commands to use in creating the Control File.  A sample Control File is included there as well as in the distribution.  As a very minimum, your Control File should include an \ldblquote input
\rdblquote  statement and an \ldblquote output\rdblquote 
 statement to specify source and destination files, respectively.  And, it should include at least one entry point, in some form, for the code disassembly.  If no entry points are specified in the Control File from either \ldblquote entry\rdblquote 
 statements or \ldblquote indirect\rdblquote  statements, the load address of the file is assumed to be an entry point.  If the \ldblquote input\rdblquote  and \ldblquote output\rdblquote 
 statements in your Control File do not specify full paths, the current directory will be used.
\par 
\par With your Control File complete, bring up a DOS window (or run the machine in DOS mode), and enter \ldblquote m6811dis\rdblquote 
 followed by the name of the Control File that you used, from within the proper directory.  It is recommended that you use the extension of \ldblquote .ctl\rdblquote  for your Control Files, though this version will }{\b\ul not}{ append the \ldblquote 
.ctl\rdblquote  should you fail to specify it with the filename on the command line.  Therefore, if you use the \ldblquote .ctl\rdblquote  extension, you must type it with the filename.  Future versions will make better use of the \ldblquote .ctl
\rdblquote  extension.  Once run, the disas
sembler will first display its findings from parsing the specified Control File, and then it will load the source file, resolve any specified indirects, and disassemble the source file to the specified output file.
\par 
\par During the disassembly process, the disa
ssembler will display any labels that are created during the disassembly process, as well as any warning or error messages.  Labels are created anytime a direct extended memory reference is encountered, regardless of whether it is an absolute or relative 
address.  For example, suppose a program contains a command to load the \lquote X-register\rquote  from the direct address of 0x103A.  This would correspond to the instruction \ldblquote ldx 0x103A\rdblquote .  The label \ldblquote L103A\rdblquote 
 will be automatically created and assigned to address 0x103A and the disassembler will output \ldblquote ldx L103A\rdblquote .  If the address wasn\rquote t included within the loaded file range, the disassembler will also output an equate of \ldblquote 
L103A = 0x103A\rdblquote  so that the assembler will know that L103A is equivalent to the value 0x103A during re-assembly.  If the address was within the loaded file\rquote 
s range, then the output line coincident with that address will be prepended with the label followed by a colon \endash  such as \ldblquote L103A:\rdblquote .  However, if the load instruction was an immediate value, rather than
 an address, such as the instruction \ldblquote ldx #0x103A\rdblquote 
, the assembler will not assign a label for 0x103A.  The disassembler can only assume, in this latter case, that 0x103A is a constant value and has no address relevancy.  This may or may not be the case.  I
f it does have address relevancy, then you must manually rename it in the output file using a search and replace.  In most programs, immediate values are usually just constant values, but occasionally you\rquote 
ll run into one that is an address, typically loaded into an index register, for indirect addressing in subsequent instructions.
\par 
\par If you wish to use more meaningful names other than something like \ldblquote L103A\rdblquote , then you should add \ldblquote label\rdblquote  commands to the Control File and rerun the disassembler.  The disassemble
r will then use the specified label for the specified address, rather than making up its own \ldblquote Lxxxx\rdblquote 
 label.  However, on this version of the disassembler, labels are limited to no more than six (6) characters.  Future versions will support longer label sizes.
\par 
\par The disassembler is a two-pass disassembler.  During the first pass, it iterates through the specified list of entry addresses tagging those locations as code.  For each entry address, it continues to tag successive addresses as code until it reaches 
an instruction that ends that code section \endash  such as an unconditional jump or a return-from-subroutine (RTS) statement.  Whenever a jump (or branch) is encountered, the target address, if it is determinable (that is, isn\rquote 
t dependent on a register value or 
other unknown value), is added to the list of entry points.  This process continues until all entry points in the list have been exhausted.  During the second pass, it iterates over the entire length of the memory image and writes the output disassembly f
ile.  All addresses that were tagged as being code during the first pass will be outputted as code, otherwise, they will be treated as data and outputted as either binary or ASCII data (depending on Control File settings and byte values).
\par 
\par The screen output during the disassembly process, containing new labels and disassembly warning messages, is sent to \ldblquote stdout\rdblquote 
.  This allows the output to be redirected into a log file for later reference using the stdout redirect operator (\ldblquote >\rdblquote ) on the command line \endash  refer to DOS documentation on how to do input/output redirection and piping.
\par 
\par {\*\bkmkstart _Toc454349561}{\*\bkmkstart _Toc455229642}{\listtext\tab}}\pard\plain \s2\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\ls1\ilvl1\outlinelevel1\adjustright \b\i\f1\cgrid {Step-by-Step Walk-Through{\*\bkmkend _Toc454349561}
{\*\bkmkend _Toc455229642}
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {Here is an example dump of the screen output produced while running M6811DIS with the sample Control File shown in the }{\i Control Files}{ section, captured by usin
g a stdout redirection.  It is shown here in its entirety because this it a very typical illustration of what most disassembly runs will be like and it allows us to describe and explain what each part of the screen output is for:
\par }\pard\plain \s30\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par }\pard\plain \s32\fi1\li1440\nowidctlpar\widctlpar\hyphpar0\adjustright \f2\fs12\lang1024\cgrid {M6811 Disassembler V1.0
\par Copyright(c)1996 by Donald Whisnant
\par 
\par Initializing...
\par Reading Control File...
\par         Load Address: 0x4000
\par         16 Entry Points: 
\par                 0x7C0B
\par                 0x7C12
\par                 0x7C1C
\par                 0x7C22
\par                 0x7C35
\par                 0x7C6B
\par                 0x7C7C
\par                 0x7C83
\par                 0x7C9C
\par                 0x7CA0
\par                 0x7CAA
\par                 0x7CAE
\par                 0x7CBE
\par                 0x7CC2
\par                 0x7CCC
\par                 0x7CDD
\par         Source File: AV94BNBH.BIN
\par         Destination File: AV94BNBH.DIS
\par         21 Labels Defined:
\par                 0xFFD6=SCIVEC:
\par                 0xFFD8=SPIVEC:
\par                 0xFFDA=PAIEVE:
\par                 0xFFDC=PAOVEC:
\par                 0xFFDE=TOVFVE:
\par                 0xFFE0=TI4O5V:
\par                 0xFFE2=TO4VEC:
\par                 0xFFE4=TO3VEC:
\par                 0xFFE6=TO2VEC:
\par                 0xFFE8=TO1VEC:
\par                 0xFFEA=TI3VEC:
\par                 0xFFEC=TI2VEC:
\par                 0xFFEE=TI1VEC:
\par                 0xFFF0=RTIVEC:
\par                 0xFFF2=IRQVEC:
\par                 0xFFF4=XIRQVE:
\par                 0xFFF6=SWIVEC:
\par                 0xFFF8=ILOPVE:
\par                 0xFFFA=COPVEC:
\par                 0xFFFC=CMONVE:
\par                 0xFFFE=RSTVEC:
\par Writing program counter addresses to disassembly file.
\par Reading Opcodes File...308 opcodes read.
\par Reading Source File...File Size: 0xC000
\par Compiling Indirect Branch Table as specified in Control File...
\par    [0xFFD6] -> 0xF494 = SCIRTN
\par    [0xFFD8] -> 0xF8EE = SPIRTN
\par    [0xFFDA] -> 0xF8E4 = PAIERT
\par    [0xFFE0] -> 0x7922 = TI4O5R
\par    [0xFFE2] -> 0x7986 = TO4RTN
\par    [0xFFE4] -> 0x79EA = TO3RTN
\par    [0xFFE6] -> 0xF8D9 = TO2RTN
\par    [0xFFE8] -> 0xCC8A = TO1RTN
\par    [0xFFF2] -> 0x7597 = IRQRTN
\par    [0xFFF4] -> 0xF8B3 = XIRQRT
\par    [0xFFF6] -> 0xF8AE = SWIRTN
\par    [0xFFF8] -> 0xF8C4 = ILOPRT
\par    [0xFFFA] -> 0xF8C9 = COPRTN
\par    [0xFFFC] -> 0xF8CE = CMONRT
\par    [0xFFFE] -> 0xF8D3 = RESET
\par 
\par Pass 1 - Finding Code, Data, and Labels...
\par LC3BA  LCD23  LC3CE  LC4B3  LAE65  LEEAA  LF26C  LD425  L7C31  
\par L7C34  LC6D1  L0002  L7C4A  LE860  LE893  LC6F6  LC71D  L7C59  
\par LD2D7  LD399  L7C7B  LC506  LC923  LCC1E  L7C8C  L7C8F  LCCC9  
\par LCE3D  LA386  LD414  LD1D9  L7CBA  L7CBD  LCA43  LCACF  LD9BB  
\par LDA49  L02BE  L7CD9  L0004  L7CDC  L7CE6  L7CE9  LF4A4  LF4CB  
\par LF5B5  L3024  L3025  L7972  L0046  L7954  L0273  L025D  L7942  
\par L7945  L0825  L7962  L79D6  L79B8  L79A6  L79A9  L0827  L79C6  
\par L301A  L3023  L0000  L0044  L7A05  LF705  L3022  L3FC8  L0226  
\par LCC9C  L0062  LCCC8  LCCBD  LCCC5  L759E  LF8BB  LF8B1  LF8C7  
\par LF8D6  LF8D1  L7200  LEF12  LEEFC  L0055  L0130  LCD2C  L0118  
\par LCD41  L012E  L007F  LCD78  LC3F1  L0316  LC454  LC4C4  L001B  
\par LC4D1  L400F  LAE6F  LAF16  L082D  L0192  L082F  L009F  L00A1  
\par LEEFB  L0082  LF273  L1806  
\par      *** Warning:  Branch Ref: 0x1806 is outside of Loaded Source File.
\par L0F00  LE444  LE46C  LE45C  L0080  L00D3  LD491  LD8FE  LD444  
\par LD478  LC32A  LEC80  LECCD  LEAEE  LEB2F  LEB70  LE7EF  LE82B  
\par LEA28  LE8C6  LE8C7  LE8C8  LE8FC  LE50E  LE542  LC78A  LC7E0  
\par LC805  L006F  L0016  L7C63  L0017  L7C6A  L003B  LE892  LE88E  
\par L0165  LE882  LE88F  LE8C5  LE8C1  L0166  LE8B5  LE8C2  L0043  
\par LC706  L004E  LC717  LC71A  L00AE  LC72A  LC732  LC734  L00AF  
\par LF0D3  L672E  L0083  LC74B  L672D  LC754  L00A3  L5D28  LC75F  
\par L5D29  LC767  L5D2A  LC770  LC787  LD2E1  LD398  LD3A2  LD3C6  
\par L0088  LC51D  L009C  LC530  L0087  LC529  LC543  LC53C  L0096  
\par LC54A  LC55D  L0183  L0085  LC55A  LC569  L0182  LC575  L0122  
\par L0089  LC595  LC58E  L00D1  LC5A3  LC5B1  LC5E2  LE434  L0092  
\par LC5D5  LC5C4  LC5D2  L0050  LC93B  LC93E  LCC89  L022C  L0019  
\par LCC72  L0006  L45AC  LCC86  L01E3  L45AD  L01E5  LCC44  L45AE  
\par L022F  L45B0  LCC66  L45AF  L0052  LCC5D  LCC78  LF279  L9F7C  
\par LC879  LAD62  LCCE9  LF15E  LCCE0  LCCE6  L5B03  L4E6B  LCD0B  
\par L4E6C  LCD1D  L022A  L4E6A  LCD18  L400B  LCE55  L0253  L006E  
\par LCE52  LCEB0  L02A5  LCE64  LCE6A  L004F  LA38D  LA4DC  L0812  
\par L02A7  LD1E0  LD2D6  LCA56  L48B4  L01F3  L01F8  LCA59  L4E7F  
\par LF0F6  LCAE8  LCB3A  L00F8  L4E3B  LDA32  LD9FE  L4E37  L0240  
\par L4E38  LDA03  L4E3D  LDA06  LDA53  LDA60  L0071  LDAB5  LC30B  
\par LE3ED  LE4B9  LE046  LF4B1  LF4CC  L302E  L302F  L0364  L0369  
\par LF5E3  L0363  L0362  LF5FF  LF5DB  LF5E5  LF660  L0821  L7983  
\par L795D  L0823  L79E7  L79C1  L003A  L7A17  L7A14  L0003  L7A20  
\par L7A3B  L0391  L0072  L0392  L9286  LF08B  L082E  L7A73  L7A70  
\par L4E5F  L01FC  LF137  L4E5E  L4139  L0047  L7A7D  L4138  L01E6  
\par L01E9  L3030  L7A95  L3031  L3032  L3033  L3034  L0148  LEEE2  
\par L7CF6  L3FFA  L0073  L7AD4  L3FC4  L080D  L080C  L0146  L3068  
\par L7E04  L7B00  L7AFF  L7AF7  L4953  L0051  L7B0F  L7B11  L001A  
\par L7B2D  L7B7C  LAD0C  L303A  LF72C  LF72D  L0366  LF749  LF081  
\par LF753  L0001  L0390  LF771  L0230  L300E  L3016  L75C3  L306F  
\par L75DB  L75E2  L76FD  LCA8A  L306E  L723A  L3FFC  LF08A  L725B  
\par LEF9A  L7282  L72C3  L00A0  L7548  LEF11  LEF04  L0093  LCD4A  
\par LCE3C  LC44A  L0317  LC464  LC40D  L0061  L4153  LC45F  L4154  
\par L4158  L4155  L0201  LC42E  L4156  LC440  LF17B  LC451  L4157  
\par LC46B  LC4D5  L0018  LC503  LAE8B  L5151  LAE99  L5155  L0853  
\par LAF0D  L001D  LE458  LE454  LE47C  LE478  LE468  LD4D9  LD4A4  
\par LD4CF  LD90A  LD906  LD908  LD8DC  LD451  LD48C  L019D  LD4DA  
\par L004C  LC348  LC35C  LC361  LECCC  LECC8  L0169  L0084  LECAF  
\par L0090  L001C  L0026  LED09  LED05  L016A  LECF9  L008F  L0027  
\par LEB2E  LEB2A  L0175  L0098  LEB04  LEB1E  L002B  LEB6F  LEB6B  
\par L0176  LEB45  LEB5F  L002C  LEBB0  LEBAC  L0177  LEB86  LEBA0  
\par L002D  LE82A  LE822  L0162  LE814  L0091  LE85F  LE85B  L0164  
\par LE84F  LEA7A  LEA76  L5B95  LEA4B  LEA54  LE8FB  LE8F7  L0167  
\par LE8EB  LE8F8  LE92F  LE92B  L0168  LE91F  LE92C  LE541  LE53D  
\par L0159  LE531  LE53E  LE575  LE571  L015A  LE565  LE572  LC79B  
\par L00A2  LC7AE  LC7B1  LC7ED  LC7F5  LC7F7  L02A6  L0208  L0266  
\par LC829  L003F  LC83E  L48D9  L48DE  L0295  L01EE  L01DE  LC862  
\par LC868  LF136  L0842  LC922  LF0E0  LF0E4  L5D2B  L00A5  LD2EB  
\par LD2EE  LD3B0  LD3C9  L00DC  LC5EC  L0127  L010A  LC622  LC606  
\par L0086  LC603  LC6CA  LE440  LC949  LCA42  L45B2  L45B3  L022D  
\par L45B1  L1800  LF284  L180C  
\par      *** Warning:  Branch Ref: 0x180C is outside of Loaded Source File.
\par L9F83  LA370  LC8BF  L0252  LC88C  LC893  LAD6C  LAE64  LF172  
\par LF178  LCF37  LCE70  L9DE0  L087B  LA3B0  L087C  LA39F  L4F27  
\par LA3A5  LA3AD  L4F26  L086B  LA3D0  LA3BC  LA3CD  L400C  LD21A  
\par L402C  LD1FE  L402D  L01F9  LD2CB  L03B2  LCA61  LCA7C  LCA80  
\par LF100  LF103  LCAFE  LCB2F  LCB34  LCB3C  L0855  LDA45  L4E3E  
\par LDA2A  L4E3F  L0241  L4E40  LDA2F  L024E  LDA70  LDAC6  L003C  
\par L0239  LDAC2  LDFA8  LE6B4  LE74D  LEC7F  LED0A  LED63  LE9DC  
\par LEAAE  LEDD5  LEDD6  LEE44  LE410  LE3F3  LE088  LE085  L4E7E  
\par LE06C  L4E7D  LF4FC  L0042  LF4F4  LF4E9  L039B  L0367  LF590  
\par LF60F  LF65A  LF5EE  LF5F5  LF6F7  L000A  L9292  L929B  LF09A  
\par L3060  L004B  L3062  L3064  L004D  L3067  LF13D  LF15A  LEEF6  
\par L7D08  L014A  L0149  L7D8B  L7E0E  L7E17  L7E12  L7B51  L924A  
\par LA53C  LD075  LD11D  LF285  L7B49  LB773  L7BA9  L7BB7  L7BE6  
\par L7BAC  LAD59  L3FC0  L005F  L020B  L4142  LAD2C  LF1ED  LAD44  
\par LAD4B  L3066  LF774  LF763  LF87E  L0068  L006A  L75F5  L02F0  
\par L75FF  L02EC  L7743  L028B  L770B  L02F1  L7720  L081E  L495A  
\par L028A  L7740  L7786  L7767  L0053  L77C9  L0277  L7762  L77AF  
\par L3061  L3063  L3065  LEFA8  LEFC2  L0005  L303F  L72D2  L72EC  
\par LCD58  LCD60  L5E8E  LCD7B  L5E8B  LCD75  L5E8A  LC47A  L01EF  
\par L0207  L0206  L01F0  L01F1  LC46E  LF184  LF189  LF1B4  LF1BA  
\par LC4DF  LC4EC  L00A6  LAEA2  LAF02  L0854  LE49F  LE486  LD4E3  
\par L0180  LD4EB  LD4F1  LD4F7  LD50F  LD505  LD50D  LD4B1  LD91B  
\par LD92C  L0099  LD927  LD932  LD8FA  LD8FC  LD46C  LD854  LD8B7  
\par LD47B  L008A  LC364  LC37B  LC383  LECC9  LED06  LEB2B  LEB6C  
\par LEBAD  LE826  LE85C  L0171  LEA6A  LEA77  LC7C6  L5B1A  L5B18  
\par LC7C2  L5B1B  LC7CA  L4074  LD2FB  L007E  LD313  LC62E  L0124  
\par LC6BD  LC614  LC611  LC6C2  L4022  LC955  LC963  L4012  L0830  
\par L4013  L0831  LC994  L997F  L0009  L9FAD  L4EB6  L4EB7  L02C6  
\par L02D0  L0887  L9FCD  L0888  L50B5  L50B4  L9FCA  L0038  L4E85  
\par L9FD6  LA01C  L0036  LA37A  LA382  L086A  L021D  L45D0  LC8E0  
\par L003D  L029B  L021F  L0841  L0843  LC90B  LC91F  LC8A4  LC8AD  
\par LAD76  LAD8B  L46FF  LCF3E  LCF48  LCE78  LCE82  L9DE9  L9DEB  
\par L0882  L9E16  L5064  L9E0F  L9E01  L0884  L5065  L9E13  L9E51  
\par L085C  LA400  LA3DC  LA3FD  L086C  LA3C6  L4EAF  L01FB  L402F  
\par LD22B  L01FA  L402B  L0041  LD213  LD22E  LF10D  L4E82  LCB18  
\par L029C  L4E83  LCB37  LCB4B  LCB66  LCB4E  L003E  LDA82  LDAAA  
\par LDA9E  L024B  L023C  L023D  LDEDA  LDAD4  LE6E5  LE6DF  LE6E8  
\par L008E  L015F  LE6E2  L0023  LE748  LE781  LE77B  LE784  L0160  
\par LE77E  L0024  LE7EA  LED62  LED5E  L016B  LED32  L0028  LEDD3  
\par LEDCF  L016C  LED81  LEA27  LEA23  L016F  LEA12  LE9F4  L002A  
\par LEAED  LEAE5  L0173  LEAD3  LEAE9  LEDFE  LEDFC  L0179  LEE00  
\par L001E  LEE3F  L002F  LEE6C  LEE6A  L017A  LEE6E  L0030  LEEA5  
\par LE0AD  L0255  LE0A2  LE0AB  L0259  L0279  LE0CB  L024D  L4E7B  
\par LE082  L4E7C  LF513  LF510  LF5B4  LF663  LF62E  LF655  LF704  
\par L302D  L92A0  L4EAC  L92E3  L014E  L7D17  L0147  L7D22  L7D2D  
\par L7D35  L7D36  L014D  L7D45  L7D51  L7D6B  L7D79  L7DC6  L00F6  
\par L6925  L7DC4  L6927  L6926  L7DBF  L00F5  L7E2D  L5D04  L7E23  
\par L7E2E  LCC05  L7B6A  L0393  L7B6D  L9268  L9262  LA548  LA552  
\par L01EC  LA562  LA56C  L400D  LD083  L01DC  LD11C  L0070  LD15A  
\par LD12E  L01D1  LD1D5  LF2EA  LF2E7  LF2CF  LF2BF  LCF65  LAF40  
\par LB77C  LB78B  LAD5B  LF7E3  L3FCC  LF880  L3FEA  L3FCE  L3FDC  
\par L3FF6  LF7B7  LF7CE  LF7D0  L7873  L7626  L02F2  L78D4  L026F  
\par L7629  L76D7  L7812  L0829  L7789  L4920  L77BF  L77D5  L77F9  
\par L084E  L7801  L78A4  L081F  L77BC  L082A  LEFB2  LEF47  L4008  
\par L4006  L72E5  L730C  L000F  LEFC3  L0015  L7308  L733C  L5B24  
\par L0319  LEF1D  L7346  L735A  L7351  L4133  L0219  L001F  L736D  
\par L5B1E  L0020  L7379  L5B21  L0021  L7385  L5B42  L0022  L7391  
\par L5B52  L739D  L5B58  L73A9  L5B5E  L0025  L73B5  L5B78  L73C1  
\par L5B72  L73CD  L5B74  L73D9  L5B79  L0029  L73E5  L5B8B  L73F1  
\par L5B8F  L73FD  L5B9D  L7409  L5B9F  L7415  L5BA1  L002E  L7421  
\par L5BA2  L742D  L5BA8  L7439  L5BAE  L0031  L7445  L5BB8  L7457  
\par L7467  L0032  L7472  L0033  L747A  L0034  L7482  L7499  L01EA  
\par L4950  L74CA  L4951  L9341  L01F5  LB24D  LB185  L01FF  L01FD  
\par L01FE  L489B  L01D8  L0193  L755E  L4071  L750C  L4072  L0078  
\par L3FCA  L0228  L3012  L0851  L48DD  L026D  L026B  L0049  LEF2B  
\par L4D8C  LCD81  LCD98  LF1CA  LF1D0  LC4F0  L5150  LAF07  LAEB7  
\par L5152  LAEBA  LAF10  LD517  LD519  LD549  LD527  LD547  LD4C3  
\par LD7FB  LD869  LD879  LD886  LD895  LD8B5  LD8C3  LD8CE  LD984  
\par LD934  LC3A5  L691B  LC39F  L306A  LC3B9  L012F  L306C  LC7D6  
\par LC7DC  L4075  LD309  L4076  L007C  L007B  LD333  LD338  L007D  
\par LD34D  LD352  LC635  LC64A  LC6D0  LC96D  LC9C0  L4019  LC9AD  
\par L0833  L9986  L9AA7  L0037  L9FDD  LA05F  LA0B4  LC916  L0844  
\par L4140  LC8BB  LAD8E  LAE03  LAE08  LCF49  LCF53  L1815  
\par      *** Warning:  Branch Ref: 0x1815 is outside of Loaded Source File.
\par LCF64  L0395  L0396  LCEA0  LCE93  LCE9D  L9E20  L9E70  L5090  
\par L9E6D  L5091  L5092  LA432  LA421  L02CC  L4FBD  L02CA  L085E  
\par LA3EC  L027A  L026A  LD28D  L4024  LD288  L4025  LD266  LD2A8  
\par L4E80  L4E81  LCB75  LCB7F  L3FDA  LCB92  LCB95  LDA93  LDA74  
\par LDAA2  LDAA7  LDEE1  LDFAB  LDB00  L00F9  L0014  L5B12  LDAF2  
\par LDB72  LDB18  L4E28  L0158  LDB29  L4E29  LE74C  LE6FE  L017B  
\par LE749  LE7EE  LE7AC  LE796  L017E  LE7A7  L017D  LE7EB  L00E5  
\par LED5F  L00AC  LEDAA  LEA24  LEE43  L0190  LEE40  LEEA9  LEEA6  
\par LF153  L0265  LE0EE  L025F  L0260  LE14F  LE136  L02EB  L02EE  
\par L02EF  L491F  L02ED  L0222  LE237  LF58A  LF57E  LF52B  LF536  
\par LF6BA  LF680  L036E  LF69B  LF695  LF6CB  LF646  L0007  L0008  
\par L92AF  L7D76  L7D88  L7DDA  L7E03  L6929  L6928  L7E01  L02A1  
\par L7E73  L7E90  L4009  L3039  L7E71  LCC18  LCC15  L7B79  L94B3  
\par LC307  L927C  L9285  L9282  LA581  LA586  L01F2  LA5B7  L4E5A  
\par L024C  L4E5C  LA5BC  L4E5B  LA5B2  L4E5D  LA5C2  LD0AA  LD09D  
\par L01D7  LD0CA  L489D  L489C  LD0C7  LD0D5  L489A  LD0E2  L01DA  
\par LD100  L01DD  LD1CE  LD139  LD141  L006D  LD150  LD160  LD1CD  
\par L01D2  LCF70  LCFAF  LCF80  LCF86  LCF83  LCFAB  LAF5C  LAF62  
\par LB106  LB12A  LB291  LB2DD  LB375  LF42B  LF2EB  LB78C  LBCED  
\par LBDF3  LBD4D  LBE8F  LF842  L3FD4  L3FD6  L3FD8  LF7F4  L76DD  
\par L78E4  L78F8  L7634  L862B  L76E5  L4D8E  L76FA  L4D8D  L0067  
\par L450C  L783B  L48D0  LF116  L783D  L77A5  L7907  L77E8  L7874  
\par L78B3  L78CB  L78D3  LEF5F  LEF56  LEF62  LEFC9  LEF22  L4EE8  
\par L0885  L9355  L4EA6  L9387  L935E  L93D4  L9361  LB26F  LB1B5  
\par LB199  L015B  LB1A6  LB1B7  L015C  LB1B2  L019B  LB219  L756A  
\par L756C  L48F3  L48F4  LEF3A  LEF40  LEF34  LCD8C  LCD95  LCDA5  
\par L5E8C  LCE29  LF1DF  LF1E6  L5D05  L5D06  L5154  L5153  LAEC7  
\par LAECC  LAEE3  L0063  LAF0A  LD556  L5B2C  LD567  LD564  L5D2D  
\par LD81B  LD82A  LD852  LD98D  LD99F  LD9AF  LD9B8  LD94C  LD94F  
\par LD94A  L007A  LD380  L406D  LD37B  L084C  LD371  L4073  LD395  
\par LD386  L0184  LC65E  LC66D  L6753  LC668  L6754  LC677  LC68F  
\par L0126  LC6A1  L4011  LC977  L4010  LC988  L0834  LC9C8  LC9C3  
\par L4016  LC9BA  L9992  L99A2  L99AC  L9FE3  L9FEC  L088D  LA07D  
\par LA06C  LA075  L02C8  L02D2  LA0BF  LA1AE  L3FE0  L0847  L0849  
\par LADF3  L0845  LADB2  L084B  LAE0D  LADE4  L5119  LAE00  L511A  
\par L0846  LCEAA  LCEB4  L9E2A  L5066  L9E3A  L0039  L9EB2  L9E8D  
\par L9ECF  LA46E  L5B02  LA44A  L02CF  L4FBE  L02CD  L085D  LA3F6  
\par L4EB1  L4028  LD2A3  L0232  L4026  LD27E  L4027  L402A  LD285  
\par LCBB2  LCBD9  LDA8D  LDEEB  LDFAC  LDF9F  L023F  LDB7A  LDB2D  
\par L4E2A  L4E2C  L4E2B  L4E2E  LDB77  L4E2F  L4E2D  LDB6D  LE71A  
\par LE72E  LE715  L017C  LE7C3  LEDD0  LF162  L0066  LE15D  L494A  
\par LE164  L0858  L4FB4  LE172  LE178  LE1F4  LE188  LE1FC  LE250  
\par LE241  LE24D  LF59E  L0368  LF530  LF562  LF54C  LF55E  LF559  
\par LF6C0  LF6B0  LF6AB  L92B7  L92C2  L92C9  L7E8A  L0246  L02A0  
\par L7EA7  L7ECA  L0065  L7EB5  L413B  L01E8  L7ED2  L7ECD  LB3B5  
\par L94BA  L1803  
\par      *** Warning:  Branch Ref: 0x1803 is outside of Loaded Source File.
\par L94C4  LA4DD  L94DC  L94D3  L997E  LA613  L0283  L020D  LA5E0  
\par L0225  LA616  LA5F1  LA657  LA655  L414D  L0215  LA60E  LD119  
\par L01DF  L01E1  LD172  L084F  LD193  LD191  LD19A  LD02A  LCFF3  
\par LCFDE  LCFCD  L4850  L4851  LCFE6  LCF94  LCF9F  LD048  LB35E  
\par L00F3  L0076  L3000  LAF6F  L3002  LAF9B  LAF96  LAFB5  L009A  
\par LB121  LB124  LE677  LEA7B  LE4BA  LB13B  LB14E  LB15D  L00B1  
\par L00B7  L00BC  L00BE  L00C0  LB2C9  LF0BD  LB2DA  L00E7  LB2FF  
\par LB318  L5D16  LF23F  LB2FA  LB384  L014C  LB38C  LB38F  LF464  
\par LF43D  L0045  LF47D  L036A  L51B1  LF493  L036C  L012C  L00F7  
\par L008B  L008C  L012D  LF36A  LF39F  LF35E  LF339  LF343  LF35A  
\par L0103  LF36C  L03A1  LF376  L0111  LB794  LBACB  LBCF5  LBD44  
\par L0119  LBDFC  L011B  LBE03  L674C  LBE1D  L011F  L6750  LBE1A  
\par L6748  LBE2C  LBE46  L0121  L6752  LBE43  LBE49  LBD59  L00AD  
\par LBD68  LBD71  LBD77  LBE9E  LBEA4  LBEA1  LC065  LF6D2  L4D8F  
\par L7906  L763E  L76A4  L7654  L7678  L864F  L4967  L3FF2  L7851  
\par L7865  L7870  LF121  LF125  L7921  L7919  L4E65  L7883  L789B  
\par L78A3  L4EAB  L4EA8  L93A0  L4EA9  L93A5  L93A7  L94A8  L937F  
\par L50C4  L9377  L50BD  L937C  L93F2  L508E  L93E4  L50B9  L93EF  
\par L9410  L508F  L9402  L50BA  L940D  L4E86  L9423  L02C2  L02C0  
\par L9494  L943D  L9442  L9447  LB213  LB1CD  L00F1  LB1D8  L0094  
\par LB201  LB223  L00AA  L5B28  L0101  LB230  L5D1C  LB23E  L5D1B  
\par LB24C  L7583  LCDB2  L5E8D  LCE39  LD57D  LD589  LD959  LD967  
\par LD390  L406E  L406F  L4070  LC6AB  LC6B7  L4020  LC982  L401B  
\par LC9D2  L401A  LC95B  L401C  LC9E0  L401D  LCA0A  L401E  LC9F9  
\par L401F  L4014  L0836  L4F7A  L99C6  L4F7B  L4F7C  L99C3  L0859  
\par L4F73  L4F79  L99D5  L99ED  L4F7D  L4F7F  L99F2  L085B  L9A20  
\par L02D4  LA031  LA000  L50C2  LA0B1  LA09C  L02D5  L50CD  LA089  
\par L0875  LA0C7  LA13F  LA1B4  LA203  LAE21  LAE23  LAE31  LAE38  
\par LAE42  LAE58  LCEC3  L46F4  LCECB  LCED5  L9E33  L507E  L9E46  
\par L507F  L9E4A  L9ECC  L9EA8  L5096  L9EA5  L9EBE  L9EDB  L0883  
\par L9EE9  L9F78  LA4BC  LA4B6  L50B6  L088E  L50B7  LA4B1  LA457  
\par L50CC  LA465  LA460  LA46B  L4029  LCBC7  L50D2  LCBD6  LCBF0  
\par LCBED  LCC04  LCC01  LDEF2  LE018  L023B  LDFCF  LE033  LDFC3  
\par LDFD1  LE039  LDBAE  L4E30  L0817  L4E35  LDBC4  L4E33  L4E34  
\par L4E31  L4E32  LDBB3  LDBC7  LE727  LE733  LE7D1  LE7D9  LE1A6  
\par L494F  LE19D  L494D  L0293  LE1F9  LE1C2  LE1CF  L491E  LE1EF  
\par L494E  LE20C  LE2D6  LE253  L0264  LF586  LF573  L92D9  L92DD  
\par L92E1  L413A  LB270  L7EE6  L7EEC  LB3BE  LB3C7  LA53B  LA4F0  
\par LA4D0  L94ED  L94EA  L997C  LA671  LA620  L4136  LA66C  L0234  
\par L4144  LA66D  LA6BB  LD1B0  LD1C4  LD1C2  L01D4  L47DA  LD038  
\par LD047  LD059  LD063  L01D5  LD00E  L01D3  LD020  LD02B  L4853  
\par LCFF6  LCFA7  L5B43  LB374  LB370  LAFAB  LAFA6  LAFC5  LAFCE  
\par LAFD1  LE6B3  LE6AF  L015E  LE6A3  LEAAD  LEAA9  L0172  LEA9D  
\par L5B35  LE4CB  LB15F  LB15B  L5D0D  LE576  LE5B7  LE38F  LE96F  
\par LB175  LE5F6  LEDD4  LE930  LE3CB  LE4A4  LE3B1  LF0CA  L015D  
\par L016E  LB316  L00C6  L00CD  LB312  L00CF  L00CB  L5D18  L0102  
\par LB33A  LB344  L0814  L51B3  LF3BF  LF3AC  LF3E3  LF3E0  LF399  
\par L031B  L031D  L031F  L0321  L0323  L0325  L03A3  LB7A2  LB7A8  
\par LB7B9  LB7E8  LB7E0  LB7D0  LBACE  LB7F4  LB802  LB882  LBCFE  
\par LBD00  L0143  LBD11  LBD29  LBD1B  LBD21  L0129  LBE52  L012A  
\par LBE5B  LBE6C  L0123  LBE74  LBE7A  LBD7A  LBD86  LBD8D  LC0B7  
\par LBEC9  L011D  LBEC6  LBEC0  LC06A  LBF79  LC083  L6921  L012B  
\par LC08E  LC0A8  L76BD  L76D3  L4956  L7669  L7675  L768A  L76A0  
\par L4EAA  L4EA7  L93C0  L93C5  L93C7  L94B2  L9323  L92F1  L94A7  
\par L02C5  L02C3  L02C4  L9457  L945C  L945E  L5B22  LB221  L5B2A  
\par LB205  L5B29  LB1FB  L0199  L019A  L0197  L0198  LCDBC  LCDC5  
\par LCDD1  LCDD6  LCE07  LCDFE  LCE04  L0131  LD5C2  LD59A  LD5B8  
\par L5D26  L5D27  L5D25  LD5C0  L5D24  L0081  LD5D6  L018D  LE322  
\par LD5F4  LD5EC  LD602  L4017  LCA14  L4018  LCA1D  L0832  LCA2B  
\par L4F7E  L9A05  L9A00  L9A31  L4EB2  L085F  L9A3C  L9A8B  L4F84  
\par L9A50  L4F85  L9A56  L9A7F  LA03A  LA053  L50C1  L50C0  L50C3  
\par L50C5  LA01F  L9309  LA0A1  L50C6  L4EB3  LA0D5  LA0EC  L4EB4  
\par LA0FD  LA114  L4EB5  LA135  LA176  LA1AC  L4EE6  LA15B  LA170  
\par L4EE7  LA1A9  L0899  LA1A4  L4FB5  L4FB6  LA1EB  LA1E3  L0876  
\par LA22A  L0877  LA226  L0878  LA21B  L4F18  L4F17  LA227  LA238  
\par LA23B  LA35E  LCEF5  LCF0B  LCF15  LCF22  L0886  L508D  L9ECB  
\par L9EFE  L5094  L9EFA  L5095  L9F13  L9F18  L9F31  L0880  L4EAD  
\par LDEFA  LDF20  LDF05  LDF1B  LDF87  L0237  LE042  LE045  LDFDC  
\par LDBFA  L5B01  LDBE2  L081C  L4E36  L0223  LE21B  LE321  LE264  
\par LE2BC  LB27D  L5B26  LB28A  LB28D  L5B23  L48B3  L7EFD  L029E  
\par L48B1  L7F10  L48B2  L7F23  L91B6  L7F89  LAF17  L8695  L7F52  
\par L7F7D  L7F80  L860F  LB3C8  LB3FB  LB486  L0397  LA521  LA516  
\par L0398  L94F4  L961A  L4958  LA67F  LA683  LA627  L4134  LA636  
\par L0233  LA6D4  L083D  LA6ED  LA6F4  LAFB2  L0097  LAFDF  LAFED  
\par L0095  LB001  LB00B  LB01C  L5D23  L019C  LB026  LB02E  LB037  
\par LB054  L009B  LB048  L009D  L0077  LB064  LB06E  LB07D  LB096  
\par LB099  LE6B0  LEAAA  LE5B6  LE5B2  LE5A5  LE5F5  LE5F1  LE5E5  
\par L5B34  L5B2B  LE3A9  LE3AD  LE9DB  LE9D7  LE984  LE98E  L5B87  
\par LE992  LE676  LE672  LE61E  LE96E  LE96A  L016D  LE954  LE96B  
\par LE3E5  L5B3A  L5B31  LE3E9  LE4B5  L5B2F  LE3C3  LE3C7  L0100  
\par LF3F2  LF3FE  LF401  LEFD0  LBADB  LBAE7  L6001  LB870  L6004  
\par LB82B  LB822  LBC0C  LB88E  LBCEC  LBB86  LB8BE  LB8A6  LF141  
\par LB8D5  LB8D9  LB8E8  LB8E9  LBD3C  LBD3E  LBD2F  LBE7D  LBE85  
\par LBE8B  LBD99  LBDA1  LBDB7  LBDB4  LBDF2  LBDCC  LBEE5  LBEFF  
\par L691F  LBEF6  LBF0B  LBF84  LBF95  L691D  LC0A3  L691E  LC0AB  
\par LC0B4  L50CA  L92FE  L9305  L946E  L9473  L9478  L5E8F  LCE20  
\par LCE26  LE32A  LE33B  LD604  LD5FF  L4015  LCA2F  LCA32  L9A15  
\par L4F80  L9A1F  L4F81  L0857  L9AA1  L9AA4  L9333  L9A6B  L0860  
\par L9A66  L0861  L9A7B  L4F87  L9A82  L4F86  L50C7  LA029  L50C8  
\par L931F  L50CB  L50C9  L4EE4  LA18B  LA1A0  L4EE5  L0893  LA1FA  
\par LA249  LA250  L0866  LA367  L0867  L9F2E  L9F48  L5097  L9F45  
\par L9F60  L9F58  L507D  L9F7B  LDF24  LDF40  LDF44  L4E26  LDF5B  
\par LDF84  LDF76  LDF98  LDF9B  LDFE8  LE01B  LDC16  LDC10  L02AB  
\par L4E41  LDC24  LDC27  LDD14  L4E39  LDBEF  LE224  L48C8  LE272  
\par LE275  LE2DE  L02BC  L91BF  L02BD  L91D5  L91D8  L02B8  L02BA  
\par L920E  L91FD  L920A  L9221  L7F95  L85D8  LAF3C  LAF3F  L5181  
\par L5183  L4D8B  L86C4  L866E  L86BA  L86DA  L86F5  L86F2  L861B  
\par L8720  LD3CA  L862A  L5D1D  LB3F4  L5D1F  L5D21  LB3FA  L00FA  
\par L5D0C  L01C9  L01CA  L01CD  L01CB  L01CE  L5D0E  LB426  LB424  
\par LB40D  L00D5  LB48D  LB4DD  LB4E8  LB4A5  LB4AC  LB4B6  L0181  
\par L00D4  L00D9  L00DA  LB4D3  L018B  LB552  L00D6  LB504  LB549  
\par LA532  L4EAE  L9524  L9532  L9551  L4EB0  L086D  L0879  L087A  
\par L0864  L086E  L95DA  L95D5  L95EB  L962A  L9654  L9632  LA694  
\par LA6B0  LA6AD  L4143  LA644  L02B1  L50DA  LA721  L02AF  L02B0  
\par LA72F  LA731  LA742  LA74D  L0837  LA75B  LA76B  LA77A  L0209  
\par LA77D  LA78E  LA79F  LA7AF  L5D02  LB0B2  LB0D0  LB0D2  L5B1D  
\par LE5B3  LE5F2  L5B85  LE9AF  L5B45  L5B46  L5B47  L5B48  LE66A  
\par LF411  LF414  LF01D  LEFD7  L008D  LBB44  LBAFD  LBB02  L0145  
\par LBB41  LBC14  LBC1C  LBCE8  LBBCA  LBBFD  LBBD6  LBBA1  L5FC9  
\par L018C  LF148  LF14E  LF155  LB8F8  LB8FC  LB8FD  LBE8E  L674A  
\par LBDED  L674E  LBDEA  LBF1D  L6920  LBF14  LBFAE  L6924  LBFE6  
\par LBFD2  LBFC6  LBFDA  L02CE  L9488  L948D  L948F  LCA3F  L4F82  
\par L4F83  L0868  L3008  L933F  L9340  L9A73  LA273  L4FBC  LA291  
\par LA269  LA2B1  L9F6D  LDFF7  LE036  LDC35  LDD0D  LDD8A  LDD7E  
\par L4E4F  LDD41  L024A  L4E55  LDD3B  LDD7B  L4E3A  LE2AA  L48C2  
\par LE293  L48C5  LE2CB  LE2A4  LE31E  L48CC  L48C9  L400E  LE308  
\par L48CB  L48CA  L48CD  L9218  L9205  L922E  L9236  L9244  L7FFA  
\par L01ED  L48B6  L7FAE  L48B5  L48B7  L7FBB  L7FFD  L48B8  L7FD4  
\par L7FE6  L7FF4  L8001  L85EB  L85FA  L8681  L8689  L8694  L86F6  
\par L8627  L8A01  L8745  L872E  L8734  L873F  L493F  L8756  L8758  
\par L876E  L4940  L0290  L4942  L028F  L8789  LD3DD  L0811  LD3D8  
\par LD410  LB43D  LB458  L01D0  LB472  LB47A  LB524  LB51E  LB52D  
\par L95E3  L95E6  L0862  L0871  L087D  L4E87  L9614  L960E  L9611  
\par L9920  L9684  L4F19  L4F1B  L4F1A  L4F1F  L9674  L4F20  L4F21  
\par L4F1C  L4F1E  L4F1D  L4F22  L4F23  L9690  L9696  LA6B7  LA7AA  
\par L083F  LA7B9  L020F  LA7D6  L01E4  LA7EC  LA7FD  L021B  LA810  
\par LA81A  LA830  L4141  L413D  L021C  LA849  L021E  L022E  L413F  
\par LA8A3  LA88D  LA882  L5D13  L5D12  LE34C  LB0FB  LB0F8  L5B89  
\par L5B8C  LE9D8  LE673  LF42A  LF421  LF024  L0144  LBB1D  LBB23  
\par LBB36  LBB33  LBC5A  LBC33  L0139  L0138  L013A  L5FCF  L5FD0  
\par L018E  L018F  LBBE9  LBBF2  LBBFB  LBC0B  LBBB8  L5FCA  L5FCB  
\par L5FCC  LBBD0  LB905  LB917  LD96D  LB927  LB929  L013E  LB942  
\par L00E2  L00E9  L5FFF  LB94B  L5FFE  LB988  L6923  LBF76  LBF35  
\par LC0B8  L0110  LBF53  LBF4E  L0185  L0125  LBF62  LBF6A  L00EB  
\par LBF71  L00ED  LC046  LBFF3  LC01C  LC00A  L6747  LC025  L6922  
\par LBFE0  L9A7E  L4FBB  LA287  LA2A3  LA29E  LA2CF  LA2C3  LA2BE  
\par LE010  L023A  LDC3C  LDCFD  LDDC1  L4E57  LDDA0  L4E58  LDDC6  
\par L4E56  L4E59  LDDCB  LDD59  L0248  L4E53  LDD56  LDD44  L48C6  
\par LE2D9  L0801  L48C1  LE29F  L48C4  L48DF  L0261  L804F  L0200  
\par L8014  L801D  L48B9  L8022  L48BB  L803D  L48BA  L804A  L8053  
\par L4969  L8609  L860C  L8708  L871F  L8F97  L8A1B  L8A50  L48C7  
\par L8A35  L8A28  L8A32  L8A3B  L8A52  L8A47  L0289  L0287  L8A7B  
\par L8790  L4E4E  L028E  L493D  L87A2  L87BB  L87AF  L87B7  L01F7  
\par L87BD  LD405  L080F  L4132  LD402  LB543  LB53B  LB553  LB5FE  
\par LEBB1  L95EE  L0889  L9938  L9963  L994F  L50BE  L96C5  L970F  
\par L4F05  L4F06  L96B4  L4F07  L96BC  L4F09  L4F08  L96FF  L0217  
\par L413C  L413E  L0154  L0220  LA8F1  L083C  LA90C  LA914  LA895  
\par L4854  LE364  LE35F  LE38E  LBCCB  LBC5C  LBBC5  L5FCD  L5FCE  
\par LD97B  LD982  LB954  LB976  L0141  LB9AB  L5FE1  LB9A0  LBA76  
\par LC054  LC10A  L0188  LC0CC  L0186  LC0F8  LC107  LC118  LC05C  
\par LC05F  LC02B  LC034  LC03F  LC017  LA2AC  LA2E0  LA2EB  LA2CC  
\par LDC39  L0242  LDC52  LDC4B  LDC4F  L4E42  L0243  L0244  LDE01  
\par L4E66  LDDFB  L024F  L4E69  LDDF8  L4E52  LDD86  L4E50  L0247  
\par L4E51  LDD74  LDD87  L48C3  L0262  L8069  L8075  L808B  L48CE  
\par L8098  L80B8  L8712  L8FA6  L8FAC  L8A6B  L48E2  L8A71  L48CF  
\par L8AEE  L8AFC  L48D8  L8AE9  L48D4  L8AC9  L8AB0  L8AC1  L0294  
\par L48D5  L8AD9  L8B05  L87CA  L0298  L87D0  LB562  LB574  LB57C  
\par LB586  LB588  LB591  LB597  LB59F  LB5A1  LB5AB  LB5AD  LB5B3  
\par LB5BF  LE414  LB5CE  LB5DB  LB5E3  LB5EB  LB5F1  LB5FD  L0114  
\par LB64D  LB631  LB64C  LEC13  LEBD6  L088B  L50BF  L96E4  L96F8  
\par L971A  L9781  L415D  LA91D  LA977  LE37B  LBCD8  LBC84  LBC6E  
\par LBC7E  LBC8E  LBC89  L013F  LB987  L5FE2  LB9BA  LB9BF  LB9CA  
\par LB9C3  L5FE3  LB9F7  L013D  LBA91  LBA8E  L601E  LBA9F  LBAA5  
\par LBAAC  LBABF  LE424  L0112  LBAC8  LA2FF  LA31F  LA313  LA30D  
\par LA30E  L4E47  LDC8E  L4E43  L4E44  L4E45  L4E46  LDC7A  L4E4A  
\par L4E4D  LDD03  LDC90  L4E6E  LDE39  LDE1E  L4E70  LDE41  LDE44  
\par LDE30  LDD83  L80A0  L4905  L80B5  L0254  L4D8A  L025B  L0257  
\par L80ED  L80F0  L4D88  L8112  L0271  L0275  L8138  L813B  L81D1  
\par L817F  L8156  L514B  L8153  L084D  L514C  L514F  L514D  L8170  
\par L514E  L8179  L0075  L50CE  L8FBB  L02B6  L8FC7  L1809  
\par      *** Warning:  Branch Ref: 0x1809 is outside of Loaded Source File.
\par L8FA8  L50D0  L901B  L8FFA  L8FDA  L8FDD  L02B7  L9016  L50D7  
\par L8FF2  L02A9  L48D6  L8AF9  L8B3F  L8B13  L4952  L48DA  L48DB  
\par L8B39  L082C  L48DC  L8B31  L48E0  L8AD3  L48EE  L8AE4  L8B02  
\par L029F  L87D3  L87E9  L87E6  L885C  LE420  LB665  L00D7  L5FC5  
\par LB67D  LB691  LB69B  LB74E  LEC4E  LEBE1  LEBE5  LEC15  L0132  
\par LEC4F  LEC4B  L4F12  L4F13  L96F0  L4F14  L4F16  L4F15  L973C  
\par L9730  L9756  L088F  L97A5  L932A  L97A2  L4F24  L4F25  L97AF  
\par L97B3  L4159  L415A  LA932  L415B  LA939  LA9CC  LBCAE  LBC9A  
\par LB99D  LBA21  LBA7C  LB9E5  L5FDD  L5FE4  L013C  LBA03  LBA05  
\par LBA18  L0142  LBA2E  LBA3D  LBA5D  LBA4D  L5FDE  LBA54  LE430  
\par LA332  LA32D  LA319  LA340  LDCBB  LDC9C  L48ED  L4E48  LDCAC  
\par LDCB6  L4E6F  LDE28  LDE3C  LDE4E  L4E73  LDE96  LDE6F  L4E72  
\par LDE6C  L4E74  LDE9E  LDE74  L81DB  L818A  L81E9  L8198  L81A0  
\par L81A2  L81C5  L495C  L028D  L495B  L81EC  L8300  L9039  L9033  
\par L9042  L90F3  L9004  L9007  L50D1  L901E  L4909  L8B49  L4E71  
\par L8B4D  L4955  L8B6B  L4957  L8B64  L48E1  L8AFF  L87F1  L885F  
\par L8859  L880D  L8873  L0282  L029D  L89F4  L601D  LB6AC  LB6CE  
\par LEC30  L0133  LEC7E  L974C  L0895  L0891  L977E  L977B  L9775  
\par L9331  L9332  L97BC  L0869  L97C6  L97CA  L415C  LA954  L415F  
\par L46E8  LAA40  L46E9  LA9EC  L0838  LBCC9  L5FDF  L5FE5  L0140  
\par LBA71  L5FE0  LBA63  LA33B  LA352  LA34D  L0245  LDCC5  L4E4C  
\par LDCE5  L4E4B  LDCD3  LDEA1  L4E76  L4E78  LDE89  L4E79  LDEB6  
\par LDEB3  L0856  L4E7A  LDED7  L087F  L81FE  L48BC  L8218  L8207  
\par L8213  L4938  L0268  L0267  L4939  L8315  L81DF  L83D0  L905A  
\par L9064  L9067  L02AD  L50D3  L9082  L9085  L02B3  L02B5  L90AF  
\par L50D4  L90A2  L90A5  L90DB  L90C2  L50D8  L90C8  L9176  L9120  
\par L9144  L9105  L916E  L8B75  L8D50  L8818  L881C  L8825  L8889  
\par L0291  L8883  L88A1  L89FB  L0292  LB6BA  L00DB  L00D8  LB6FA  
\par LB6E9  LB6F8  L0134  L0897  L97D3  L97E1  L97ED  L4F76  L97FA  
\par L4F77  L9807  L4F78  L9819  L4F75  L9820  L9829  LA95D  LA967  
\par LAA69  L4151  LAA5C  L022B  LAAA3  L083A  LAA18  LAA23  L083B  
\par LAA35  LAA3D  LA35B  LDCEB  LDCE0  L4E49  L8222  L822F  L8247  
\par L48BD  L821A  L83EE  L48D1  L48D2  L48D3  L83F4  L006C  L8425  
\par L90E6  L90F0  L917A  L90D5  L90D8  L919A  L918D  L912A  L9148  
\par L50DC  L50DB  L913B  L50DD  L9177  L50D9  L4917  L8B8D  L4918  
\par L0286  L8B9C  L026E  L8D71  L081A  L8D68  L0818  L48EC  L8DAE  
\par L8D96  L8DA0  L8DA6  L8E1D  L8E56  L8834  L494B  L889B  L494C  
\par L02A3  L88F6  L4943  L88C9  L88DB  L0285  L88E6  L8893  LB6C1  
\par LB6C7  LB701  LB70B  L4F74  L9AA8  L9D03  L9D89  L9840  L984E  
\par L9855  LA973  LA97D  LA980  LAAA6  L414E  L4150  LAA7B  L414F  
\par LAA8D  LAA90  LAAAD  L1812  
\par      *** Warning:  Branch Ref: 0x1812 is outside of Loaded Source File.
\par LAAE0  LAADD  L4160  LAACD  L4163  LAAD2  L8236  L48C0  L081D  
\par L8258  L8255  L8402  L4510  L840E  L8416  L842E  L8449  L844F  
\par L8473  L847F  L91B5  L91B2  L50CF  L9197  L9153  L9161  L9164  
\par L02AA  L9173  L4919  L0203  L0204  L0205  L8BCA  L490D  L8BD2  
\par L8CDF  L8E1F  L8DCE  L48EA  L8DCA  L8DD9  L8E04  L48EB  L8E00  
\par L8DFE  L8E1A  L8E18  L8E5C  L48F2  L8E75  L8E70  L48F0  L8E73  
\par L4901  L4902  L4903  L4904  L8908  L891F  L8932  L894C  L02A4  
\par L8962  L89B0  L493E  L8970  L88F2  LB713  LB72A  LB733  L0113  
\par L9AB2  L9ABA  L9AD2  L9ADD  L9D13  L9D53  L9D95  L9D9F  L9863  
\par L0870  L986A  LA995  LA9A2  LA9A8  L0211  L4145  LAAF9  LAB47  
\par LAB24  L0231  LAB17  L4164  L4161  L493A  L8262  L8330  L450F  
\par L8422  L847B  L848E  L84A0  L859F  L8C34  L8BDD  L490A  L8BE8  
\par L0299  L490F  L8D0C  L028C  L8D15  L48E4  L8E34  L48E5  L48E6  
\par L8E41  L48E7  L48E8  L48E9  L8ED2  L8E99  L8EA2  L8ECC  L48EF  
\par L8E7B  L89C5  L4944  L89BD  L89CC  L897B  L897C  L4EE9  L9AE8  
\par L4EEA  L9B10  L9D1A  L9D20  L9D26  L4FBF  L9D3D  L9D4B  L9D5E  
\par L9D72  L9D9D  L9DDF  L9DB7  L9DC2  L9DC8  L9874  L9877  L9891  
\par L988A  L450A  LA9C0  L450B  LA9BC  LA9C3  LAB60  LAB59  LAB63  
\par L46D5  L46D6  L46D7  L46D8  L82CA  L8284  L82E0  L8341  L8349  
\par L83CA  L84DE  L84AD  L84D3  L85AE  L029A  L4913  L8CA4  L8C5A  
\par L490E  L4914  L490B  L8C7C  L8C88  L491B  L8C9D  L8CA3  L4912  
\par L8CC0  L4915  L4916  L491A  L8D1B  L490C  L8C09  L8C31  L8C17  
\par L8D36  L8D49  L0399  L0263  L8EFD  L48BE  L48BF  L8F00  L026C  
\par L8EC9  L8EBB  L48FF  L48FD  L89E9  L4908  L8998  L4907  L89AD  
\par L8995  L9AFE  L9B3B  L9B2A  L9B41  L9CE9  L4FC0  L9D47  L4FC1  
\par L9D56  L9D67  L9DBD  L5030  L9DC5  L5031  L9DD5  L9DD8  L9899  
\par L509F  L98B5  L509E  L98B8  L98C6  LAB91  L45CE  LAB72  L45CF  
\par LABA2  LAB7B  L4E6D  L4935  L82DA  L4937  L8325  L828F  L493B  
\par L82B8  L493C  L82AA  L4933  L82E3  L4934  L82C6  L4930  L82E8  
\par L082B  L8357  L8362  L492C  L836B  L492D  L837B  L8390  L839D  
\par L839F  L492F  L83B4  L492E  L84E9  L854C  L84F2  L8507  L8518  
\par L0281  L8535  L027F  L027D  L0280  L027C  L8559  L84B7  L4922  
\par L84DC  L496A  L84D9  L8555  L85C9  L85D2  L4963  L4965  L8C1E  
\par L8CD6  
\par      *** Warning:  Branch Ref: 0x1800 is outside of Loaded Source File.
\par L8F4B  L0297  L8F1E  L8F89  L0296  L8F2C  L48E3  L8F3D  L8F4E  
\par L8F57  L4900  L48FE  L89A3  L4906  L9B09  L9B50  L9B82  L9B70  
\par L0873  L9D70  L98BE  L98C0  L98D6  L9913  LABB2  L414B  LABD5  
\par LABD2  LAB87  LAB89  L0269  L82FB  L4931  L82F6  L4932  L831E  
\par L4928  L8576  L492A  L8599  L858C  L4910  L8C3A  L4911  L8C36  
\par L491C  L8CF0  L8F82  L8F70  L48F1  L8F6B  L8F7D  L504B  L504C  
\par L9B7C  L9CBD  L9B8D  L9BA1  L98FD  L50A2  L98EE  L98F2  L50A0  
\par LABC9  L4149  LABF9  LABE9  LABF4  L039A  L8586  L8CFB  L8C39  
\par L8F7A  L9CDC  L9CCC  L9CD3  L9CD9  L9B96  L9BB2  L9BBC  L990B  
\par L4147  L0213  LAC0B  LAC1D  LAC1B  LAC24  L180F  
\par      *** Warning:  Branch Ref: 0x180F is outside of Loaded Source File.
\par L0224  LAC3F  LAC5D  L3FE8  L3FE6  LACEC  LACCB  LACD7  LACE0  
\par LACD1  LACB9  L4E67  LACC8  L8D0B  L9CE7  L9B9F  L9C31  L50B8  
\par L9BF9  L9BDC  L50BC  L9BF6  LACFC  LAD5E  L3FEC  L3FE4  L4E68  
\par LACCE  L9C49  L9C3E  L9C44  L9C5F  L9C0A  L9C23  L9C1E  L9C62  
\par L9C56  L9C5C  L9C2E  L9C6D  L9C94  L9C81  L9C8F  L50BB  L9CBC  
\par 
\par Pass 2 - Disassembling to Output File...
\par 
\par      *** Warning:  Branch Ref: 0x1800 is outside of Loaded Source File.
\par 
\par      *** Warning:  Branch Ref: 0x1809 is outside of Loaded Source File.
\par 
\par      *** Warning:  Branch Ref: 0x1803 is outside of Loaded Source File.
\par 
\par      *** Warning:  Branch Ref: 0x1812 is outside of Loaded Source File.
\par 
\par      *** Warning:  Branch Ref: 0x180F is outside of Loaded Source File.
\par 
\par      *** Warning:  Branch Ref: 0x1815 is outside of Loaded Source File.
\par 
\par      *** Warning:  Branch Ref: 0x1806 is outside of Loaded Source File.
\par 
\par      *** Warning:  Branch Ref: 0x180C is outside of Loaded Source File.
\par 
\par Disassembly Complete
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par 
\par Due to copyright issues, the source binary file and resulting disassembly file cannot be included in the distribution of M6811DIS.
\par 
\par By examining this output, we can better illustrate the ord
er of operation within the disassembler.  First, we see that after initializing itself, the disassembler reads the Control File.  From the Control File, the disassembler sets the load address to 0x4000, sets the input filename to \ldblquote AV94BNBH.BIN
\rdblquote , sets the output filename to \ldblquote AV94BNBH.DIS\rdblquote 
, sets 21 user-specified entry points and 16 user-specified labels, and enables the outputting of address information in the output file.  Notice that the indirect vectors specified in the Control File isn\rquote t processed until later \endash 
 this is because the source file has to be loaded before the indirects can be resolved.
\par 
\par After reading the Control File, the disassembler reads the M6811DIS.OP opcodes file \endash  there are 308 unique opcode definitions for the HC11.  Then after reading 
the opcodes, it loads the source file.  Notice that this particular file is 0xC000 bytes or 48K.  Since it started at 0x4000, the loaded code consumes the upper 48K of the HC11\rquote s 64K program-space.  Typically you should }{\b never}{
 have a file that occupies the entire 64K address-space of the HC11.  This is because part of that space is really RAM space and HC11 Register Space.  RAM and Register space (and anything else that isn\rquote 
t part of the program and program data) should not be included, simply because the information in those areas is not valid.
\par 
\par This version of the disassembler allows for only one source binary to be loaded during a run and consequently has only one single load address that can be specified.  If more than one file needs to be loaded, they mu
st be externally concatenated into a single unit.  Future versions of the disassembler will allow for multiple source files to be loaded, each at their own unique starting address, and will allow for file formats other than binary to be used.  In any case
, overlaps in the files\rquote  are not permitted.
\par 
\par After loading the source file, the disassembler can now resolve the indirects specified in the Control File.  It reads the address stored at each specified indirect location and adds the found address to the inte
rnal entry table.  Note that this version of the disassembler assumes that all indirect values specified are indirect addresses of (or pointers to) code entry points \endash 
 such as an interrupt table entry.  Future versions of the disassembler will also allow the specifying of indirect addresses for pointers that point to data instead of code.
\par 
\par Now that everything has been loaded, the disassembler will begin pass 1 through the source that it has loaded into memory.  During this pass the disassembler will tag all
 loaded memory locations as being either data or code.  And, each time it encounters a new label, the new label is added to the label table and outputted to stdout.  This is why the labels appear seemingly in random order.
\par 
\par Notice the warning messages like \ldblquote *** Warning:  Branch Ref: 0x1803 is outside of Loaded Source File.\rdblquote 
.  These indicate that a branch or jump instruction specified an address that was outside of the memory area loaded from the source file.  This is typical in applications that have more t
han one source for the program code.  It can result from any of the following \ldblquote system\rdblquote  reasons:
\par 
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar\jclisttab\tx1080{\*\pn \pnlvlblt\ilvl0\ls15\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\hyphpar0\ls15\adjustright {
The code is split into multiple ROM chips
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar\jclisttab\tx1080{\*\pn \pnlvlblt\ilvl0\ls15\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\hyphpar0\ls15\adjustright {
The code is simply broken into multiple parts
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar\jclisttab\tx1080{\*\pn \pnlvlblt\ilvl0\ls15\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\hyphpar0\ls15\adjustright {
A second processor with common dual-port memory space
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar\jclisttab\tx1080{\*\pn \pnlvlblt\ilvl0\ls15\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\hyphpar0\ls15\adjustright {
Dynamic code that is loaded into RAM either by this program or some other bootstrap
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar\jclisttab\tx1080{\*\pn \pnlvlblt\ilvl0\ls15\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\hyphpar0\ls15\adjustright {
One of many other possible \ldblquote system\rdblquote  reasons
\par }\pard \nowidctlpar\widctlpar\hyphpar0\adjustright {
\par It can, however, from any of the following \ldblquote user\rdblquote  reasons:
\par 
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar\jclisttab\tx1080{\*\pn \pnlvlblt\ilvl0\ls16\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\hyphpar0\ls16\adjustright {
An incorrect load address for the binary image was specified
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar\jclisttab\tx1080{\*\pn \pnlvlblt\ilvl0\ls16\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\hyphpar0\ls16\adjustright {
An incorrect entry point was specified
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar\jclisttab\tx1080{\*\pn \pnlvlblt\ilvl0\ls16\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\hyphpar0\ls16\adjustright {
The binary could be corrupt or incorrect
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar\jclisttab\tx1080{\*\pn \pnlvlblt\ilvl0\ls16\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\hyphpar0\ls16\adjustright {
One of many other possible \ldblquote user\rdblquote  reasons
\par }\pard \nowidctlpar\widctlpar\hyphpar0\adjustright {
\par If you see errors of this nature, check your source file.  Make sure it is the correct length and that you have specified the load address correctly.  Make 
sure that you have all the pieces of the binary and that they are concatenated and/or padded correctly.
\par 
\par In this example, we can ascertain that in this particular case, it is the result of a \ldblquote hardware\rdblquote  reason.  We notice that the 8 different \ldblquote outside\rdblquote  addr
esses are spaced every 3 bytes apart.  Peculiarly enough, the jump instructions in the HC11 happen to also be 3 bytes long.  After double checking our original ROM and after further study of the device under test, we find that these \ldblquote outside
\rdblquote  addresses create a dynamic jump-table and that these addresses appear in a secondary memory device \endash 
 possibly EEPROM or a dual-port memory interfacing this HC11 with a coprocessor.  By reading the HC11 memory space in-circuit, we can actually see this dynamic jump tabl
e and how it is created.  But, the knowledge, instruction, and methodology on how to do in-circuit testing and other more in-depth reverse engineering techniques are outside the scope of this document.
\par 
\par After the disassembler has completely exhausted all e
ntry point table values, the disassembler then starts pass two.  Pass two is simply an iteration through the entire loaded memory space, while outputting the disassembly to the output file.  After the iteration through the source is complete, the disassem
bly process is finished.  The resulting assembly file, when reassembled according to the section }{\b Reassembling a Disassembly}{
, will result in a binary file that is guaranteed to be byte-for-byte identical to the original binary source file.  This eliminates many of the headaches and hard work required by most disassemblers that aren\rquote t targeted for a specific assembler 
\endash  on those disassemblers, it is often necessary to completely rework the output file before it will even assemble, much less assemble back into 
the original binary.  That is what makes this disassembler so appealing to the reverse-engineer, who often needs to disassemble a program, add or change some functionality, and then reassemble and be able to do so without reworking the entire source by ha
nd.
\par 
\par {\listtext\tab}}\pard\plain \s1\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\ls1\outlinelevel0\adjustright \b\f1\fs28\cgrid {\page {\*\bkmkstart _Toc454349562}{\*\bkmkstart _Toc455229643}Control Files{\*\bkmkend _Toc454349562}{\*\bkmkend _Toc455229643}

\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
Control files are the means for telling the disassembler how to load, interpret, and disassemble the desired binary source file(s).  The reason there is a Control File is that the disassembler needs to know more than just the name of the original file 
\endash  so much more that it would be cumbersome to have to repeatedly specify these options on the command line when running the disassembler, not to mention you'd run out of command line space!
\par 
\par A Control File is nothing more than a simple text 
file that you create using your favorite text editor.  This text file is a listing of commands with associated arguments for the disassembler.  Each command must be listed on a separate line and all numeric arguments must be entered as hexadecimal values 
with no hex-denoting prefix or suffix.  That is, you do }{\b\ul not}{ put a \lquote 0x\rquote  or \lquote $\rquote 
 or any other symbol before or after to indicate a hexadecimal value.  Future versions of the disassembler will allow for other number bases, but on this version all values are assumed to be in hexadecimal.
\par 
\par Comments can be placed in the command file by using a semicolon (\lquote ;\rquote ).  Any text on a line following the \lquote ;\rquote  will be ignored by the disassembler.  Blank lines are also ignored.
\par 
\par The order of the commands in the Control File does
 not matter on this version, as none of the commands have any interdependencies.  However, on future versions, there may be some command orderings that will matter.  For example, on future versions where the number-base can change, it would be necessary t
o specify a new default base before using that base.  But on this version, order makes no difference.
\par 
\par The commands are }{\b\ul not}{ case sensitive, as everything is internally converted to uppercase.
\par 
\par On this version, all commands must be placed into one single Control File.  Future versions will allow for combining of Control Files and more extensive Control File parsing options.
\par 
\par A bare minimum Control File can consist of only 2 lines \endash  an \ldblquote input\rdblquote  statement and an \ldblquote output\rdblquote  statement, as you\rquote ll see from analyzing t
he example and command descriptions below.  The default load address for the source binary file is 0x0000 if it isn\rquote t explicitly specified.  And, if no \ldblquote entry\rdblquote  or \ldblquote indirect\rdblquote 
 statements are specified to give entry points, then the file load address will be 
used as an entry point.  However, you should note that the load address is NOT assumed to be an entry point if any other entry point (either direct or indirect) is used.  If the load address is a correct entry point and you have other entry points and/or 
indirects specified, you must include an additional \ldblquote entry\rdblquote  command to add the load address to the list of entry points.
\par 
\par All of the Control File commands fall into one of three categories: 1) Switch Commands, 2) Value Commands, and 3) List Entry Commands. 
 Each Switch Command switches a yes/no option in the disassembler.  This version supports the following Switch Commands: ASCII, ADDRESSES, and OPCODES.  The Value Commands allow you to specify a value for a disassembler option.  This version supports the 
following Value Commands: INPUT, OUTPUT, and LOAD.  The List Entry Commands allow you to add an entry to one of the disassembler\rquote 
s internal lists, such as the entry point table, the label table, or the indirects table.  This version supports the following L
ist Entry Commands: LABEL, INDIRECT, and ENTRY.  Each of the supported commands are described in detail in the following sections of this document.
\par {\listtext\tab}}\pard\plain \s2\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\ls1\ilvl1\outlinelevel1\adjustright \b\i\f1\cgrid {\page {\*\bkmkstart _Toc454349563}{\*\bkmkstart _Toc455229644}Example Control File{\*\bkmkend _Toc454349563}
{\*\bkmkend _Toc455229644}
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {Below is the Control File that was used in an actual disassembly/reverse-engineering e
ffort.  This Control File is the one that was used to create the previously discussed screen output in the }{\i Step-by-Step Walk-Through}{ section:
\par 
\par }\pard\plain \s32\fi1\li1440\nowidctlpar\widctlpar\hyphpar0\adjustright \f2\fs12\lang1024\cgrid {;
\par ; M6811DIS Control File for:
\par ;
\par ;  '94 Astro Van computer code: BNBH
\par ;
\par 
\par input AV94BNBH.BIN
\par output AV94BNBH.DIS
\par 
\par load 4000
\par 
\par addresses
\par ascii
\par 
\par label ffd6 scivect
\par label ffd8 spivect
\par label ffda paievect
\par label ffdc paovect
\par label ffde tovfvect
\par label ffe0 ti4o5vect
\par label ffe2 to4vect
\par label ffe4 to3vect
\par label ffe6 to2vect
\par label ffe8 to1vect
\par label ffea ti3vect
\par label ffec ti2vect
\par label ffee ti1vect
\par label fff0 rtivect
\par label fff2 irqvect
\par label fff4 xirqvect
\par label fff6 swivect
\par label fff8 ilopvect
\par label fffa copvect
\par label fffc cmonvect
\par label fffe rstvect
\par 
\par indirect ffd6 scirtn
\par indirect ffd8 spirtn
\par indirect ffda paiertn
\par indirect ffdc paortn
\par indirect ffde tovfrtn
\par indirect ffe0 ti4o5rtn
\par indirect ffe2 to4rtn
\par indirect ffe4 to3rtn
\par indirect ffe6 to2rtn
\par indirect ffe8 to1rtn
\par indirect ffea ti3rtn
\par indirect ffec ti2rtn
\par indirect ffee ti1rtn
\par indirect fff0 rtirtn
\par indirect fff2 irqrtn
\par indirect fff4 xirqrtn
\par indirect fff6 swirtn
\par indirect fff8 iloprtn
\par indirect fffa coprtn
\par indirect fffc cmonrtn
\par indirect fffe reset
\par 
\par entry 7C0B
\par entry 7C12
\par entry 7C1C
\par entry 7C22
\par entry 7C35
\par entry 7C6B
\par entry 7C7C
\par entry 7C83
\par entry 7C9C
\par entry 7CA0
\par entry 7CAA
\par entry 7CAE
\par entry 7CBE
\par entry 7CC2
\par entry 7CCC
\par entry 7CDD
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par This is the same example Control File that is provided in soft form with the distribution of this disassembler and was used to disassemble the code from a 1994 4.3L CPI Vortec Astro Van vehicle computer, which happens to
 use a Motorola 68HC11 variant.  Let\rquote s analyze this Control File piece by piece.
\par 
\par First off, we define the input and output files we will be using.  I typically use the convention of .bin for all source binary format files and .dis for all disassembler out
put files.  After I have a chance to go through the disassembled output, clean it up, and comment it, I\rquote ll rename the \ldblquote clean\rdblquote 
 version with a .asm extension.  You may, however, adopt a different extension standard, as the disassembler doesn\rquote t care what you 
name the input and output files as long as they are properly specified in the Control File.  It will complain if you don\rquote t specify these.
\par 
\par We then tell the disassembler that the load address for this file is 0x4000.  Even though the ROM is a 27512 or 64K byte ROM, only the upper 48K is used \endash 
 with the lower 16K being all 0xFF bytes.  This makes sense considering the RAM and CPU Registers exists in the lower memory.  So after reading the entire 64K ROM, the binary image was trimmed down to 48K by using a hex
 editor (a decent hex editor for Windows is written by BreakPoint Software and can be found at }{\field{\*\fldinst { HYPERLINK http://www.bpsoft.com }{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000000f0000007700770077002e006200700073006f00660074002e0063006f006d000000e0c9ea79f9bace118c8200aa004ba90b2e00000068007400740070003a002f002f007700770077002e006200700073006f00660074002e0063006f006d002f000000}}
}{\fldrslt {\cs34\ul\cf2 www.bpsoft.com}}}{).  As mentioned earlier, it is }{\b\ul not}{ good to include parts in the binary source image that isn\rquote t actually part of the code or data being disassembled \endash  in this case the 0xFF padding.
\par 
\par In our output, we\rquote d like for the disassembler to include the actual memory address for each instruction in the disassembly output, so we include the \ldblquote addresses\rdblquote  switch to enable that.  And we\rquote 
d also like for it to attempt to decode any areas that doesn\rquote t appear to be code as possibly being ASCII data and to output them as strings if they exist, so we\rquote ll include the \ldblquote ascii\rdblquote  switch.
\par 
\par Since we know that this is an HC11 processor and that the ROM exists in the upper memory, it only makes sense that the image includes the interrupt vector table.  So we\rquote 
ll include a list of the basic HC11 interrupt vectors.  (Because of their complexity and variance from one HC11 family to another, the detail
s and specifics of these interrupts are not included in this document, but are available in the aforementioned HC11 reference manuals.)  We first define a name for each of the vector locations themselves.  This is optional, but allows us, when looking at 
a disassembly output, to easily tell which vector is which.  We then list each vector as being an indirect \endash 
 which will cause the disassembler to add the address located at the vector address to the list of entry points.  It also allows us to specify a label name for the routine that is being indirectly referenced.  So, we\rquote ll give them names like 
\ldblquote reset\rdblquote  and \ldblquote swirtn\rdblquote , things that will be meaningful when we later examine the disassembly.
\par 
\par If this were the first time we\rquote ve encountered this binary, that is about all that we can enter into the Control File, as we won\rquote t yet know of any additional entry points.  So we run the disassembler with a Control File that doesn\rquote 
t have the \ldblquote entry\rdblquote  commands listed.  In a quick look over the resulting output, we\rquote ll find severa
l jump tables and code that get called indirectly during execution.  Typically, these are done by loading one of the index registers with a lookup table address and doing a \ldblquote jsr\rdblquote  relative to the index register value.  So, look for 
\ldblquote Undetermined Branch Address\rdblquote 
 comments in the disassembler output.  Anytime the disassembler encounters a jump it cannot trace, it will comment the instruction as such.  This will typically be a clue to you that you need to look for a branch table or similar, add \ldblquote entry
\rdblquote  values or additional \ldblquote indirect\rdblquote  values to the Control File, and run the disassembler again.  That is what was done here and is where the addresses came from that you see in the \ldblquote entry\rdblquote 
 commands.  Most of these were actually indirects, instead of plain entries, but I chose to use the \ldblquote entry\rdblquote  command so you can see additional control file commands in-use.
\par 
\par The only Control File command supported in this version of the disassembler that isn\rquote t illustrated in this example is the \ldblquote opcodes\rdblquote  switch.  It works in the same way that \ldblquote addresses\rdblquote  and \ldblquote ascii
\rdblquote  does, except that it causes the disassembler to output the actual opcode bytes for each disassembled instruction along with the normal disassembly.
\par 
\par 
\par 
\par 
\par 
\par {\*\bkmkstart _Toc454349564}{\*\bkmkstart _Toc455229645}{\listtext\tab}}\pard\plain \s2\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\ls1\ilvl1\outlinelevel1\adjustright \b\i\f1\cgrid {Control File Commands{\*\bkmkend _Toc454349564}
{\*\bkmkend _Toc455229645}
\par {\*\bkmkstart _Toc454349565}{\*\bkmkstart _Toc455229646}{\listtext\tab}}\pard\plain \s3\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\ls1\ilvl2\outlinelevel2\adjustright \b\f1\cgrid {Switch Commands{\*\bkmkend _Toc454349565}{\*\bkmkend _Toc455229646}

\par }\pard\plain \s4\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\outlinelevel3\adjustright \f1\cgrid {{\*\bkmkstart _Toc455229647}ADDRESSES{\*\bkmkend _Toc455229647}
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {\b Format:}{ addresses
\par 
\par The \ldblquote addresses\rdblquote  switch instructs the disassembler to output the address of the start of each instruction in front of the actual disassembled instruction in the output line.  Here is an output example with \ldblquote addresses
\rdblquote  turned on:
\par 
\par }\pard\plain \s32\fi1\li1440\nowidctlpar\widctlpar\hyphpar0\adjustright \f2\fs12\lang1024\cgrid {EBAC\tab LEBAC:\tab clra\tab 
\par EBAD\tab LEBAD:\tab staa\tab L0177
\par EBB0\tab LEBB0:\tab rts\tab 
\par EBB1\tab LEBB1:\tab brset\tab *L003B,#0x04,LEC13
\par EBB5\tab \tab ldx\tab #0x5B00
\par EBB8\tab \tab brclr\tab 0x08,x,#0x04,LEC13
\par EBBC\tab \tab brset\tab *L0090,#0x40,LEBD6
\par EBC0\tab \tab bset\tab *L0090,#0x40
\par EBC3\tab \tab brclr\tab *L001E,#0x04,LEC13
\par EBC7\tab \tab ldab\tab *L0031
\par EBC9\tab \tab cmpb\tab 0xB8,x
\par EBCB\tab \tab bcc\tab LEC13
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par Havin
g a copy of the output with the addresses on each line is very useful when hunting down references, finding data labels, etc.  However, having the addresses present prevents the code from directly assembling.  Since not all editors allow you to do block d
e
letes and easily delete the addresses, the switch is provided so that you can enable/disable address generation.  This way, you can turn them off and create a file that is compatible with direct re-assembly, or turn them on and create a file that is easie
r to sort through when deciphering and commenting the resulting disassembled code.
\par 
\par The default mode if \ldblquote addresses\rdblquote  is not specified is ADDRESSES OFF.
\par 
\par If \ldblquote addresses\rdblquote  was not specified in the control file, the above code example would have appeared as follows:
\par 
\par }\pard\plain \s32\fi1\li1440\nowidctlpar\widctlpar\hyphpar0\adjustright \f2\fs12\lang1024\cgrid {LEBAC:\tab clra\tab 
\par LEBAD:\tab staa\tab L0177
\par LEBB0:\tab rts\tab 
\par LEBB1:\tab brset\tab *L003B,#0x04,LEC13
\par \tab ldx\tab #0x5B00
\par \tab brclr\tab 0x08,x,#0x04,LEC13
\par \tab brset\tab *L0090,#0x40,LEBD6
\par \tab bset\tab *L0090,#0x40
\par \tab brclr\tab *L001E,#0x04,LEC13
\par \tab ldab\tab *L0031
\par \tab cmpb\tab 0xB8,x
\par \tab bcc\tab LEC13
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par 
\par }\pard\plain \s4\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\outlinelevel3\adjustright \f1\cgrid {\page {\*\bkmkstart _Toc455229648}ASCII{\*\bkmkend _Toc455229648}
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {\b Format:}{ ascii
\par 
\par The \ldblquote ascii\rdblquote  switch causes the disassembler to look at the data areas when creating the output file and to try and group adjacent bytes if they are ASCII printable characters.  Here is an output example with \ldblquote ascii\rdblquote 
 turned on:
\par 
\par }\pard\plain \s32\fi1\li1440\nowidctlpar\widctlpar\hyphpar0\adjustright \f2\fs12\lang1024\cgrid {; 432A: 59,55,52,4E,4E,4D,4C,4B
\par ; 4332: 47,44,40,3B,52,63,66,61
\par ; 433A: 5F,5B,56,52,4F,4E,4E,4D
\par ; 4342: 4B,47,44,42,3E,52,63,66
\par ; 434A: 5F,55,52,4F,4E,4D,4C,4B
\par \tab .ascii\tab 'YURNNMLKGD@;Rcfa_[VRONNMKGDB>Rcf_URONMLK'
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par Note that the disassembler, in addition to outputting the ASCII equivalent of the bytes, will also output the byte values themselves.  This is useful in case the data really isn\rquote 
t text, as in the case above.  And, sometimes there will be real text proceeded or followed by data that just happens to be in the printable ASCII range.  D
epending on whether your file has more printable text or not will determine if you will want to run the disassembler with \ldblquote ascii\rdblquote  on or off.  If it has a lot of printable text, running with it on will save a lot of typing in your 
\ldblquote cleaned-up\rdblquote  version of the disassembly.  But if there isn\rquote 
t very much printable text, running with it off will keep you from having to convert those misinterpreted areas back to bytes.  I suggest first running with it on and see what ASCII strings it produces and then decide from there.
\par 
\par The default mode if \ldblquote ascii\rdblquote  is not specified is ASCII OFF.
\par 
\par If \ldblquote ascii\rdblquote  had not been specified on the above, the output would have appeared as follows:
\par 
\par }\pard\plain \s32\fi720\li1440\nowidctlpar\widctlpar\hyphpar0\adjustright \f2\fs12\lang1024\cgrid {.byte\tab 0x59,0x55,0x52,0x4E,0x4E,0x4D,0x4C,0x4B
\par .byte\tab 0x47,0x44,0x40,0x3B,0x52,0x63,0x66,0x61
\par .byte\tab 0x5F,0x5B,0x56,0x52,0x4F,0x4E,0x4E,0x4D
\par .byte\tab 0x4B,0x47,0x44,0x42,0x3E,0x52,0x63,0x66
\par .byte\tab 0x5F,0x55,0x52,0x4F,0x4E,0x4D,0x4C,0x4B
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par Note that regardless of whether \ldblquote ascii\rdblquote  is on or off, the output file will still reassemble back into the original binary.  This is because the \ldblquote .ascii\rdblquote  assembler directive and the \ldblquote .byte\rdblquote 
 assembler directive will produce the same value bytes in the assembly process, and the extra \ldblquote real byte values\rdblquote  are outputted as comments for the assembler (as can be seen above).
\par 
\par 
\par }\pard\plain \s4\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\outlinelevel3\adjustright \f1\cgrid {\page {\*\bkmkstart _Toc455229649}OPCODES{\*\bkmkend _Toc455229649}
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {\b Format:}{ opcodes
\par 
\par The \ldblquote opcodes\rdblquote 
 switch causes the disassembler to output the actual byte values for any instruction that it disassembles, as a comment on a line before the disassembled instruction.  Here is an example of code that has been disassembled with \ldblquote opcodes
\rdblquote  turned on.  Note that this is the same code as was used for the \ldblquote addresses\rdblquote  example above:
\par 
\par }\pard\plain \s32\fi1\li1440\nowidctlpar\widctlpar\hyphpar0\adjustright \f2\fs12\lang1024\cgrid {; EBAC: 4F
\par LEBAC:\tab clra\tab 
\par ; EBAD: B7,01,77
\par LEBAD:\tab staa\tab L0177
\par ; EBB0: 39
\par LEBB0:\tab rts\tab 
\par ; EBB1: 12,3B,04,5E
\par LEBB1:\tab brset\tab *L003B,#0x04,LEC13
\par ; EBB5: CE,5B,00
\par \tab ldx\tab #0x5B00
\par ; EBB8: 1F,08,04,57
\par \tab brclr\tab 0x08,x,#0x04,LEC13
\par ; EBBC: 12,90,40,16
\par \tab brset\tab *L0090,#0x40,LEBD6
\par ; EBC0: 14,90,40
\par \tab bset\tab *L0090,#0x40
\par ; EBC3: 13,1E,04,4C
\par \tab brclr\tab *L001E,#0x04,LEC13
\par ; EBC7: D6,31
\par \tab ldab\tab *L0031
\par ; EBC9: E1,B8
\par \tab cmpb\tab 0xB8,x
\par ; EBCB: 24,46
\par \tab bcc\tab LEC13
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par This is useful if you just want to see what the bytes are to help with your understanding of the actual HC11 machine code, or if you are tracking a section that you think might be misinterpreted as code that really should be data.  This way you
 can see it in both forms.
\par 
\par The default mode if \ldblquote opcodes\rdblquote  is not specified is OPCODES OFF.
\par 
\par In most cases, since the disassembler does a good job with separating code and data, you will probably want to leave this option turned off (which is why I didn\rquote t i
nclude it in the sample Control File) as it will only make the output file bigger.  Note that this option will not affect the reassembly of the file since all of the extra output is done as comments and will be ignored by the assembler.  This option is he
re mainly for debugging purposes when the disassembler was written, but was left as an option to be used as a learning tool for newcomers to the HC11 processor and to be used in the rare case of data being misinterpreted as code.
\par 
\par To see what the output would look like with the \ldblquote opcodes\rdblquote  switch left off, please refer to the \ldblquote addresses\rdblquote  command.
\par 
\par 
\par 
\par 
\par {\listtext\tab}}\pard\plain \s3\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\ls1\ilvl2\outlinelevel2\adjustright \b\f1\cgrid {\page {\*\bkmkstart _Toc454349566}{\*\bkmkstart _Toc455229650}Value Commands{\*\bkmkend _Toc454349566}
{\*\bkmkend _Toc455229650}
\par }\pard\plain \s4\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\outlinelevel3\adjustright \f1\cgrid {{\*\bkmkstart _Toc455229651}INPUT{\*\bkmkend _Toc455229651}
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {\b Format:}{ input <filename>
\par 
\par The \ldblquote input\rdblquote  command allows you to specify the name of the source file for the disassembler to read.  If a path is 
not specified, the file must reside in the current directory.  An extension need not be given, and if none is given, none will be appended.  The file must be in binary format, as that is the only format that is supported by this version of the disassemble
r \endash  future versions will support additional formats and will have additional arguments and options for this command.
\par 
\par The file will be loaded at the offset address optionally specified by the \ldblquote load\rdblquote  command.  If no \ldblquote load\rdblquote  command is specified, then the address 0x0000 will be used.
\par 
\par The source file must fit within the memory bounds of the HC11 processor.  That is, it cannot be bigger than 64K if loaded at 0x0000.  If loaded higher than 0x0000, the size must also reflect this.  For example, if the load address
 is specified as 0x4000, then the file can be no bigger than 48K.  Note that the file need not fill the entire memory.  If you are disassembling a 1K chunk of code that is originated at 0x0800 (for example), then the binary needs to only contain the 1K ch
unk and a load address of 0x0800 should be specified.
\par 
\par In reality, you should not include bytes that aren\rquote t either code or data for the source you are disassembling.  For example, RAM areas in the processor address space should not be included.  Typically, 
if these locations have corresponding ROM addresses, they will be filled with 0xFF or 0x00 (depending on the source), which you should omit.  You should also not include processor control registers either.  You may, however, wish to define labels for the 
control registers or even labels for RAM variables.  The disassembler will properly tag these in the disassembly and setup equates for you.  But, since these are in \ldblquote volatile\rdblquote 
 memory, the actual bytes should not be included directly in the binary image \endash  unless of course you are using the disassembler to disassemble a chunk of code that is transferred to the HC11 and run from RAM.
\par 
\par With this version of the disassembler, one and only one source file can be specified.  Any additional \ldblquote input\rdblquote  commands override previous \ldblquote input\rdblquote  commands and only the last specified file will be loaded.
\par 
\par Failure to specify the source input file will cause the disassembler to halt with an error.
\par 
\par 
\par }\pard\plain \s4\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\outlinelevel3\adjustright \f1\cgrid {\page {\*\bkmkstart _Toc455229652}LOAD{\*\bkmkend _Toc455229652}
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {\b Format:}{ load <addr>
\par 
\par The \ldblquote load\rdblquote  command lets you specify the relative load offse
t address of where the source binary file will be loaded.  Since binary files, by definition, contain no address structure, this command is needed to specify the absolute address of where in HC11 memory the file should be loaded.  A file cannot be loaded 
outside of the 64K boundary of the HC11.
\par 
\par The <addr> argument is assumed to be in hex, and should not contain a \lquote 0x\rquote  or \lquote $\rquote  or anything else before it or an \lquote h\rquote  or anything else after it.  An example, to load a file at 0x4000, would be:
\par 
\par }\pard\plain \s32\fi1\li1440\nowidctlpar\widctlpar\hyphpar0\adjustright \f2\fs12\lang1024\cgrid {load 4000
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par Future versions will allow for other bases.
\par 
\par If no \ldblquote load\rdblquote  command is specified, 0x0000 is used.
\par 
\par Note that this is a relative offset for any addresses specified in the source file\rquote s address structure.  A binary file (which is the only format supported by this vers
ion) has no address structure, therefore, the load address will become the absolute address for the file.  However, in future versions of the disassembler, when other file types are available, since this is a relative load offset, if the file type of the 
i
nput file does specify address structure, this will offset the addresses in the file.  For example, an Intel Hex file format specifies addresses for each byte or group of bytes in the file.  If the hex file specified 0x0080 as the starting address and the
 load address specified by the \ldblquote load\rdblquote  command was 0x1000, then the file will be loaded at 0x1080.  But that will be in future versions.
\par 
\par 
\par 
\par 
\par 
\par }\pard\plain \s4\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\outlinelevel3\adjustright \f1\cgrid {\page {\*\bkmkstart _Toc455229653}OUTPUT{\*\bkmkend _Toc455229653}
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {\b Format:}{ output <filename>
\par 
\par The \ldblquote output\rdblquote  command allows you to specify the name of the output text file for t
he disassembler to write.  If a path is not specified, the file will be placed in the current directory.  An extension need not be given, and if none is given, none will be appended.
\par 
\par The entire portion of HC11 memory that is \ldblquote loaded\rdblquote  (that is has a corres
ponding byte in the input source file) will be disassembled and written to the output file.  The output file can then be viewed, edited, and/or printed by any favorite text editor.  This output file can be re-assembled if need be \endash  see }{\i 
Reassembling a Disassembly}{ in this document.
\par 
\par }{\b Warning:}{ If the specified output file exists, the disassembler will overwrite it with the new disassembly without prompting you for confirmation.  Any edits or changes you made by hand to the file will be lost.  Therefore, I suggest that after you
\rquote ve finished running the disassembler, and before you start doing any manual editing or changes to the file, you rename the file.  That way, if for some reason you need to re-run the disassembler, or even accidentally re-run it, you won\rquote t 
inadvertently overwrite the previously edited file.  Similarly, be sure to not accidentally specify the name of an existing file that you want to keep.  You have been warned.
\par 
\par I typically use an extension of \ldblquote .dis\rdblquote  for the disassembler output file.  I then rename it to have a \ldblquote .asm\rdblquote  extension before editing it.  The \ldblquote .asm\rdblquote 
 file then will become my cleaned up, commented version of the disassembled code.  That way, if I need to re-run the disassembler to, perhaps, disassemble some missed portion of the code f
rom the previous attempt (such as an indirect branch table), I can do so and then just cut and paste as needed from the new \ldblquote .dis\rdblquote  file into the \ldblquote .asm\rdblquote 
 file without losing my edits.  You may,  however, have a different system that you prefer.  Future versions will allow for saving comments and edits without losing them when re-running the disassembler.
\par 
\par Failure to specify the target output file will cause the disassembler to halt with an error.
\par 
\par 
\par {\listtext\tab}}\pard\plain \s3\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\ls1\ilvl2\outlinelevel2\adjustright \b\f1\cgrid {\page {\*\bkmkstart _Toc454349567}{\*\bkmkstart _Toc455229654}List Entry Commands{\*\bkmkend _Toc454349567}
{\*\bkmkend _Toc455229654}
\par }\pard\plain \s4\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\outlinelevel3\adjustright \f1\cgrid {{\*\bkmkstart _Toc455229655}ENTRY{\*\bkmkend _Toc455229655}
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {\b Format:}{ entry <addr>
\par 
\par The code-seeking portion of the disassembler works by creating a list of entry points and then scanning the code starting with each entry point.  If a branch or jump is encountered, the address for it, if it is a resolvable address that isn\rquote 
t already in the entry point list, is added to the entry point list.  When a terminating instruction has been reached \endash  such as an unconditional branch or return \endash 
 then scanning with that code portion ends and the next entry in the entry point list is used.  This continues until all entry points are exhausted.
\par 
\par The \ldblquote entry\rdblquote  command allows you to specify hard entry points within the source.  Typically, most of the entry points in the source can be specified with indirects (see the \ldblquote indirect\rdblquote  command).  But occasionally you
\rquote ll run into a portion of code that for some reason has no indirect vector and requires a hard entry point.  This is where the \ldblquote entry\rdblquote 
 command comes into play.  However, I suggest that if you can represent the entry with an indirect that you do so, as the number of hard entries that can be specified in the control file is fairly limited \endash  see the section }{\i 
Limitations in This Version}{ in this document.  Since most entries can be done with indirects (as most are jump tables) then in most cases this limitation will not keep you from disassembling something that you need to \endash  I\rquote 
ve disassembled some very complex things with hundreds of undetermined jumps and indirect entries and have never had problems with running out of entry points (however, I have run out of labels \endash  see the \ldblquote label\rdblquote  command \endash 
 but not entry points).  If you do run out of hard entry addresses, the disassembler will warn you.  Future versions won\rquote t be bound by this limitation.
\par 
\par With respect to the limitations described above, the sample Control File is somewhat of a bad example.  Most of the \ldblquote entry\rdblquote  commands in that file should have been entered as \ldblquote indirect\rdblquote 
 since they were from jump tables.  However, in the example I was trying to illustrate the functionality differences between \ldblquote entry\rdblquote  and \ldblquote indirect\rdblquote .  And ev
en then with a 48K source-file (not much less than the 64K size-limit of the processor), I was able to enter them all without running into the limitation.
\par 
\par The <addr> argument is assumed to be in hex, and should not contain a \lquote 0x\rquote  or \lquote $\rquote  or anything else before it or an \lquote h\rquote  or anything else after it.  An example, to specify a code entry point at 0x7C12, would be:

\par 
\par }\pard\plain \s32\fi1\li1440\nowidctlpar\widctlpar\hyphpar0\adjustright \f2\fs12\lang1024\cgrid {entry 7c12
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par Future versions will allow for other bases.
\par 
\par Between the hard \ldblquote entry\rdblquote  commands and the \ldblquote indirect\rdblquote  commands in the control file, at least one entry point into the source must be ascertained in order for the disassembler to produce any code output.  If no 
\ldblquote entry\rdblquote  commands exist and no \ldblquote indirect\rdblquote  commands exist, then the file\rquote s load address will be assumed to be a code entry point and auto
matically added to the list.  However, if any entry point is specified (either from an \ldblquote entry\rdblquote  or from an \ldblquote indirect\rdblquote ) then the source file load address is NOT added to the list of entry points.
\par 
\par }\pard\plain \s4\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\outlinelevel3\adjustright \f1\cgrid {\page {\*\bkmkstart _Toc455229656}INDIRECT{\*\bkmkend _Toc455229656}
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {\b Format:}{ indirect <addr> <label>
\par 
\par Most all jump tables and vector tables on any processor are done by using indirect addressing.  An indirect address is a memory location that contains a memory address to other location.  These \ldblquote indirect addresses\rdblquote 
 can be data or code, but in most cases are code pointers.  
A prime example of an indirect address on the HC11 is 0xFFFE, which is the reset vector for the processor.  Immediately after power-on, the HC11 reads the 2 bytes starting at 0xFFFE and uses those 2-bytes as the address for starting the execution of the H
C11 startup code.
\par 
\par The <addr> argument is assumed to be in hex, and should not contain a \lquote 0x\rquote  or \lquote $\rquote  or anything else before it or an \lquote h\rquote 
 or anything else after it.  The <label> argument specifies the text that you want to use for the label.  The label must follow typical variable naming conventions \endash  that is, it should only contain alphanumeric characters and underscore (\lquote _
\rquote ) and must start with a non-numeric first character.  An example, to specify the reset vector located at 0xFFFE, would be
\par 
\par }\pard\plain \s32\fi1\li1440\nowidctlpar\widctlpar\hyphpar0\adjustright \f2\fs12\lang1024\cgrid {indirect fffe reset
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par Future versions will allow for other bases.
\par 
\par This example is illustrated as follows:
\par 
\par }\pard\plain \s32\fi1\li1440\nowidctlpar\widctlpar\hyphpar0\adjustright \f2\fs12\lang1024\cgrid {RESET:\tab .....
\par }\pard \s32\fi720\li1440\nowidctlpar\widctlpar\hyphpar0\adjustright {....
\par ... reset program code ...
\par ...
\par }\pard \s32\fi1\li1440\nowidctlpar\widctlpar\hyphpar0\adjustright {
\par RSTVEC:\tab .word\tab RESET\tab \tab <-- this is at FFFE and specs the vector data
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par This allows us to specify the address for t
he indirect without having to specifically look it up and resolve it by hand.  The disassembler will look at address 0xFFFE and add the 2-byte value it finds there to the entry point table.  And, it will also add the label specified, which is \ldblquote 
RESET\rdblquote  in th
e above example, to the label table with the indirected address.  Note that the label is assigned to the resolved address and not to the vector itself!  If you want to assign a label to the indirect vector itself, you should also use the \ldblquote label
\rdblquote  command to add the label for the vector \endash  this is illustrated in the example Control File.  That is where the \ldblquote RSTVEC\rdblquote  comes from in the above illustration.
\par 
\par On this version, labels are limited to six (6) characters and there is also a limit to the number of indirect vectors that you can specify \endash  see the section }{\i Limitations in This Version}{
 in this document.  However, the number of allowable indirects is sufficiently high enough that most all disassembly applications will have more than enough.  This character limit is why the label for the vector appears as \ldblquote RSTVEC\rdblquote 
 in the above example rather than as the specified \ldblquote RSTVECT\rdblquote .  Future versions of the disassembler will get rid of the character limit and the number of entries limit.
\par 
\par Additionally, this version assumes t
hat all indirects are Code-Indirects, or indirect vectors to program code, but it is also possible for source programs to have Data-Indirects, or indirect vectors to data, as well.  Future versions will allow you to specify both Data-Indirects and Code-In
directs.
\par 
\par Code-Indirect entries are another way of specifying entry points into the source.  Between the hard \ldblquote entry\rdblquote  commands and the \ldblquote indirect\rdblquote 
 commands in the control file, at least one entry point into the source must be ascertained in order for the disassembler to produce any code output.  If no \ldblquote entry\rdblquote  commands exist and no \ldblquote indirect\rdblquote 
 commands exist, then the file\rquote s load address will be assumed to be a code entry point and automatically added to the list.  However, if any entry point is specified (either from an \ldblquote entry\rdblquote  or from an \ldblquote indirect
\rdblquote ) then the source file load address is NOT added to the list of entry points.
\par }\pard\plain \s4\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\outlinelevel3\adjustright \f1\cgrid {\page {\*\bkmkstart _Toc455229657}LABEL{\*\bkmkend _Toc455229657}
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {\b Format:}{ label <addr> <label>
\par 
\par The \ldblquote label\rdblquote  command lets you assign a meaningful name to an address.  If a label is needed for a part
icular memory address during the disassembly and you have not assigned a name to that address, the disassembler will create one in the form of \ldblquote Lxxxx\rdblquote  where \ldblquote xxxx\rdblquote  is the hexadecimal address of the memory location.

\par 
\par The <addr> argument is assumed to be in hex, and should not contain a \lquote 0x\rquote  or \lquote $\rquote  or anything else before it or an \lquote h\rquote 
 or anything else after it.  The <label> argument specifies the text that you want to use for the label.  The label must follow typical variable naming conventions \endash  that is, it should only contain alphanumeric characters and underscore (\lquote _
\rquote ) and must start with a non-numeric first character.  An example, to specify a label for the reset vector located at 0xFFFE, would be:
\par 
\par }\pard\plain \s32\fi1\li1440\nowidctlpar\widctlpar\hyphpar0\adjustright \f2\fs12\lang1024\cgrid {label fffe rstvect
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par Future versions will allow for other bases.
\par 
\par This allows us, when looking at a disassembly output, to easily know what is what from the meaningful names.  Instead of seeing either nothing or an Lxxxx name, we have a name that when we see it in the code, we will recognize it as to what it is r
eferring to.
\par 
\par On this version, labels are limited to six (6) characters and there is also a limit to the number of labels that you can specify \endash  see the section }{\i Limitations in This Version}{
 in this document.  However, the number of allowable labels is sufficiently high enough that most disassembly applications will have more than enough.  However, I\rquote ve run into a few cases where there just wasn\rquote 
t enough label space. Future versions of the disassembler will get rid of the character limit and the number of entries limit.  The character limit will cause the label in the above example to appear as \ldblquote RSTVEC\rdblquote 
 rather than as the specified \ldblquote RSTVECT\rdblquote .  But, you can go ahead and specify the full name in preparation for the newer versions, as long as the first 6 characters are unique between labels.
\par 
\par If you attempt to add a label that is already in the label table, the addition will be ignored \endash  keeping its original definition.
\par 
\par 
\par {\listtext\tab}}\pard\plain \s1\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\ls1\outlinelevel0\adjustright \b\f1\fs28\cgrid {\page {\*\bkmkstart _Toc454349568}{\*\bkmkstart _Toc455229658}Error and Warning Messages{\*\bkmkend _Toc454349568}
{\*\bkmkend _Toc455229658}
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {The following Error and Warning messages can be reported during the execution of this version of the disassembler:
\par 
\par {\*\bkmkstart _Toc454349569}{\*\bkmkstart _Toc455229659}{\listtext\tab}}\pard\plain \s2\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\ls1\ilvl1\outlinelevel1\adjustright \b\i\f1\cgrid {Error Messages{\*\bkmkend _Toc454349569}{\*\bkmkend _Toc455229659}

\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {*** Error: Opening Opcodes File: <filename>
\par }\pard\plain \s37\li720\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {This indicates that the disassembler had trouble either locating or opening the Opcodes File \endash  which is called \ldblquote M6811DIS.OP\rdblquote  for this disassembler
.  Check to make sure that it is in the current directory.  While the disassembler can be run anywhere from the system path, the Opcodes File must reside in the current directory at run-time.
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par *** Error: Opening Control File: <filename>
\par }\pard\plain \s37\li720\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {This indicates that
 the disassembler had trouble either locating or opening the specified Control File.  Check to make sure that the file exists and is accessible to the disassembler and that you typed the name and/or path correctly on the command line.
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par *** Error: Input and Output files MUST be specified in Control File.
\par }\pard\plain \s37\li720\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {You must specify both the Input File (or Source File) and Output File somewhere within the Control File.
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par *** Error: Opening Source File: <filename>
\par }\pard\plain \s37\li720\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {This indicates that the disassembler had trouble either lo
cating or opening the Source File specified in the Control File.  Check to make sure the file exists and is accessible to the disassembler and that you typed the name and/or path correctly in the Control File, and that you have read-access rights to the f
ile.
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par *** Error: Opening Output File: <filename>
\par }\pard\plain \s37\li720\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
This indicates that the disassembler had trouble opening the Output File specified in the Control File.  Check to make sure that you typed the name and/or path correctly in the Control File and that the targe
t directory exists and has sufficient free space and that you have write-access rights to that directory.
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par *** Error: Writing Output File: <filename>
\par }\pard\plain \s37\li720\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {This indicates that the disassembler had trouble while writing a line to the Output File.  Check to make sure you haven\rquote 
t run out of disk space and that the disk is still properly mounted and accessible or if it is via network that the network isn\rquote t down.
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par Not Enough Memory
\par }\pard\plain \s37\li720\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {During the initialization process the DOS memory limit was exceeded and the program isn\rquote 
t able to run.  Check to make sure that you are loading DOS in high memory and that no unnecessary TSR (Terminate-and-Stay-Resident) programs such as mouse drivers, drive mappers, etc, are loaded.
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par {\listtext\tab}}\pard\plain \s2\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\ls1\ilvl1\outlinelevel1\adjustright \b\i\f1\cgrid {\page {\*\bkmkstart _Toc454349570}{\*\bkmkstart _Toc455229660}Warning Messages{\*\bkmkend _Toc454349570}
{\*\bkmkend _Toc455229660}
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {*** Warning: Branch Buffer Full
\par }\pard\plain \s37\li720\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {This in
dicates that the internal table that stores reference addresses to all branches is full.  Branch addresses are added during the code-seeking pass of the disassembler as jumps and branches are encountered.  When the limit has been reached, the disassembler
 will continue to function, however, sections of code that should be disassembled as code may come out as data because the disassembler was unable to add the necessary entries to the branch table.  See the section }{\i Limitations in This Version}{
 in this document.
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par *** Warning: Branch Ref: <addr> is outside of Loaded Source File
\par }\pard\plain \s37\li720\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
This indicates that the branch that was added to the branch table, during the code-seeking portion of the disassembler, referenced an address (indicated by <addr> above) that was outside 
of the area loaded from the source file.  This can occur normally when there are other memory sources, such as dynamic ram routines, etc, that may not have been in the ROM image that was read and feed into the disassembler.  Therefore, this warning could 
b
e of little consequence.  However, it can also indicate that either the source file was not of the right size or that the load offset specified in the Control File was incorrect and caused the Source File to be loaded at incorrect memory locations.  So ch
eck the source and make sure the warning makes sense.
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par *** Warning: Duplicate Label Definition
\par }\pard\plain \s37\li720\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {This warning is displayed anytime a label that has already been defined in the Control File is redefined again within the Control File, based on address.  With th
is version of the disassembler, only one label can be defined per address and any attempt to label an address with more than one label or name produces this warning and the extra label is ignored.  You can, however, use the same name for more than one add
ress.  Why you would want to, I don\rquote t know, as it will probably cause any assembler that you later try to reassemble with to croak, not to mention confusing yourself.  The disassembler doesn\rquote t check for ambiguous names, cause it really doesn
\rquote t care what you call each address.
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par *** Warning: Entry Point: <addr> is outside of Loaded Source File
\par }\pard\plain \s37\li720\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {This warning is basically synonymous with Branch Ref outside of Loaded Source File.  The difference is that this applies to the entry points specified in the Control Fil
e, where as branch addresses are from branches found by the disassembler.  However, the same guidelines apply to this warning as does the Branch Ref warning \endash  so see \ldblquote *** Warning: Branch Ref <addr> is outside of Loaded Source File
\rdblquote  for more information.  Also, check to make sure that you have typed the entry point correctly in the Control File.
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par *** Warning: Indirect Buffer Full
\par }\pard\plain \s37\li720\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {This warning indicates that the internal list of indirect code vectors is full.  Since this version of the disassembler doesn\rquote t kn
ow how to add any indirects on its own, other than the ones you specify in the Control File, this means that you\rquote ve entered more indirects in the Control File than memory allows for.  See the section }{\i Limitations in This Version}{
 in this document.  Once the table is full, the extra entries are ignored, meaning that some of the code area may be incorrectly outputted as data.
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par *** Warning: Label Buffer Full
\par }\pard\plain \s37\li720\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {This warning indicates that the internal list that associates a string label with an address is full.  This can either be a result from \ldblquote label\rdblquote 
 commands in the Control File, or from labels generated during the code-seeking pass of disassembly and/or during indirect resolution.  See the section }{\i Limitations in This Version}{ in this document.  Once the table is f
ull, any code areas needing a label will still be disassembled with a \ldblquote Lxxxx\rdblquote  label, however, the location itself won\rquote 
t have the label labeling the line, and thus probably will not re-assemble without giving an unresolved reference or unknown label error.  The output is still very useful, especially if you use the \ldblquote addresses\rdblquote 
 command in the Control File to output the addresses, and if there aren\rquote t too many missing labels, it may not be too big of a chore to add them by hand later.
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par *** Warning: Memory wrap around encountered, Check Load Offset/File Length
\par }\pard\plain \s37\li720\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
This indicates that during the loading of the Source File, the file went past the 64K limit of the processor space.  The combined length (or size) of the Source File and the specified starting or \ldblquote load\rdblquote  off
set must not exceed 64K or 0xFFFF + 1.  For example from the sample Control File, we have a Source File that is 48K (or 0xC000 bytes) and a load offset of 0x4000 (or 16K).  Together that is 64K or 0x10000, which is 0xFFFF + 1.  If we were to specify a sta
rting address higher than 0x4000, the file would \ldblquote wrap around\rdblquote 
 at the end of the 64K boundary of the processor back to an address of 0x0000.  In this particular version, the wrap will proceed back around to address 0x0000 and the file will continue loading 
from there.  However, future versions may, and probably will, terminate the file loading at the 64K boundary.  So it is not a good practice to rely on this wrapping effect in this version.  If your file is too large to fit inside of 64K, such as that from
 a 128K Flash ROM or EPROM, then look for how the OEM of the equipment is bank selecting the data.  I guarantee you that no more than 64K is actually visible to the HC11 at any given time.  This means you\rquote 
ll have to break the source into multiple smaller parts and figure out how they relate.  And yes, I\rquote 
ve seen 128K and even larger files for the HC11 that were bank selected.  This version provides no support for bank selecting, as the HC11 has no internal means (no machine instructions, etc) for doing bank selecting of external memory \endash 
 meaning that every implementation of it will be unique.  Future versions may allow for emulation of bank switching methods, but you\rquote ll still have to reverse engineer the system enough to figure out what those methods are and w
rite a function or interface for the disassembler to emulate it.  And, it may not be possible to emulate all methods.
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par *** Warning: Too many ENTRY Commands
\par }\pard\plain \s37\li720\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {The number of  \ldblquote entry\rdblquote  commands that can be specified in the Control File is limited because of memo
ry constraints.  However, usually very few direct entry points have to be specified because most will be done with indirect vectors.  If you run out of entry points, and really need more, you can always \ldblquote beat the system\rdblquote 
 by specifying them in an unused portion of the source binary and using an \ldblquote indirect\rdblquote 
 command in the Control File.  There SHOULD be an unused portion in the source, as there has to be some sort of RAM memory used in the MPU.  The desired effect will result and you will have \ldblquote beaten\rdblquote  the entry point limit.  However, I
\rquote ve never run into any real world application that needed more entry points than could be specified, since most things already are indirects \endash  like interrupt vectors, jump tables, etc. See the section }{\i Limitations in This Version}{ i
n this document.
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par *** Warning: Unrecognized command in Control File
\par }\pard\plain \s37\li720\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {This means that one or more commands in the Control File were not recognized.  Check to make sure that all lines are either blank, start with a semicolon (\lquote ;\rquote 
) for a comment line, or begin with one of the valid commands described in this document \endash 
 perhaps it is just a typo.  The commands can be uppercase or lowercase or mixed, as everything is converted internally to uppercase.  All values must be in hexadecimal with }{\b\ul no}{ \lquote 0x\rquote  or \lquote $\rquote , etc, before it, and }{
\b\ul no}{ \lquote h\rquote , etc, after it \endash  everything is assumed to be in hexadecimal and may be falsely converted to zero (0) if you do otherwise.  Future versions will allow for different bases, but not this one.
\par {\listtext\tab}}\pard\plain \s1\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\ls1\outlinelevel0\adjustright \b\f1\fs28\cgrid {\page {\*\bkmkstart _Toc454349571}{\*\bkmkstart _Toc455229661}Disassembly Pitfalls{\*\bkmkend _Toc454349571}
{\*\bkmkend _Toc455229661}
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {There are many pitfalls often encountered when reverse engineering and/or hacking a particular system.  Many aren\rquote t specific to any system, and since this document is }{\b\ul not
}{ an explanation of how to do reverse engineering, we will only talk about things specific with the HC11 and more specifically about this disassembler.
\par 
\par {\*\bkmkstart _Toc454349572}{\*\bkmkstart _Toc455229662}{\listtext\tab}}\pard\plain \s2\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\ls1\ilvl1\outlinelevel1\adjustright \b\i\f1\cgrid {Code Inline Data{\*\bkmkend _Toc454349572}{\*\bkmkend _Toc455229662}

\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {The first big quirk or pitfall that comes to mind is data bytes passed on \ldblquote jsr\rdblquote  or \ldblquote bsr\rdblquote 
 instructions inline with the code.  Some HC11 compilers, such as Cosmic C, make standard practice of this.  For example, suppose you have the following code:
\par 
\par }\pard\plain \s32\fi1\li1440\nowidctlpar\widctlpar\hyphpar0\adjustright \f2\fs12\lang1024\cgrid {A_FUNC:\tab .set\tab OFST=12
\par }\pard \s32\fi720\li1440\nowidctlpar\widctlpar\hyphpar0\adjustright {jsr\tab c_ents
\par .byte\tab 12
\par ldd\tab #3
\par jsr\tab getvalue
\par clr\tab 2,x
\par clr\tab 3,x
\par std\tab OFST-2,x
\par ldd\tab 2,x
\par std\tab OFST-4,x
\par clra
\par clrb
\par std\tab 2,x
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par This is a snippet of code from a real compiled program.  Notice the \ldblquote .byte 12\rdblquote  after the \ldblquote jsr\rdblquote .  That is an inline data argument passed to the function \ldblquote c_ents\rdblquote 
.  It is cleaner and has less overhead than pushing and popping the argument on the stack, but it causes problems with any disassembler.  The problem is that the disassembler has no way of knowing that the \ldblquote 12\rdblquote  (or 0x0C) after the 
\ldblquote jsr\rdblquote  is in fact a data byte.  It will be assuming that the bytes immediately following the \ldblquote jsr\rdblquote  will be the next instruction.  In this particular case, since 0x0C is equivalent to the \ldblquote clc\rdblquote  ins
truction \endash  which happens to be a one byte immediate instruction, this will be interpreted by the disassembler as (OFST=12):
\par 
\par }\pard\plain \s32\fi1\li1440\nowidctlpar\widctlpar\hyphpar0\adjustright \f2\fs12\lang1024\cgrid {A_FUNC:\tab jsr\tab C_ENTS
\par }\pard \s32\fi720\li1440\nowidctlpar\widctlpar\hyphpar0\adjustright {clc
\par ldd\tab #3
\par jsr\tab GETVAL
\par clr\tab 2,x
\par clr\tab 3,x
\par std\tab 10,x
\par ldd\tab 2,x
\par std\tab 8,x
\par clra
\par clrb
\par std\tab 2,x
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par In this case, it is only a bit confusing as you may think the \ldblquote clc\rdblquote  (or clear-carry instruction) is a legitimate command and that may cause you to incorrectly interpret the code following the \ldblquote jsr\rdblquote 
.  In other cases, it can be more extreme.  Suppose that instead of a simple one-byte immediate instruction, the byte happened to be the first byte of a two, three, or more, byte instruction?  Then it could be that the \ldblquote ldd #3\rdblquote 
 that follows and possibly even more instructions would get mangled as well, into erroneous instructions.  Eventually, either the number of bytes will happen to fall back on track or you\rquote 
ll encounter an illegal byte that creates an unknown instruction for the processor \endash  either will get the disassembly back on track.  But, this can cause problems with the code seeker, beca
use suppose that one of the erroneous instructions happened to be a branch or jump of some sort, or worse yet is a return instruction.  Or what if one of the mangled instructions was supposed to be a jump or branch.  In the first case, you\rquote 
d be adding extra incorrect branches (and may possibly pre-maturely end the current code section) and in the last case you\rquote 
ll fail to add a branch that should be added, which unless it is called elsewhere will result in code sections that will be outputted as data.
\par 
\par The fix for this problem isn\rquote t as easy as it appears.  If each function had inline data of a fixed length, it would be fairly easy \endash  you simply implement another list in the disassembler and specify that function \ldblquote xyz\rdblquote 
 always has, for example, 2 bytes of data following any jump or branch to that function.  The disassembler, when it encounters a call to function \ldblquote xyz\rdblquote 
, would simply treat the 2 bytes following the call as data.  But, the problem is that first you have to realize that that particular function uses 
data bytes in that fashion and tell the disassembler and that it is always 2 data bytes.  What do we do if the number of bytes is variable?  How can the disassembler know?  An example of variable length would be a null-terminated string passed as inline d
ata after a call.  The length is determined by where the null is placed.  Or what if, instead, it is a length/string argument where the first byte after the call is the length of the string or data that follows?
\par 
\par As you can see, there isn\rquote t an immediate, simple, fix-all solution.  So, this version of the disassembler doesn\rquote t deal with the problem at all. (Sorry).  In future versions, I\rquote m contemplating a \ldblquote fixed length\rdblquote 
 solution and possibly a solution of object types whereby you can specify certain typings and/or methods that the disassembler can use to figure out lengths on variable inline data.
\par 
\par {\*\bkmkstart _Toc454349573}{\*\bkmkstart _Toc455229663}{\listtext\tab}}\pard\plain \s2\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\ls1\ilvl1\outlinelevel1\adjustright \b\i\f1\cgrid {Undetermined Branch Address{\*\bkmkend _Toc454349573}
{\*\bkmkend _Toc455229663}
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {Another very common pitfall is when the disassembler encounters a branch that it simply cannot figure out \endash  such as a branch that is based off of register value.  An example:

\par 
\par }\pard\plain \s32\fi720\li1440\nowidctlpar\widctlpar\hyphpar0\adjustright \f2\fs12\lang1024\cgrid {jsr\tab 0,x
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par Since the disassembler has no way of knowing what value is contained in \ldblquote x\rdblquote  it will not know what address the \ldblquote jsr\rdblquote  branches to.  When this occurs, the disassembler will comment the output file with \ldblquote 
Undetermined Branch Address\rdblquote .  Fortunately, many of these are simple jump tables.  Look at the code proceeding the \ldblquote jsr\rdblquote  for any loading of the \ldblquote x\rdblquote  register.  Often you\rquote 
ll see the address of a branch table loaded and then an offset in the table added to it.  That will be followed by something like \ldblquote ldx 0,x\rdblquote  to load the actual vector from the table and then you\rquote ll have the \ldblquote jsr 0,x
\rdblquote .  All you have to do is add \ldblquote indirect\rdblquote  commands to the Control File for each entry in the branch table and then re-run the disassembler
.  This will allow the disassembler to track and disassemble all of the code that is there.  I usually use the convention of naming the first indirect in the first jump table as \ldblquote JT1R1\rdblquote 
 (for jump table 1 routine 1), the next routine as \ldblquote JT1R2\rdblquote , and so on.  When I come to the next table, I use \ldblquote JT2R1\rdblquote , etc.  Later on, once I actually figure out what \ldblquote JT1R1\rdblquote , etc, really do, I
\rquote ll give them more meaningful names.  You may have a better method \endash  so use whatever works well for you.
\par 
\par Unfortunately, there are still occasional calls, jumps, or branches that are not determinable by the disassembler and that even when you look at them, you can\rquote 
t figure out what they are as they may have no obvious jump table.  The only solution for this is to figure out what the rest of the code does and work to figure out exactly what is called by the illusive function.  I\rquote 
ve always found that by working on other parts, parts that were more obvious, then eventually, before all was said and done, that I knew exactly what this call was for and why it was so illusive.  But in any case, it does make life more difficult.
\par 
\par {\*\bkmkstart _Toc454349574}{\*\bkmkstart _Toc455229664}{\listtext\tab}}\pard\plain \s2\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\ls1\ilvl1\outlinelevel1\adjustright \b\i\f1\cgrid {Addresses as Immediate Values{\*\bkmkend _Toc454349574}
{\*\bkmkend _Toc455229664}
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {When a disassembler encounters an immediate value for an instruction, it has no way of knowing whether it should be treated strictly as a val
ue or if it is really an address, or worse yet, an offset to some address.  For example, suppose you encounter a system that, for the sake of argument, still has the HC11 registers located at 0x1000 in the HC11 memory space.  And, you come across a routin
e that reads/writes from the SCI data register at 0x102F.  You may encounter simple reads and writes directly to this address, such as:
\par 
\par }\pard\plain \s32\fi720\li1440\nowidctlpar\widctlpar\hyphpar0\adjustright \f2\fs12\lang1024\cgrid {lda\tab $102F
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par (which is an extended addressing mode) which would be interpreted by the disassembler as:
\par 
\par }\pard\plain \s32\fi1\li1440\nowidctlpar\widctlpar\hyphpar0\adjustright \f2\fs12\lang1024\cgrid {\tab lda\tab L102F
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par You can later equate L102F with SCDR and your done.
\par 
\par But, you may encounter something like:
\par 
\par }\pard\plain \s32\fi1\li1440\nowidctlpar\widctlpar\hyphpar0\adjustright \f2\fs12\lang1024\cgrid {ldy #$102F
\par lda 0,y
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par In this case, since the 0x102F is an immediate value, the disassembler has no way of knowing that it really corresponds to an address.  For these, you\rquote ll have no choice but to manually change the $102F to SCDR (don\rquote 
t forget to add the label for 0x102F as SCDR in the Control File):
\par 
\par }\pard\plain \s32\fi1\li1440\nowidctlpar\widctlpar\hyphpar0\adjustright \f2\fs12\lang1024\cgrid {ldy #SCDR
\par lda 0,y
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par Worse yet, you can also encounter the following:
\par 
\par }\pard\plain \s32\fi1\li1440\nowidctlpar\widctlpar\hyphpar0\adjustright \f2\fs12\lang1024\cgrid {ldy #$1000
\par lda $2F,y
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par Here, the immediate value 0x1000 is the base address of the registers and 0x2F is the offset.  This is why on the Ports files that I included, you\rquote 
ll see both direct addresses and register base relative addresses.  That way, you can manually convert this to:
\par 
\par }\pard\plain \s32\fi1\li1440\nowidctlpar\widctlpar\hyphpar0\adjustright \f2\fs12\lang1024\cgrid {ldy #REGBASE
\par lda PSCDR,y
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par Where \ldblquote regbase\rdblquote  is defined by you as the base for the HC11 registers and should also be the address that you originate the corresponding \ldblquote ports\rdblquote  file when later re-assembling.  In the example \ldblquote ports
\rdblquote  files, you\rquote ll notice that I\rquote ve defined, in this particula
r case, SCDR as being the direct full address of the SCDR register or 0x102F (or wherever you originate the ports file) and PSCDR as being a pointer to the register relative address of SCDR or 0x2F.  This allows us to use both names in the code to cover w
hatever form they are in.
\par 
\par As I\rquote ve said, there is no way for the disassembler to know when it encounters an immediate value if that immediate value is really an address or if it is only data, and register-offset addresses (such as the lda $2F,y) are even wo
rse yet.  Thus the only recourse is to manually edit it in the output file \endash  Usually, search-and-replace works well for this.
\par 
\par {\*\bkmkstart _Toc454349575}{\*\bkmkstart _Toc455229665}{\listtext\tab}}\pard\plain \s2\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\ls1\ilvl1\outlinelevel1\adjustright \b\i\f1\cgrid {Code Paging{\*\bkmkend _Toc454349575}{\*\bkmkend _Toc455229665}

\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {The HC11 can only directly access 64K bytes of memory.  This includes all RAM, ROM, Registers, Memory-Mapped Devices,
 etc.  Unfortunately, many programs, especially those written by today\rquote 
s inefficient compilers, exceed this limit.  This causes the designer to have to implement work-arounds.  The most common is to implement a method of paging in multiple banks of memory.
  Unfortunately, not only does the HC11 not support more than 64K of direct access, but also it has no built-in means for performing paging either.  Thus, the designer is left to implement his or her own unique solution to the paging problem.
\par 
\par The biggest problem for the designer isn\rquote t so much that there must be some external paging means, but that there can be no direct access of data from one page to another across page boundaries \endash 
 since there are no code-segment and data-segment registers as can be found in processors like the 8088.  For the reverse-engineer and/or hacker, this further complicates things because there is no \ldblquote standard method\rdblquote 
 for implementing the paging technique.
\par 
\par One common way to implement a simple 2-bank method is to use a 128K byte ROM and connect the upper address line to an output port pin of the HC11.  Part of the ROM\rquote 
s code is duplicated from one half of the ROM to the other so that it is accessible by the HC11 in both pages \endash  i.e. the common page.  The common page is the page tha
t must do the actual page swaps.  The other half of the ROM is unique to that page and allows an extra extension of the ROM in the range of 32K to 64K depending on the sections that must be common and/or duplicated across pages.
\par 
\par Another common technique is to use PAL or PLD logic to serve as a page register.  This allows for more intricate design and layout of the pages and would allow for more flexibility as to where the pages get \ldblquote banked-in\rdblquote 
 and when.  But, this really makes life difficult for the hacker or reverse-engineer.
\par 
\par This list could go on and on \endash  unfortunately \endash  as there is no single technique, not even a unique dozen, that can describe all the different methods people have used for paging.  Therefore, when reverse-engineering large projects, it
 will be necessary to determine the paging technique (if any) by hand.  It also means, since the disassembler can only deal with the HC11\rquote s direct 64K space, that you must divide the source up into multiple files \endash 
 each corresponding to unique pages \endash  and 
run them separately through the disassembler.  And, not only does the disassembler have problems with multiple pages, but HC11 assemblers have problems as well.  Most assemblers will require that you uniquely assemble each section and then link them corre
ctly into the correct positions in the final output file.
\par 
\par {\*\bkmkstart _Toc454349576}{\*\bkmkstart _Toc455229666}{\listtext\tab}}\pard\plain \s2\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\ls1\ilvl1\outlinelevel1\adjustright \b\i\f1\cgrid {Laziness{\*\bkmkend _Toc454349576}{\*\bkmkend _Toc455229666}
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {\ldblquote But I don\rquote t want to have to go through the program and tag all of the indirect vectors and entry point locations; I just want it to dump out the code.\rdblquote 
  Well, there isn\rquote t much that can be done about being lazy, but there can be a \ldblquote spit\rdblquote  mode that disables the code-seeking portion \endash  or more correctly, labels everything as code \endash  and dumps or \ldblquote spits
\rdblquote  the disassembly out.  This can be useful in systems that have a large number of indirects and you want to do a quick hack on the file and don\rquote t really care about truly reverse engineering the code.
\par 
\par When this program was developed, the initial goal was reverse engineering, not hacking.  Therefore, this version has no \ldblquote spit\rdblquote  mode.  However, because
 of many requests from hackers that want quick results, future versions will incorporate a \ldblquote spit\rdblquote 
 command in the Control File that will disable the code-seeker and simply output a disassembly of everything in much the same form of an ordinary \ldblquote dumb\rdblquote  disassembler.
\par 
\par {\*\bkmkstart _Toc454349577}{\*\bkmkstart _Toc455229667}{\listtext\tab}}\pard\plain \s2\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\ls1\ilvl1\outlinelevel1\adjustright \b\i\f1\cgrid {Others{\*\bkmkend _Toc454349577}{\*\bkmkend _Toc455229667}
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {Well, this is about all I can think of including at this present time.  I\rquote 
m sure there are many more that warrant being added to this document.  If you know of any, let me know and it will possibly be included in future editions.  See the }{\i Support}{ section in this document for contact information.
\par 
\par 
\par {\listtext\tab}}\pard\plain \s1\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\ls1\outlinelevel0\adjustright \b\f1\fs28\cgrid {\page {\*\bkmkstart _Toc454349578}{\*\bkmkstart _Toc455229668}MC68HC11 Overview{\*\bkmkend _Toc454349578}
{\*\bkmkend _Toc455229668}
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {As previously stated, the purpose of this document isn\rquote t to teach you about the functionality of the HC11 \endash  that\rquote s what Motorola\rquote 
s documentation is for.  However, for completeness, I thought it wise to include a list of opcodes and corresponding mnemonics that the disassembler processes as well as how the disassembler\rquote s code-seeker behaves with each \endash 
 and that is what the following table is all about.  For everything else, check out Motorola\rquote s website (}{\cs19\fs24\ul\cf2 www.mot-sps.com}{).
\par 
\par }\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw15\brdrcf1 \trbrdrl\brdrs\brdrw15\brdrcf1 \trbrdrb\brdrs\brdrw15\brdrcf1 \trbrdrr\brdrs\brdrw15\brdrcf1 \clvertalt\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb
\brdrs\brdrw30\brdrcf1 \cltxlrtb \cellx1170\clvertalt\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw30\brdrcf1 \cltxlrtb \cellx2430\clvertalt\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw30\brdrcf1 \cltxlrtb \cellx4050\clvertalt\clbrdrt
\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw30\brdrcf1 \cltxlrtb \cellx7200\clvertalt\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw30\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cltxlrtb \cellx8640\pard\plain 
\s5\qc\keepn\nowidctlpar\widctlpar\intbl\hyphpar0\outlinelevel4\adjustright \b\fs20\cgrid {Mnemonic\cell }\pard\plain \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright \fs20\cgrid {\b Machine
\par Code\cell Form\cell Disassembler
\par Action\cell Discontinue
\par Disassembly\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\b \row }\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw15\brdrcf1 \trbrdrl\brdrs\brdrw15\brdrcf1 \trbrdrb\brdrs\brdrw15\brdrcf1 \trbrdrr\brdrs\brdrw15\brdrcf1 \clvertalt\clbrdrl
\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \cltxlrtb \cellx1170\clvertalt\clbrdrb\brdrs\brdrw15\brdrcf1 \cltxlrtb \cellx2430\clvertalt\clbrdrb\brdrs\brdrw15\brdrcf1 \cltxlrtb \cellx4050\clvertalt\clbrdrb\brdrs\brdrw15\brdrcf1 \cltxlrtb 
\cellx7200\clvertalt\clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cltxlrtb \cellx8640\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 test\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 00\cell test\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw15\brdrcf1 \trbrdrl
\brdrs\brdrw15\brdrcf1 \trbrdrb\brdrs\brdrw15\brdrcf1 \trbrdrr\brdrs\brdrw15\brdrcf1 \clvertalt\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \cltxlrtb \cellx1170\clvertalt\clbrdrt\brdrs\brdrw15\brdrcf1 
\clbrdrb\brdrs\brdrw15\brdrcf1 \cltxlrtb \cellx2430\clvertalt\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \cltxlrtb \cellx4050\clvertalt\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \cltxlrtb \cellx7200\clvertalt\clbrdrt
\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cltxlrtb \cellx8640\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 nop\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 01\cell nop\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 idiv\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 02\cell idiv\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright 
{\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 fdiv\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 03\cell fdiv\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 lsrd\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 04
\cell lsrd\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 lsld\cell 
}\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 05\cell lsld\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 tap\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 06\cell tap\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell 
\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 tpa\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 07\cell tpa\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 inx\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 08\cell inx\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 dex\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 09\cell dex\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell 
\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 clv\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 0A\cell clv\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 sev\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 0B\cell sev\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 clc\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 0C\cell clc\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell 
\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 sec\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 0D\cell sec\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 cli\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 0E\cell cli\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 sei\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 0F\cell sei\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell 
\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 sba\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 10\cell sba\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 cba\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 11\cell cba\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 brset\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 12 dd mm rr\cell brset *dd,#mm,.+rr\cell Add Data Label, Add Branch Addr & Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 brclr\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 13 dd mm rr\cell brclr *dd,#mm,.+rr\cell Add Data Label, Add Branch Addr & Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard 
\nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 bset\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 14 dd mm\cell bset *dd,#mm\cell 
Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 bclr\cell 
}\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 15 dd mm\cell bclr *dd,#mm\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard 
\nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 tab\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 16\cell tab\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 tba\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 17\cell tba\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 iny\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 08\cell iny\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
\cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 dey\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 09\cell dey\cell 
}\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 bset\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 1C ff mm\cell bset ff,y,#mm\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row 
}\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 bclr\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 1D ff mm\cell bclr ff,y,#mm\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 brset\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 1E ff mm rr\cell brset ff,y,#mm,.+rr\cell Add Branch Addr & Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard 
\nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 brclr\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 1F ff mm rr\cell 
brclr ff,y,#mm,.+rr\cell Add Branch Addr & Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 tsy\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 30\cell tsy\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
\cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 tys\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 35\cell tys\cell 
}\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 puly\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 38\cell puly\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 aby\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 3A\cell aby\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
\cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 pshy\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 3C\cell pshy
\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 neg\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 60 ff\cell neg ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 com\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 63 ff\cell com ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 lsr\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
18 64 ff\cell lsr ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 ror\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 66 ff\cell ror ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard 
\nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 asr\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 67 ff\cell asr ff,y\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 lsl\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 68 ff\cell lsl ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 rol\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 69 ff\cell rol ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 dec\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
18 6A ff\cell dec ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 inc\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 6C ff\cell inc ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard 
\nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 tst\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 6D ff\cell tst ff,y\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 jmp\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 6E ff\cell jmp ff,y\cell Undeterminable Branch\cell discontinue\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 clr\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 6F ff\cell clr ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 cpy\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
18 8C jj kk\cell cpy #jjkk\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 xgdy\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 8F\cell xgdy\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard 
\nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 cpy\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 9C dd\cell cpy *dd\cell 
Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 suba\cell 
}\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 A0 ff\cell suba ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row 
}\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 cmpa\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 A1 ff\cell cmpa ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 sbca\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
18 A2 ff\cell sbca ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 subd\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 A3 ff\cell subd ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard 
\nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 anda\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 A4 ff\cell anda ff,y\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 bita\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 A5 ff\cell bita ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 ldaa\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 A6 ff\cell ldaa ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 staa\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
18 A7 ff\cell staa ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 eora\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 A8 ff\cell eora ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard 
\nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 adca\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 A9 ff\cell adca ff,y\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 oraa\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 AA ff\cell oraa ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 adda\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 AB ff\cell adda ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 cpy\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
18 AC ff\cell cpy ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 jsr\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 AD ff\cell jsr ff,y\cell Undeterminable Branch\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard 
\nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 lds\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 AE ff\cell lds ff,y\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 sts\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 AF ff\cell sts ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 cpy\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 BC hh ll\cell cpy hhll\cell Add Data Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 ldy\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 CE jj kk\cell ldy #jjkk\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row 
}\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 ldy\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 DE dd\cell ldy *dd\cell Add Data Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 sty\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 DF dd\cell sty *dd\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 
\row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 subb\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 E0 ff\cell subb ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright 
{\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 cmpb\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
18 E1 ff\cell cmpb ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 sbcb\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 E2 ff\cell sbcb ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard 
\nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 addd\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 E3 ff\cell addd ff,y\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 andb\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 E4 ff\cell andb ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 bitb\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 E5 ff\cell bitb ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 ldab\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
18 E6 ff\cell ldab ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 stab\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 E7 ff\cell stab ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard 
\nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 eorb\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 E8 ff\cell eorb ff,y\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 adcb\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 E9 ff\cell adcb ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 orab\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 EA ff\cell orab ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 addb\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
18 EB ff\cell addb ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 ldd\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 EC ff\cell ldd ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard 
\nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 std\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 ED ff\cell std ff,y\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 ldy\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 EE ff\cell ldy ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 sty\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 EF ff\cell sty ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 ldy\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
18 FE hh ll\cell ldy hhll\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 sty\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 18 FF hh ll\cell sty hhll\cell Add Data Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 daa\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 19\cell daa\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 cpd\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 1A 83 jj kk\cell cpd #jjkk\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 cpd\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
1A 93 dd\cell cpd *dd\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 cpd\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 1A A3 ff\cell cpd ff,x\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard 
\nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 cpy\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 1A AC ff\cell cpy ff,x\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 cpd\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 1A B3 hh ll\cell cpd hhll\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 ldy\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 1A EE ff\cell ldy ff,x\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 sty\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 1A EF ff\cell sty ff,x\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 aba\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 1B\cell aba\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell 
\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 bset\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 1C ff mm\cell 
bset ff,x,#mm\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 bclr
\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 1D ff mm\cell bclr ff,x,#mm\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 brset\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 1E ff mm rr\cell brset ff,x,#mm,.+rr\cell Add Branch Addr & Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 brclr\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 1F ff mm rr\cell brclr ff,x,#mm,.+rr\cell Add Branch Addr & Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard 
\nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 bra\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 20 rr\cell bra .+rr\cell 
Add Branch Addr & Label\cell discontinue\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 brn\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 21 rr\cell brn .+rr\cell Add Branch Addr & Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 bhi\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 22 rr\cell bhi .+rr\cell Add Branch Addr & Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 bls\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 23 rr\cell bls .+rr\cell Add Branch Addr & Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 bcc\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 24 rr\cell bcc .+rr\cell Add Branch Addr & Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 bcs\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 25 rr\cell bcs .+rr\cell Add Branch Addr & Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 bne\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 26 rr\cell bne .+rr\cell Add Branch Addr & Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 beq\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 27 rr\cell beq .+rr\cell Add Branch Addr & Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 bvc\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 28 rr\cell bvc .+rr\cell Add Branch Addr & Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 bvs\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 29 rr\cell bvs .+rr\cell Add Branch Addr & Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 bpl\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 2A rr\cell bpl .+rr\cell Add Branch Addr & Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 bmi\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 2B rr\cell bmi .+rr\cell Add Branch Addr & Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 bge\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 2C rr\cell bge .+rr\cell Add Branch Addr & Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 blt\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 2D rr\cell blt .+rr\cell Add Branch Addr & Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 bgt\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 2E rr\cell bgt .+rr\cell Add Branch Addr & Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 ble\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 2F rr\cell ble .+rr\cell Add Branch Addr & Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 tsx\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 30\cell tsx\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 ins\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 31
\cell ins\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 pula\cell 
}\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 32\cell pula\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 pulb\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 33\cell pulb\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell 
\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 des\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 34\cell des\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 txs\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 35\cell txs\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 psha\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 36\cell psha\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell 
\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 pshb\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 37\cell pshb\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 pulx\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 38\cell pulx\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 rts\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 39\cell rts\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell 
}\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 discontinue\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 abx\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 3A\cell abx\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 rti\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 3B\cell rti\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell 
}\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 discontinue\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 pshx\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 3C\cell pshx\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 mul\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 3D\cell mul\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell 
\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 wai\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 3E\cell wai\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 swi\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 3F\cell swi\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 nega\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 40\cell nega\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell 
\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 coma\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 43\cell coma\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 lsra\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 44\cell lsra\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 rora\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 46\cell rora\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell 
\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 asra\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 47\cell asra\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 lsla\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 48\cell lsla\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 rola\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 49\cell rola\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell 
\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 deca\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 4A\cell deca\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 inca\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 4C\cell inca\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 tsta\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 4D\cell tsta\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell 
\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 clra\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 4F\cell clra\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 negb\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 50\cell negb\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 comb\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 53\cell comb\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell 
\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 lsrb\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 54\cell lsrb\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 rorb\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 56\cell rorb\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 asrb\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 57\cell asrb\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell 
\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 lslb\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 58\cell lslb\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 rolb\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 59\cell rolb\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 decb\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 5A\cell decb\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell 
\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 incb\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 5C\cell incb\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 tstb\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 5D\cell tstb\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 clrb\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 5F\cell clrb\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell 
\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 neg\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 60 ff\cell neg ff,x\cell 
}\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 com\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 63 ff\cell com ff,x\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 lsr\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 64 ff\cell lsr ff,x\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
\cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 ror\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 66 ff\cell ror ff,x
\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 asr\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 67 ff\cell asr ff,x\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 lsl\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 68 ff\cell lsl ff,x\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
\cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 rol\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 69 ff\cell rol ff,x
\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 dec\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 6A ff\cell dec ff,x\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 inc\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 6C ff\cell inc ff,x\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
\cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 tst\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 6D ff\cell tst ff,x
\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 jmp\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 6E ff\cell jmp ff,x\cell Undeterminable Branch\cell discontinue\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 clr\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 6F ff\cell clr ff,x\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
\cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 neg\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 70 hh ll\cell 
neg hhll\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 com\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 73 hh ll\cell com hhll\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard 
\nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 lsr\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 74 hh ll\cell lsr hhll\cell 
Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 ror\cell 
}\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 76 hh ll\cell ror hhll\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 asr\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 77 hh ll\cell asr hhll\cell Add Data Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 lsl\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 78 hh ll\cell lsl hhll\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 rol\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 79 hh ll\cell rol hhll\cell Add Data Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 dec\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 7A hh ll\cell dec hhll\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 inc\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 7C hh ll\cell inc hhll\cell Add Data Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 tst\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 7D hh ll\cell tst hhll\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 jmp\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 7E hh ll\cell jmp hhll\cell Add Branch Addr & Label\cell discontinue\cell }\pard 
\nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 clr\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 7F hh ll\cell clr hhll\cell 
Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 suba\cell 
}\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 80 ii\cell suba #ii\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row 
}\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 cmpa\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 81 ii\cell cmpa #ii\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 sbca\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
82 ii\cell sbca #ii\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
subd\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 83 jj kk\cell subd #jjkk\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 anda\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 84 ii\cell anda #ii\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 bita\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 85 ii\cell bita #ii\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 ldaa\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 86 ii\cell ldaa #ii\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 eora\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
88 ii\cell eora #ii\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
adca\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 89 ii\cell adca #ii\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 oraa\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 8A ii\cell oraa #ii\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 adda\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 8B ii\cell adda #ii\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 cpx\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 8C jj kk\cell cpx #jjkk\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 bsr\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
8D rr\cell bsr .+rr\cell Add Branch Addr & Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 lds\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 8E jj kk\cell lds #jjkk\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 xgdx\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 8F
\cell xgdx\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 suba\cell 
}\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 90 dd\cell suba *dd\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 cmpa\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 91 dd\cell cmpa *dd\cell Add Data Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 sbca\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 92 dd\cell sbca *dd\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 
\row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 subd\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 93 dd\cell subd *dd\cell Add Data Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 anda\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 94 dd\cell anda *dd\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 
\row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 bita\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 95 dd\cell bita *dd\cell Add Data Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 ldaa\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 96 dd\cell ldaa *dd\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 
\row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 staa\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 97 dd\cell staa *dd\cell Add Data Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 eora\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 98 dd\cell eora *dd\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 
\row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 adca\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 99 dd\cell adca *dd\cell Add Data Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 oraa\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 9A dd\cell oraa *dd\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 
\row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 adda\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 9B dd\cell adda *dd\cell Add Data Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 cpx\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 9C dd\cell cpx *dd\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 
\row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 jsr\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 9D dd\cell jsr *dd\cell Add Branch Addr & Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 lds\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 9E dd\cell lds *dd\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 
\row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 sts\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 9F dd\cell sts *dd\cell Add Data Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 suba\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 A0 ff\cell suba ff,x\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 cmpa\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 A1 ff\cell cmpa ff,x\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 sbca\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
A2 ff\cell sbca ff,x\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
subd\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 A3 ff\cell subd ff,x\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 anda\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 A4 ff\cell anda ff,x\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 bita\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 A5 ff\cell bita ff,x\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 ldaa\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 A6 ff\cell ldaa ff,x\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 staa\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
A7 ff\cell staa ff,x\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
eora\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 A8 ff\cell eora ff,x\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 adca\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 A9 ff\cell adca ff,x\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 oraa\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 AA ff\cell oraa ff,x\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 adda\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 AB ff\cell adda ff,x\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 cpx\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
AC ff\cell cpx ff,x\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
jsr\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 AD ff\cell jsr ff,x\cell Undeterminable Branch\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard 
\nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 lds\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 AE ff\cell lds ff,x\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 sts\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 AF ff\cell sts ff,x\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 suba\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 B0 hh ll\cell suba hhll\cell Add Data Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 cmpa\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 B1 hh ll\cell cmpa hhll\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 sbca\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 B2 hh ll\cell sbca hhll\cell Add Data Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 subd\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 B3 hh ll\cell subd hhll\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 anda\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 B4 hh ll\cell anda hhll\cell Add Data Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 bita\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 B5 hh ll\cell bita hhll\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 ldaa\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 B6 hh ll\cell ldaa hhll\cell Add Data Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 staa\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 B7 hh ll\cell staa hhll\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 eora\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 B8 hh ll\cell eora hhll\cell Add Data Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 adca\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 B9 hh ll\cell adca hhll\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 oraa\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 BA hh ll\cell oraa hhll\cell Add Data Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 adda\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 BB hh ll\cell adda hhll\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 cpx\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 BC hh ll\cell cpx hhll\cell Add Data Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 jsr\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 BD hh ll\cell jsr hhll\cell Add Branch Addr & Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright 
{\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 lds\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 BE hh ll\cell lds hhll\cell Add Data Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 sts\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 BF hh ll\cell sts hhll\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 subb\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 C0 ii\cell subb #ii\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 cmpb\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 C1 ii\cell cmpb #ii\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 sbcb\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 C2 ii\cell sbcb #ii\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 addd\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
C3 jj kk\cell addd #jjkk\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 andb\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 C4 ii\cell andb #ii\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard 
\nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 bitb\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 C5 ii\cell bitb #ii\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 ldab\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 C6 ii\cell ldab #ii\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 eorb\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 C8 ii\cell eorb #ii\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 adcb\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
C9 ii\cell adcb #ii\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
orab\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 CA ii\cell orab #ii\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 addb\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 CB ii\cell addb #ii\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 ldd\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 CC jj kk\cell ldd #jjkk\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 cpd\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 CD A3 ff\cell cpd ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 cpx\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
CD AC ff\cell cpx ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 ldx\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 CD EE ff\cell ldx ff,y\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard 
\nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 stx\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 CD EF ff\cell stx ff,y\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 ldx\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 CE jj kk\cell ldx #jjkk\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 stop\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 CF\cell stop\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell 
\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 subb\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 D0 dd\cell subb *dd\cell 
Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 cmpb\cell 
}\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 D1 dd\cell cmpb *dd\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 sbcb\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 D2 dd\cell sbcb *dd\cell Add Data Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 addd\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 D3 dd\cell addd *dd\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 
\row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 andb\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 D4 dd\cell andb *dd\cell Add Data Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 bitb\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 D5 dd\cell bitb *dd\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 
\row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 ldab\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 D6 dd\cell ldab *dd\cell Add Data Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 stab\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 D7 dd\cell stab *dd\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 
\row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 eorb\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 D8 dd\cell eorb *dd\cell Add Data Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 adcb\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 D9 dd\cell adcb *dd\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 
\row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 orab\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 DA dd\cell orab *dd\cell Add Data Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 addb\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 DB dd\cell addb *dd\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 
\row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 ldd\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 DC dd\cell ldd *dd\cell Add Data Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 std\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 DD dd\cell std *dd\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 
\row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 ldx\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 DE dd\cell ldx *dd\cell Add Data Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 stx\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 DF dd\cell stx *dd\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 
\row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 subb\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 E0 ff\cell subb ff,x\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 cmpb\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
E1 ff\cell cmpb ff,x\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
sbcb\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 E2 ff\cell sbcb ff,x\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 addd\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 E3 ff\cell addd ff,x\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 andb\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 E4 ff\cell andb ff,x\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 bitb\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 E5 ff\cell bitb ff,x\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 ldab\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
E6 ff\cell ldab ff,x\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
stab\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 E7 ff\cell stab ff,x\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 eorb\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 E8 ff\cell eorb ff,x\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 adcb\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 E9 ff\cell adcb ff,x\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard 
\qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 orab\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 EA ff\cell orab ff,x\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 addb\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
EB ff\cell addb ff,x\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
ldd\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 EC ff\cell ldd ff,x\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 
\row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 std\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 ED ff\cell std ff,x\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {
\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 ldx\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
EE ff\cell ldx ff,x\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 
stx\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 EF ff\cell stx ff,x\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 
\row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 subb\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 F0 hh ll\cell subb hhll\cell Add Data Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 cmpb\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 F1 hh ll\cell cmpb hhll\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 sbcb\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 F2 hh ll\cell sbcb hhll\cell Add Data Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 addd\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 F3 hh ll\cell addd hhll\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 andb\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 F4 hh ll\cell andb hhll\cell Add Data Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 bitb\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 F5 hh ll\cell bitb hhll\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 ldab\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 F6 hh ll\cell ldab hhll\cell Add Data Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 stab\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 F7 hh ll\cell stab hhll\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 eorb\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 F8 hh ll\cell eorb hhll\cell Add Data Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 adcb\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 F9 hh ll\cell adcb hhll\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 orab\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 FA hh ll\cell orab hhll\cell Add Data Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 addb\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 FB hh ll\cell addb hhll\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 ldd\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 FC hh ll\cell ldd hhll\cell Add Data Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 std\cell }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 FD hh ll\cell std hhll\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\f2\fs12 \row }\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 ldx\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 FE hh ll\cell ldx hhll\cell Add Data Label\cell }\pard 
\qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw15\brdrcf1 \trbrdrl\brdrs\brdrw15\brdrcf1 \trbrdrb
\brdrs\brdrw15\brdrcf1 \trbrdrr\brdrs\brdrw15\brdrcf1 \clvertalt\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \cltxlrtb \cellx1170\clvertalt\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 
\cltxlrtb \cellx2430\clvertalt\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \cltxlrtb \cellx4050\clvertalt\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \cltxlrtb \cellx7200\clvertalt\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrb
\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cltxlrtb \cellx8640\pard \qc\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 stx\cell }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 FF hh ll\cell stx hhll
\cell Add Data Label\cell }\pard \qr\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\f2\fs12\cgrid0 \cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\f2\fs12 \row }\pard \nowidctlpar\widctlpar\hyphpar0\adjustright {
\par Where:
\par }\pard\plain \s37\li720\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {dd\tab =\tab 8-Bit Direct Address (0x0000 \endash  0x00FF).  High byte assumed to be 0x00.
\par ff\tab =\tab 8-Bit Positive Offset 0x00 (0) to 0xFF (255) added to index register value.
\par hh\tab =\tab High Order Byte of a 16-bit Extended Address.
\par ii\tab =\tab Single Byte of Immediate Data.
\par jj\tab =\tab High Order Byte of 16-Bit Immediate Data.
\par kk\tab =\tab Low Order Byte of 16-Bit Immediate Data.
\par ll\tab =\tab Low Order Byte of a 16-bit Extended Address.
\par mm\tab =\tab 8-Bit Mask (Bits that are set are the bits that will be affected).
\par rr\tab =\tab Signed Relative Offset 0x80 (-128) to 0x7F (127).
\par \tab \tab Offset is relative to the address }{\b\ul following}{ the machine code offset byte.
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par Instructions listed as \ldblquote discontinue disassembly\rdblquote  are instructions that end the current stream of code.  The code-seeker starts with the first entry point and disassembles until one of the following conditions is satisfied:
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar\jclisttab\tx1080{\*\pn \pnlvlblt\ilvl0\ls12\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\hyphpar0\ls12\adjustright {
An instruction flagged as \ldblquote discontinue\rdblquote  is encountered (these are hard jumps or returns)
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar\jclisttab\tx1080{\*\pn \pnlvlblt\ilvl0\ls13\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\hyphpar0\ls13\adjustright {
It encounters code that has already been tested.
\par {\pntext\pard\plain\f3\fs20\cgrid \loch\af3\dbch\af0\hich\f3 \'b7\tab}}\pard \fi-360\li1080\nowidctlpar\widctlpar\jclisttab\tx1080{\*\pn \pnlvlblt\ilvl0\ls14\pnrnot0\pnf3\pnstart1\pnindent360\pnhang{\pntxtb \'b7}}\hyphpar0\ls14\adjustright {
It encounters an illegal instruction (an opcode byte that isn\rquote t in the above table)
\par }\pard \nowidctlpar\widctlpar\hyphpar0\adjustright {
\par It then reads the next entry point, and continues iterating until all entry points are exhausted.
\par {\listtext\tab}}\pard\plain \s1\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\ls1\outlinelevel0\adjustright \b\f1\fs28\cgrid {\page {\*\bkmkstart _Toc454349579}{\*\bkmkstart _Toc455229669}Reassembling a Disassembly{\*\bkmkend _Toc454349579}
{\*\bkmkend _Toc455229669}
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {As stated earlier in this document, there are typically two approaches to disassembly work \endash 
 hacking and reverse-engineering.  Typically, the hacker is only interested in finding out what is in a program or binary enough to complete a hack and isn\rquote 
t interested in the overall scheme of figuring out the how and why of the workings of the entire system.  So for the hacker, being able to reassemble a disassembly is probably of little or no importance.  However, to the serious person 
working on fully reverse engineering a system, being able to easily reassemble a disassembly is a life-send.  The M6811 Code-Seeking Disassembler was designed for the reverse-engineer and so the output was targeted for a specific assembler.
\par 
\par This disassembler targets is the AS6811 assembler written by Alan Baldwin at Kent State University\rquote s Physics Department (}{\b not to be confused with the Motorola AS11 freeware assembler}{).  Alan\rquote 
s entire assembler set and relocating linker is a superb piece of workmanship, which is why it was chosen as the target output form for this disassembler.
\par 
\par The AS6811 assembler is available in freeware/shareware form with complete source code and can be found on many freeware CD-ROM sets, including several by Walnut Creek.  So, you sh
ould be able to locate the assembler without problem.  If not, you can download it from my website, or other site, as described in the }{\i Support}{ Section of this document.
\par 
\par For most programs, you can use the assembler unmodified to reassemble this disassembler\rquote 
s output back into the original binary.  However, there are a few considerations you should keep in mind.  The first one is the memory model that the pre-compiled version of the assembler is designed for.  Sometimes it is necessary to rebuild the assembl
er from the source using a larger memory model in order to assemble very large HC11 programs.
\par 
\par Another problem, and probably the main problem, is the extended address optimizer in the assembler.  Alan\rquote s assembler, when given an address in the 0x0000 to 0x0
0FF range, will optimize the assembled code to be that of a Direct Address Mode instruction (see the tables in the }{\i MC68HC11 Overview}{ section of this document) regardless of whether you specify it as a Direct Mode instruction (\ldblquote *
\rdblquote  operator) or not.  Ordinar
ily, this is a good feature of the assembler and allows you to produce binary files that are properly space optimized.  However, the HC11 also allows for Extended Address Mode instructions to also access the range of 0x0000 to 0x00FF.  This can cause outp
ut from the disassembled code, when reassembled, to not match that of the original binary if the original binary has one or more instructions that are not optimized into the Direct Mode form \endash  not a good thing when reverse-engineering.
\par 
\par To solve this problem, this disassembler will use the \ldblquote *\rdblquote 
 operator for the target address on all Direct Address Mode instructions.  This should signify to the assembler that it is indeed a Direct Address in the 0x0000 to 0x00FF range.  Any extended addresses will be outputted by the disassembler with }{\b\ul no
}{ prefix operator.  The assembler should interpret these addresses as being Extended Mode addresses, regardless of the fact that they might be in the 0x0000 to 0x00FF range. Unfortunately, this means that Alan\rquote s assembler source 
code must be altered to disable this optimizing feature in order to produce truly compatible binaries.
\par 
\par So, I recommend you download the source code version of the assembler, disable the optimizer, and recompile in a large memory model.  Again, refer to the }{\i Support}{
 section in this document, as I do offer an already modified version of the assembler both in source and in binary form \endash  but, to maintain proper redistribution policies of his license, I do have it in the true, unmodified form.  So while you can 
use the unmodified version for reassembling code that is anatomically correct, you should be aware that if you reassemble and the sizes and/or addresses don\rquote 
t seem to match, start looking for optimized verses non-optimized instructions.  Typically, the first point of divergence will be the first non-optimized instruction.
\par 
\par Other details of assembly are out of the scope of this document \endash  for those, I refer you to Alan\rquote s manual that comes with the assembler, as well as Motorola documentation.
\par {\listtext\tab}}\pard\plain \s1\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\ls1\outlinelevel0\adjustright \b\f1\fs28\cgrid {\page {\*\bkmkstart _Toc454349580}{\*\bkmkstart _Toc455229670}Limitations in This Version{\*\bkmkend _Toc454349580}
{\*\bkmkend _Toc455229670}
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
This version, since it is compiled as a DOS mode 16-bit program, is limited to the 640K boundary of DOS.  Additionally, the compiler used also requires all objects to be no larger than one 64K segment \endash  in other words, it uses only offset (16
-bit) addressing for these objects rather than a full 32-bit address.  Therefore, all of the internal tables in the program must not exceed 64K.  I guess I could have gotten fancy and had multiple parts of the table in separate 64K segments, but that woul
d have greatly complicated the design and would have slowed it down.  See the section on }{\i Future Versions}{ to see how these limitations will be eliminated in upcoming releases.
\par 
\par The worst two limitations are the name size limit for labels and the label table overall size \endash 
 and yes, these two are related.  If the size of the label names were increased, the number of entries must be reduced.  In some large applications, it is possible to run out of label entries (as I have experienced), so I decided to limit the
 name length for the labels as a trade-off between label name length and number of label entries.
\par 
\par The next big limitation is the number of branch table entries, but usually you run out of label table entries first, since all branches will get a label in addition to the labels from the data areas \endash  so obviously more labels are used.  Thus far, I
\rquote ve never run out of branch table entries \endash  yet.
\par 
\par Below is a table denoting the limitations within this version:
\par 
\par }\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw15\brdrcf1 \trbrdrl\brdrs\brdrw15\brdrcf1 \trbrdrb\brdrs\brdrw15\brdrcf1 \trbrdrr\brdrs\brdrw15\brdrcf1 \clvertalt\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb
\brdrs\brdrw30\brdrcf1 \cltxlrtb \cellx3960\clvertalt\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw30\brdrcf1 \cltxlrtb \cellx5796\clvertalt\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw30\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cltxlrtb 
\cellx8748\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\b Item\cell Limit\cell Units\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\b \row }\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw15\brdrcf1 \trbrdrl\brdrs\brdrw15\brdrcf1 
\trbrdrb\brdrs\brdrw15\brdrcf1 \trbrdrr\brdrs\brdrw15\brdrcf1 \clvertalt\clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \cltxlrtb \cellx3960\clvertalt\clbrdrb\brdrs\brdrw15\brdrcf1 \cltxlrtb \cellx5796\clvertalt\clbrdrb
\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cltxlrtb \cellx8748\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\b Entry Address (Control File Only)\cell }{32\cell Table Entries\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {
\row }\trowd \trgaph108\trleft-108\trbrdrt\brdrs\brdrw15\brdrcf1 \trbrdrl\brdrs\brdrw15\brdrcf1 \trbrdrb\brdrs\brdrw15\brdrcf1 \trbrdrr\brdrs\brdrw15\brdrcf1 \clvertalt\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb
\brdrs\brdrw15\brdrcf1 \cltxlrtb \cellx3960\clvertalt\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \cltxlrtb \cellx5796\clvertalt\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cltxlrtb 
\cellx8748\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\b Branch Address Table\cell }{4096\cell Table Entries\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\row }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\b Label Table
\cell }{4096\cell Table Entries\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\row }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\b Label Name Size\cell }{6\cell Characters\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\row 
}\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\b Indirect Table\cell }{512\cell Table Entries\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\row }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\b Indirect Vector Types\cell }{
Code Only\cell Vector Type\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\row }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\b Source Binary\cell }{65536\cell Bytes\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\row }\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\b File Format\cell }{Binary Only\cell File Type\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\row }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\b Number of Loadable Source Files
\cell }{1\cell Input Files\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\row }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\b Number of Loadable Control Files\cell }{1\cell Control Files\cell }\pard 
\nowidctlpar\widctlpar\intbl\adjustright {\row }\pard \nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\b Number Format (Control File Only)\cell }{Hexadecimal\cell Data Type\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\row }\trowd 
\trgaph108\trleft-108\trbrdrt\brdrs\brdrw15\brdrcf1 \trbrdrl\brdrs\brdrw15\brdrcf1 \trbrdrb\brdrs\brdrw15\brdrcf1 \trbrdrr\brdrs\brdrw15\brdrcf1 \clvertalt\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrl\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 
\cltxlrtb \cellx3960\clvertalt\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \cltxlrtb \cellx5796\clvertalt\clbrdrt\brdrs\brdrw15\brdrcf1 \clbrdrb\brdrs\brdrw15\brdrcf1 \clbrdrr\brdrs\brdrw15\brdrcf1 \cltxlrtb \cellx8748\pard 
\nowidctlpar\widctlpar\intbl\hyphpar0\adjustright {\b Code-Seeking\cell }{Seek Only (no spit)\cell Seek Methods\cell }\pard \nowidctlpar\widctlpar\intbl\adjustright {\row }\pard \nowidctlpar\widctlpar\hyphpar0\adjustright {
\par 
\par 
\par 
\par 
\par 
\par 
\par 
\par {\listtext\tab}}\pard\plain \s1\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\ls1\outlinelevel0\adjustright \b\f1\fs28\cgrid {\page {\*\bkmkstart _Toc454349581}{\*\bkmkstart _Toc455229671}Bugs{\*\bkmkend _Toc454349581}{\*\bkmkend _Toc455229671}
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {With any software application, it 
is likely that at least one bug will exist somewhere.  Unfortunately, this version of the M6811 Code-Seeking Disassembler is no exception.  However, all of the known bugs have benign consequences, can be easily resolved, and do not hinder the disassembly 
process.  Below is a list of known bugs along with how to \ldblquote fix\rdblquote 
 them.  Obviously, these are only the ones that I know about, meaning that there could be others.  If you find additional bugs, or think you have, please contact me and let me know \endash  See the }{\i Support}{ section for contact information:
\par 
\par Erroneous \ldblquote *** Error: Opening Source File\rdblquote  messages
\par }\pard\plain \s37\li720\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {This is caused by a missing or corrupt \ldblquote m6811dis.op\rdblquote  file.  Make sure that you have a good copy of the }{\b m6811dis.op}{ file in the }{\b\ul 
current directory}{ at the time you run 
the disassembler.  I failed to reset the IO error status after reading (or attempting to read) the opcodes file.  Since the source file is read after the opcodes file, this results in an erroneous error message indicating that the source file has problems
.
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par Program Runs Forever in an Endless Loop and Fills Up Remaining Hard Disk Space
\par }\pard\plain \s37\li720\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {The disassembler determines the end of the file by looking at loaded vs. unloaded parts of the source binary.  If you load a full 64K (65536) byte source file, the program wil
l erroneously loop around (because of a 16-bit pointer) and keep looping when writing the output file.  To fix this, trim the unused RAM area and processor register area out of your source binary file.  You shouldn\rquote 
t be trying to load these unused portions
 anyway as they can cause erroneous output in the output file by it thinking that a memory address has a certain value when in reality it is dependent upon what is in the RAM, which will obviously be different.  There }{\b\ul will}{
 be some RAM mapped somewhere, as it is needed for stack space.
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par Mid-Opcode Labels Don\rquote t Get Reported in Output
\par }\pard\plain \s37\li720\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {This isn\rquote t so much of a bug as it is from being either invalid code seeking from things such as Code Inline Data (See }{\i Disassembly Pitfalls}{
 in this document) or incorrectly specif
ied labels in the Control File.  What happens is that if a label is specified or generated and the address for that label happens to occur in the middle of an instruction (rather than being the address for the first byte of an instruction), the label does
n\rquote 
t get assigned in the output file.  In reality, this erroneous label should have never gotten generated in the first place and can be caused by you specifying wrong entry points and/or indirect entries in the control file, or by having the code somehow sk
ewed, such as with Code Inline Data, or by just having erroneous screwy code in the first place.  This bug (or quirk) is no big deal and will only cause an assembler to later report that a label wasn\rquote 
t defined.  You should examine any such labels to find the cause and if necessary, add equates before re-assembling.
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par 
\par 
\par {\listtext\tab}}\pard\plain \s1\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\ls1\outlinelevel0\adjustright \b\f1\fs28\cgrid {\page {\*\bkmkstart _Toc454349582}{\*\bkmkstart _Toc455229672}Support{\*\bkmkend _Toc454349582}{\*\bkmkend _Toc455229672}

\par {\*\bkmkstart _Toc454349583}{\*\bkmkstart _Toc455229673}{\listtext\tab}}\pard\plain \s2\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\ls1\ilvl1\outlinelevel1\adjustright \b\i\f1\cgrid {The Disassembler{\*\bkmkend _Toc454349583}{\*\bkmkend _Toc455229673}

\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {I will continue to maintain this version and will be enhancing it and releasing future versions.  This version, and future M6811 only disassemblers will be provided f
ree of charge and can be freely distributed provided you supply the disassembler in its entirety, including support files, without changes or modifications.  This does not apply to GenREP (the Generic Reverse Engineering Platform) that I\rquote 
m developing, which will have a M6811 module.  That application, when completed, will be a commercial product \endash  or so that is the current plan.
\par 
\par Currently, my ISP only provides dynamic IP support and so I cannot register a domain name for my web server machine.  However, I 
keep a dynamic front-end page on their server that constantly points to the web server on my machine.  The front-end page can be found at: }{\field{\*\fldinst { HYPERLINK http://home.midsouth.rr.com/dewtronics }{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000002700000068007400740070003a002f002f0068006f006d0065002e006d006900640073006f007500740068002e00720072002e0063006f006d002f00640065007700740072006f006e006900630073000000e0c9ea79f9bace118c8200aa004ba90b4e000000
68007400740070003a002f002f0068006f006d0065002e006d006900640073006f007500740068002e00720072002e0063006f006d002f00640065007700740072006f006e006900630073000000}}}{\fldrslt {\cs34\ul\cf2 http://home.midsouth.rr.com/dewtronics}}}{
\par 
\par Once on my site, browse for the downloads-section.  There you\rquote 
ll find this M6811 Code-Seeking Disassembler (in any of the versions I create), as well as the AS6811 assembler both in virgin and in modified forms as described earlier in this document.  I will also have copies of s
ome of the Motorola documentation in .pdf format, since Motorola\rquote s website is so hideous (and almost impossible) to locate anything \endash  or so it used to be unless they\rquote ve recently changed its layout.
\par 
\par If you find any bugs, have suggestions or ideas for program enhancement, or have any questions in general, you can email me at: }{\field{\*\fldinst { HYPERLINK mailto:dewtronics@tech-center.com }{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000001b000000640065007700740072006f006e00690063007300400074006500630068002d00630065006e007400650072002e0063006f006d000000e0c9ea79f9bace118c8200aa004ba90b440000006d00610069006c0074006f003a0064006500770074007200
6f006e00690063007300400074006500630068002d00630065006e007400650072002e0063006f006d000000}}}{\fldrslt {\cs34\ul\cf2 dewtronics@tech-center.com}}}{
\par 
\par 
\par {\*\bkmkstart _Toc454349584}{\*\bkmkstart _Toc455229674}{\listtext\tab}}\pard\plain \s2\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\ls1\ilvl1\outlinelevel1\adjustright \b\i\f1\cgrid {Motorola{\*\bkmkend _Toc454349584}{\*\bkmkend _Toc455229674}
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {Documentation on the MC68HC11 processor family, as well as other assemblers, disassemblers, and support utilities, can be found on Motorola\rquote s website \endash 
 if you look hard enough that is.  Unless they\rquote ve improved their site recently, it will take a bit of hunting and searching around \endash  though keep looking, because it is there somewhere.  Their website is at }{\field{\*\fldinst {
 HYPERLINK http://www.mot-sps.com }{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000001700000068007400740070003a002f002f007700770077002e006d006f0074002d007300700073002e0063006f006d000000e0c9ea79f9bace118c8200aa004ba90b3000000068007400740070003a002f002f007700770077002e006d006f0074002d007300
700073002e0063006f006d002f000000}}}{\fldrslt {\cs34\ul\cf2 http://www.mot-sps.com}}}{.
\par 
\par 
\par {\*\bkmkstart _Toc454349585}{\*\bkmkstart _Toc455229675}{\listtext\tab}}\pard\plain \s2\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\ls1\ilvl1\outlinelevel1\adjustright \b\i\f1\cgrid {Third Party (Assemblers, etc){\*\bkmkend _Toc454349585}
{\*\bkmkend _Toc455229675}
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {Alan Baldwin\rquote s M6811 assembler can be found on my website as well as from many freeware/shareware CD distribution houses, such as Walnut Creek.  Many of the CD-ROM\rquote 
s are online and can probably be found on the web, though I haven\rquote 
t really looked.  The version I have tested against, Version 1.50, with source, came directly from Alan himself back in April of 1995.  Since then, he has generated newer versions and m
ade additional enhancements.  At the time of this writing, I have not confirmed the functionality of newer versions with this disassembler.  As I come across other versions and resources, I will post them online to be downloaded, but will keep Version 1.5
0 online as well since I know for certain that it works.
\par 
\par According to the AS6811 documentation, Alan can be reached at the following address:
\par 
\par }\pard \li1440\nowidctlpar\widctlpar\hyphpar0\adjustright {Alan R. Baldwin
\par Kent State University
\par Physics Department
\par Kent, Ohio 44242
\par Phone: 330-672-2531
\par Fax: 330-672-2959
\par }\pard \nowidctlpar\widctlpar\hyphpar0\adjustright {
\par His documentation also states that the assembler is available via anonymous FTP to: }{\cs34\ul\cf2 shop-pdp.kent.edu}{.  And that it is also available from the C Users\rquote  Group:
\par 
\par }\pard \li1440\nowidctlpar\widctlpar\hyphpar0\adjustright {The C Users\rquote  Group
\par 1601 W. 23}{\super rd}{ Street, Suite 200
\par Lawrence, KS 66046-2700 USA
\par Phone: 913-841-1631
\par Fax: 913-841-2624
\par }\pard \nowidctlpar\widctlpar\hyphpar0\adjustright {
\par As I was writing this document, I checked his anonymous FTP site and it does indeed contain a newer version of the assembler \endash  Version 2.10 to be exact, dated April of 1999.  At first glance, there doesn\rquote t appear to be any problems wit
h using this newer version.  I will test it as soon as possible and update this document accordingly.  It does look like this new version has Linux support \endash  hurray!
\par 
\par The ASxxxx collection contains cross assemblers for the 6800(6802/6808), 6801(hd6303), 6804,  6805,  68HC08,  6809,  68HC11,  68HC12,   68HC16,   8051, 8085(8080), z80(hd64180),  H8/3xx, and 6500 series microprocessors.
\par 
\par You will probably want to have a good hex editor as well.  A decent hex editor can be found at BreakPoint Software, called Hex Workshop, at }{\field{\*\fldinst { HYPERLINK http://www.bpsoft.com }{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b02000000170000000f0000007700770077002e006200700073006f00660074002e0063006f006d000000e0c9ea79f9bace118c8200aa004ba90b2e00000068007400740070003a002f002f007700770077002e006200700073006f00660074002e0063006f006d002f000000}}
}{\fldrslt {\cs34\ul\cf2 www.bpsoft.com}}}{.
\par 
\par 
\par 
\par 
\par 
\par 
\par {\listtext\tab}}\pard\plain \s1\sb240\sa60\keepn\nowidctlpar\widctlpar\hyphpar0\ls1\outlinelevel0\adjustright \b\f1\fs28\cgrid {\page {\*\bkmkstart _Toc454349586}{\*\bkmkstart _Toc455229676}Future Versions{\*\bkmkend _Toc454349586}
{\*\bkmkend _Toc455229676}
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {So what is planned in the future?  Well, a whole lot is planned.  This version was the first of many 6811 disassemblers to come.  This version, Version 1.0, was ori
ginally written in Borland Pascal 7.0 and will be the baseline standard for the DOS 16-bit platform.  I have ported it to MS Visual C++ 5.0 and created a DOS 32-bit version, which will soon be released as Version 1.2.  It eliminates all of the current lim
itations and is bounded only by available system memory.  It uses a DLL class that I call DFC (Data File Converter) to allow support for any source file format \endash 
 binary, Intel Hex, Motorola Hex, etc.  For formats that I happen to not supply a DFC for, you simply need to write a DLL to handle your new format \endash  no recompiling, no rebuilding, just make a DLL and run.
\par 
\par At the time I am writing this, the Version 1.2 works, but I would like to change the internal opcode seeker to be a hash-table of hash-tables rather than a hash-table of arrays.  For the 6811 it won\rquote 
t make much difference, but for other processors like the 6816 and 68332, it makes a world of difference in disassembly time.  So you say, why not release it and then update it later.  The reason is I\rquote m creating a GDC class \endash 
 Generic Disassembler Class \endash  which will allow disassemblers to be encompassed by a DLL.  This will later be used in the GenREP (Generic Reverse Engineering Platform) program that I plan to release as a commercial product.  The idea 
is that the program will not be dependent on any processor, any target assembler, any file format, etc.  You can simply load DLL files into the program at run-time.
\par 
\par So with this available, why do I still support Version 1.0?  Well, Version 1.0 is a 16-bit
 application that can run directly in DOS or DOS-Command Prompt mode.  Version 1.2, although it is a DOS version, is a 32-bit application and requires MS Windows 95, 98, NT, etc, and has to be run in a DOS Prompt Window.  For some, this isn\rquote 
t acceptable.
\par 
\par I am also writing a Version 2.0 that will be a Windows GUI for the disassembler.  This will allow for easy graphical entry and manipulation of Control Files, easy source editing, etc.  It will basically be a front-end for the 32-bit Version 1.2 of the dis
assembler.
\par 
\par I have also recently switched my personal machines over to Linux, abanding Microsoft almost entirely.  This means that before long, a Linux version will also be available and may actually beat the work-in-progress Windows version.  Currently, th
is application is a freeware application, but not an open-source application.  I am considering making it open-source when releasing the Linux platform, but haven\rquote t fully decided yet.
\par 
\par As for keeping up with what version is which, basically the first part of the version number will denote its platform \endash 
 1 = DOS, 2 = MS Windows, 3 = Linux Command Prompt, 4 = Linux X Windows GUI, etc.  Also, you might have suggestions or ideas for future versions \endash  please send any suggestions/ideas to me.  And keep an eye on my website for future releases \endash 
 see the }{\i Support}{ section in this document on how to locate my website and how to contact me via email.
\par 
\par Below is a list of what is planned with each version.  Some of these have been put into place, others still have to be worked in:
\par 
\par Version 1.0 \endash  DOS 16-Bit
\par }\pard\plain \s37\li720\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {This version.  Somewhat limited, but it runs in DOS on nearly any machine and is a great entry level version.
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par Version 1.1 \endash  DOS 16-Bit
\par }\pard\plain \s37\li720\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {This was an intermediate stepping stone version that was never released to the public.  It added multiple source files, has \ldblquote spit\rdblquote 
 output mode capabilities, and a few other slight features \endash  but was never refined.
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par 
\par Version 1.2 \endash  DOS 32-Bit
\par }\pard\plain \s37\li720\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {Upgraded to a 32-bit application so there are no memory limits other than the machine\rquote s physical memory.  DFC (Data File Converter) DLL\rquote 
s were added to support any source data file type.  Multiple Source Files is supported, as is multiple Control Files.  It can support the \ldblquote spit\rdblquote  mode of code-seeking.  Mixed number bases is supported in the Control File
.  The disassembler has been converted into a GDC (Generic Disassembly Class) that will later allow easy porting into GenREP (Generic Reverse Engineering Platform) and will fascilitate the development of disassemblers for other processors.  Since there ar
e \ldblquote no memory limits\rdblquote 
, label names can be of any size and there can be as many labels, branch references, indirects, and entry points as needed, and Indirect Data Vectors are supported in addition to Indirect Code Vectors.  All that is missing is a graphical
 front-end.  This version is basically finished except for changing the opcode table to be a hash table of hash tables rather than a hash table of arrays.  It will be released soon.
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par Version 2.0 \endash  Windows 32-Bit (Win95, 98, NT, etc)
\par }\pard\plain \s37\li720\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {This is the graphical front-end that is \ldblquote missing\rdblquote  on Version 1.2.  It will allow editing of source data files, text editing of disassembly output files 
\endash  including keeping comments and user edits separate from disassembly output so that if the disassembler is ever re-run on a file, you don\rquote 
t have to re-edit everything, and a graphical interface for editing and entering the data into the Control File without generating the Control File by hand.
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par Version 3.0 \endash  Linux (Command Prompt)
\par }\pard\plain \s37\li720\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {This will be a port of Version 1.2 into the Linux
 environment.  It is possible that the disassembler might become open-source at this stage to allow migration to other Unix platforms.
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par Version 4.0 \endash  Linux with X-Window GUI
\par }\pard\plain \s37\li720\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {This can be though of as either a port of 2.0 to Linux or as a wrapper for the 3.0 Linux version.
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par 
\par With the advent of GDC, it will be easy in the future for others to create modules for additional processors and easily drop them into the program without having to modify or recompile the main program at all.  Once this gets further alon
g, and the specifications and methodology have been defined, I have in mind releasing a \ldblquote development kit\rdblquote 
 for those wanting to develop disassemblers for other processors.  The kit will be free, but what I ask in exchange is that you submit any additional disassembler modules you create, so they can be provided to the world to use free-of-charge.
\par }\pard\plain \s29\nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {
\par }\pard\plain \nowidctlpar\widctlpar\hyphpar0\adjustright \fs20\cgrid {Enjoy the disassembler.  I hope it proves to be most helpful.  Please visit my website (see the }{\i Support}{ section) and register.  I enjoy tracking the progress of my
 software and like to see how many different countries it ends up in.  You can also \ldblquote vote for\rdblquote  those versions that don\rquote 
t exist yet.  Those with the greatest number of requests will receive a higher priority in the programming/debugging process.
\par 
\par 
\par 
\par }}